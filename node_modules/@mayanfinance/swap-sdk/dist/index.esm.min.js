import ie from"cross-fetch";var d={MAYAN_FORWARDER_CONTRACT:"0x337685fdaB40D39bd02028545a4FfA7D287cC3E2",MAYAN_PROGRAM_ID:"FC4eXxkyrMPTjiYUpp4EAnkmwMbQyZ6NDCh1kfLn6vsf",AUCTION_PROGRAM_ID:"8QJmxZcEzwuYmCPy6XqgN2sHcYCcFq6AEfBMJZZuLo5a",MCTP_PROGRAM_ID:"dkpZqrxHFrhziEMQ931GLtfy11nFkCsfMftH9u6QwBU",SWIFT_PROGRAM_ID:"BLZRi6frs4X4DNLw56V4EXai1b6QVESN1BhHBTYM9VcY",FEE_MANAGER_PROGRAM_ID:"5VtQHnhs2pfVEr68qQsbTRwKh4JV5GTu9mBHgHFxpHeQ",WORMHOLE_PROGRAM_ID:"worm2ZoG2kUd4vFXhvjh93UUH596ayRfgQ2MgjNMTth",CCTP_CORE_PROGRAM_ID:"CCTPmbSD7gX1bxKPAmg77w8oFzNFpaQiQUWD43TKaecd",CCTP_TOKEN_PROGRAM_ID:"CCTPiPYPc6AsJuwueEnWgSgucamXDZwBd53dQ11YiKX3",TOKEN_PROGRAM_ID:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",TOKEN_2022_PROGRAM_ID:"TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb",ASSOCIATED_TOKEN_PROGRAM_ID:"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",SPL_UTILS_PROGRAM_ID:"B96dV3Luxzo6SokJx3xt8i5y8Mb7HRR6Eec8hCjJDT69",LOOKUP_TABLE:"Ff3yi1meWQQ19VPZMzGg6H8JQQeRudiV7QtVtyzJyoht",SUI_MCTP_STATE:"0xb787fe0f7530b4fd2162fa0cc92f4f6c5a97c54b4c5c55eb04ab29f4b803ac9c",SUI_MCTP_FEE_MANAGER_STATE:"0xa1b4a96ce93d36dd0bbce0adc39533a07d2f32928918c80cd6fe7868320978f2",SUI_CCTP_CORE_PACKAGE_ID:"0x08d87d37ba49e785dde270a83f8e979605b03dc552b5548f26fdf2f49bf7ed1b",SUI_CCTP_CORE_STATE:"0xf68268c3d9b1df3215f2439400c1c4ea08ac4ef4bb7d6f3ca6a2a239e17510af",SUI_CCTP_TOKEN_PACKAGE_ID:"0x2aa6c5d56376c371f88a6cc42e852824994993cb9bab8d3e6450cbe3cb32b94e",SUI_CCTP_TOKEN_STATE:"0x45993eecc0382f37419864992c12faee2238f5cfe22b98ad3bf455baf65c8a2f",SUI_WORMHOLE_PACKAGE_ID:"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a",SUI_WORMHOLE_STATE:"0xaeab97f96cf9877fee2883315d459552b2b921edc16d7ceac6eab944dd88919c",SUI_LOGGER_PACKAGE_ID:"0x05680e9030c147b413a489f7891273acc221d49bd061c433e5771bc170fc37ac",EXPLORER_URL:"https://explorer-api.mayan.finance/v3",PRICE_URL:"https://price-api.mayan.finance/v3",RELAYER_URL:"https://relayer-api.mayan.finance/v3",HC_ARBITRUM_BRIDGE:"0x2df1c51e09aecf9cacb7bc98cb1742757f163df7",HC_ARBITRUM_DEPOSIT_PROCESSOR:"0xdDd77e62C848C3334f1148d4F1457FC59ede4E4B",ARBITRUM_USDC_CONTRACT:"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",PAYLOAD_WRITER_PROGRAM_ID:"DwMLtdtJqJQkHzNcrdTBuWHJByJfgpKBnvFvzyKdy3cU"};import{ethers as Qt,zeroPadValue as bt,parseUnits as Fa,formatUnits as va,TypedDataEncoder as xa}from"ethers";import{PublicKey as We,SystemProgram as Vt}from"@solana/web3.js";import{Buffer as Pe}from"buffer";var ft={_format:"hh-sol-artifact-1",contractName:"ERC20Permit",sourceName:"contracts/token/ERC20/extensions/ERC20Permit.sol",abi:[{inputs:[],name:"ECDSAInvalidSignature",type:"error"},{inputs:[{internalType:"uint256",name:"length",type:"uint256"}],name:"ECDSAInvalidSignatureLength",type:"error"},{inputs:[{internalType:"bytes32",name:"s",type:"bytes32"}],name:"ECDSAInvalidSignatureS",type:"error"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"allowance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"}],name:"ERC20InsufficientAllowance",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"}],name:"ERC20InsufficientBalance",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC20InvalidApprover",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC20InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC20InvalidSender",type:"error"},{inputs:[{internalType:"address",name:"spender",type:"address"}],name:"ERC20InvalidSpender",type:"error"},{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"}],name:"ERC2612ExpiredSignature",type:"error"},{inputs:[{internalType:"address",name:"signer",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"ERC2612InvalidSigner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"currentNonce",type:"uint256"}],name:"InvalidAccountNonce",type:"error"},{inputs:[],name:"InvalidShortString",type:"error"},{inputs:[{internalType:"string",name:"str",type:"string"}],name:"StringTooLong",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"EIP712DomainChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"fields",type:"bytes1"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"version",type:"string"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"address",name:"verifyingContract",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256[]",name:"extensions",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],bytecode:"0x",deployedBytecode:"0x",linkReferences:{},deployedLinkReferences:{}};import*as jt from"js-sha3";import{PublicKey as ae}from"@solana/web3.js";import{Buffer as ce}from"buffer";var O=6;function re(e){switch(e){case"ethereum":return 0;case"avalanche":return 1;case"optimism":return 2;case"arbitrum":return 3;case"solana":return 5;case"base":return 6;case"polygon":return 7;case"sui":return 8;case"unichain":return 10;case"linea":return 11;case"sonic":return 13;default:throw new Error("unsupported chain for cctp")}}function Je(e,t){let n=new ae(d.CCTP_CORE_PROGRAM_ID),a=new ae(d.CCTP_TOKEN_PROGRAM_ID),[i]=ae.findProgramAddressSync([ce.from("message_transmitter")],n),[o]=ae.findProgramAddressSync([ce.from("sender_authority")],a),[s]=ae.findProgramAddressSync([ce.from("local_token"),e.toBytes()],a),[r]=ae.findProgramAddressSync([ce.from("token_messenger")],a),[u]=ae.findProgramAddressSync([ce.from("token_minter")],a),p=re(t),[m]=ae.findProgramAddressSync([ce.from("remote_token_messenger"),ce.from(p.toString())],a),[c]=ae.findProgramAddressSync([ce.from("__event_authority")],n),[l]=ae.findProgramAddressSync([ce.from("__event_authority")],a);return{messageTransmitter:i,senderAuthority:o,remoteTokenMessengerKey:m,tokenMessenger:r,tokenMinter:u,eventAuthToken:l,eventAuthCore:c,localToken:s}}var Ba=jt.sha3_256,Na=e=>/^(0x)?[0-9a-fA-F]+::\w+::\w+$/.test(e);function I(e,t){if(t===1)return bt(new We(e).toBytes(),32);if(t===Q.ethereum||t===Q.bsc||t===Q.polygon||t===Q.avalanche||t===Q.arbitrum||t===Q.optimism||t===Q.base||t===Q.unichain||t===Q.linea||t===Q.sonic)return bt(e,32);if(t===Q.aptos&&Na(e))return`0x${Ba(e)}`;if(t===Q.sui){let n=e.startsWith("0x")?e.substring(2):e;if(Pe.from(n,"hex").length!==32)throw new Error("Invalid sui address: "+e);return bt(e,32)}else throw console.log(`Unsupported chain id: ${t}`,e),new Error("Unsupported token chain")}function W(e){return new Uint8Array(Pe.from(e.startsWith("0x")?e.substring(2):e,"hex"))}function D(e,t,n=!1,a=new We(d.TOKEN_PROGRAM_ID),i=new We(d.ASSOCIATED_TOKEN_PROGRAM_ID)){if(!n&&!We.isOnCurve(t.toBuffer()))throw new Error("TokenOwnerOffCurveError");let[o]=We.findProgramAddressSync([t.toBuffer(),a.toBuffer(),e.toBuffer()],i);return o}function Wa(e){return(typeof e=="string"||typeof e=="number")&&e!==""&&e!==null&&!isNaN(Number(e))&&Number.isFinite(Number(e))}function T(e,t){if(e==null)throw new Error("getAmountOfFractionalAmount: Amount is null or undefined");if(typeof e!="string"&&typeof e!="number")throw new Error("getAmountOfFractionalAmount: Amount is not a string or number");if(typeof e=="string"&&e.length===0)throw new Error("getAmountOfFractionalAmount: Amount is empty");if(!Number.isFinite(Number(e)))throw new Error("getAmountOfFractionalAmount: Amount is not a number");if(!Wa(t))throw new Error("getAmountOfFractionalAmount: decimals is not a number");let n=Math.min(8,Number(t)),a=Number(e).toFixed(n+1),i=new RegExp(`^-?\\d+(?:\\.\\d{0,${n}})?`),o=a.match(i);if(!o)throw new Error("getAmountOfFractionalAmount: fixedAmount is null");let s=o[0];return Fa(s,Number(t))}function Yt(e,t){return Number(va(e,t))}var Q={solana:1,ethereum:2,bsc:4,polygon:5,avalanche:6,arbitrum:23,optimism:24,base:30,aptos:22,sui:21,unichain:44,linea:38,hypercore:65e3,sonic:52};function S(e){return Q[e]}var gt={[1]:2,[56]:4,[137]:5,[43114]:6,[42161]:23,[10]:24,[8453]:30,[130]:44,[59144]:38,[146]:52};function $t(e){let t=Q[e],n=Object.keys(gt);for(let a of n)if(gt[a]===t)return Number(a);throw new Error(`Unsupported chain: ${e}`)}function G(e){return gt[e]}var _e=[10,9,2];function Ue(){return _e.join("_")}function Jt(e){return _e[0]<e[0]?!1:_e[0]>e[0]?!0:_e[1]<e[1]?!1:_e[1]>e[1]||_e[2]>=e[2]}function B(e){return e==="solana"?9:18}function zt(e){return e==="solana"?9:8}var Ua=BigInt(2)**BigInt(64)-BigInt(1);function v(e){if(e<BigInt(0)||e>Ua)throw new Error(`Invalid u64: ${e}`);let t=Pe.alloc(8);return t.writeBigUInt64LE(e),t}var j={value:BigInt(0),deadline:0,v:0,r:`0x${Vt.programId.toBuffer().toString("hex")}`,s:`0x${Vt.programId.toBuffer().toString("hex")}`};function ze(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}function he(e,t){return!e||!t?null:e.type==="WH"?t?.solana||null:e.type==="MCTP"||e.type==="SWIFT"?e.toChain==="solana"?t?.solana||null:e.toChain==="sui"?t?.sui||null:t?.evm||null:e.type==="FAST_MCTP"&&e.toChain!=="solana"&&e.toChain!=="sui"?t?.evm||null:e.type==="MONO_CHAIN"?e.fromChain==="solana"?t?.solana||null:e.fromChain==="sui"?t?.sui||null:t?.evm||null:null}var Ze=1,Xe=2,Zt=1,Xt=1,qt=2,en=3;async function La(e,t){let n=new Qt.Contract(e.contract,ft.abi,t),a,i;try{let[s,r]=await Promise.all([n.DOMAIN_SEPARATOR(),n.name()]);a=s,i=r}catch{throw{mayanError:{permitIssue:!0}}}let o={name:i,version:"1",chainId:e.chainId,verifyingContract:e.contract};for(let s=1;s<11;s++)if(o.version=String(s),xa.hashDomain(o).toLowerCase()===a.toLowerCase())return o;throw{mayanError:{permitIssue:!0}}}var Ka={Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]};async function Ga(e,t,n,a,i,o){if(e.standard!=="erc20"&&e.standard!=="hypertoken")throw new Error("Token is not ERC20");if(!e.supportsPermit)throw new Error("Token does not support permit");let s=new Qt.Contract(e.contract,ft.abi,i),[r,u]=await Promise.all([La(e,i),s.nonces(t)]);return{domain:r,types:Ka,value:{owner:t,spender:n,nonce:String(u),value:String(a),deadline:String(o)}}}async function ui(e,t,n){if(!e.hyperCoreParams)throw new Error("Quote does not have hyperCoreParams");if(e.toChain!=="hypercore")throw new Error("Quote toChain is not hypercore");if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase())throw new Error("Quote toToken is not USDC on Arbitrum");let a={name:"USDC",standard:"erc20",symbol:"USDC",mint:"CR4xnGrhsu1fWNPoX4KbTUUtqGMF3mzRLfj4S6YEs1Yo",verified:!0,contract:"0xaf88d065e77c8cc2239327c5edb3a432268e5831",chainId:42161,wChainId:23,decimals:6,logoURI:"http://assets.coingecko.com/coins/images/6319/small/usdc.png?1696506694",coingeckoId:"usd-coin",realOriginContractAddress:"0xaf88d065e77c8cc2239327c5edb3a432268e5831",realOriginChainId:23,supportsPermit:!0,verifiedAddress:"0xaf88d065e77c8cc2239327c5edb3a432268e5831"},[i,o]=await Promise.all([Ga(a,t,d.HC_ARBITRUM_BRIDGE,BigInt(e.hyperCoreParams.depositAmountUSDC64),n,BigInt(e.deadline64)),tn(t,e.toToken.contract)]);if(!o)throw new Error("Because of concurrency, deposit is not possible at the moment, please try again later");return i}function qe(e,t,n){let a=Pe.alloc(109),i=Pe.from(W(t));if(i.length!==20)throw new Error("Invalid destination address length, expected 20 bytes");let o=Pe.from(W(n));if(o.length!==65)throw new Error("Invalid USDC permit signature length, expected 65 bytes");return a.writeBigUInt64BE(T(e.redeemRelayerFee,O),0),a.set(i,8),a.writeBigUInt64BE(BigInt(e.hyperCoreParams.depositAmountUSDC64),28),a.writeBigUInt64BE(BigInt(e.deadline64),36),a.set(o,44),a}function et(e){return Object.entries(e).filter(([t,n])=>n!=null&&!Array.isArray(n)).map(([t,n])=>`${encodeURIComponent(t)}=${encodeURIComponent(n)}`).join("&")}async function se(e){if(e.status.toString().startsWith("5")){let t;try{let n=await e.json();(n?.code||n?.statusCode)&&(n?.message||n?.msg)&&(t={code:n?.code||n?.statusCode,message:n?.message||n?.msg})}catch{t=new Error("Internal server error")}throw t}}async function yi(e){let t=e?`?standard=${e.join(",")}`:"",n=await ie(`${d.PRICE_URL}/tokens${t}`,{method:"GET",redirect:"follow"});if(await se(n),n.status===200)return await n.json();throw new Error("Cannot fetch Mayan tokens!")}async function fi(e,t=!1,n){let a={chain:e,nonPortal:t,standard:n?n?.join(","):void 0},i=await ie(`${d.PRICE_URL}/tokens?${et(a)}`);if(await se(i),i.status===200)return(await i.json())[e];throw new Error("Cannot fetch Mayan tokens!")}function Ha(e,t={wormhole:!0,swift:!0,mctp:!0,shuttle:!0,gasless:!1,onlyDirect:!1,fastMctp:!0,fullList:!1,payload:void 0,monoChain:!0}){let{gasDrop:n,referrerBps:a}=e,i=e.slippageBps;i!=="auto"&&!Number.isFinite(i)&&(i=e.slippage*100);let s={...{wormhole:t.wormhole!==!1,swift:t.swift!==!1,mctp:t.mctp!==!1,shuttle:t.shuttle===!0,fastMctp:t.fastMctp!==!1,gasless:t.gasless===!0,onlyDirect:t.onlyDirect===!0,fullList:t.fullList===!0,payload:typeof t.payload=="string"?t.payload:void 0,monoChain:t.monoChain!==!1},solanaProgram:d.MAYAN_PROGRAM_ID,forwarderAddress:d.MAYAN_FORWARDER_CONTRACT,amountIn:!e.amountIn64&&Number.isFinite(e.amount)?e.amount:void 0,amountIn64:e.amountIn64,fromToken:e.fromToken,fromChain:e.fromChain,toToken:e.toToken,toChain:e.toChain,slippageBps:i,referrer:e.referrer,referrerBps:Number.isFinite(a)?a:void 0,gasDrop:Number.isFinite(n)?n:void 0,sdkVersion:Ue()},r=`${d.PRICE_URL}/quote?`,u=et(s);return r+u}async function bi(e,t={swift:!0,mctp:!0,gasless:!1,onlyDirect:!1}){let n=Ha(e,t),a=await ie(n,{method:"GET",redirect:"follow"});await se(a);let i=await a.json();if(a.status!==200&&a.status!==201)throw{code:i?.code||0,message:i?.msg||i?.message||"Route not found",data:i?.data};if(!Jt(i.minimumSdkVersion))throw{code:9999,message:"Swap SDK is outdated!"};return i.quotes}async function gi(e){let t=await ie(`${d.PRICE_URL}/clock/${e}`,{method:"GET",redirect:"follow"});await se(t);let n=await t.json();if(t.status!==200&&t.status!==201)throw n;return n.clock}async function nn(){let e=await ie(`${d.RELAYER_URL}/active-relayers?solanaProgram=${d.MAYAN_PROGRAM_ID}`,{method:"GET",redirect:"follow"});await se(e);let t=await e.json();if(e.status!==200&&e.status!==201)throw t;return t.suggested}async function de(e){let t=et({...e,sdkVersion:Ue()}),n=await ie(`${d.PRICE_URL}/get-swap/solana?${t}`,{method:"GET",redirect:"follow"});await se(n);let a=await n.json();if(n.status!==200&&n.status!==201)throw a;return a}async function tt(e){let t=JSON.stringify({...e,sdkVersion:Ue()}),n=`${d.PRICE_URL}/get-swap/sui`,a=await ie(n,{method:"POST",redirect:"follow",body:t,headers:{"Content-Type":"application/json"}});await se(a);let i=await a.json();if(a.status!==200&&a.status!==201)throw i;return i}async function an(e,t){let n=await ie(`${d.EXPLORER_URL}/submit/evm`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...e,signature:t},(a,i)=>typeof i=="bigint"?i.toString():i)});await se(n)}async function rn(e){let t=await ie(`${d.EXPLORER_URL}/submit/solana`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({signedTx:e})});await se(t);let n=await t.json();if(t.status!==200&&t.status!==201)throw n;return n}async function tn(e,t){let n=et({destWallet:e,destToken:t,sdkVersion:Ue()}),a=await ie(`${d.EXPLORER_URL}/hypercore/is-allowed?${n}`,{method:"GET",redirect:"follow"});await se(a);let i=await a.json();if(a.status!==200&&a.status!==201)throw i;return i.allowed===!0}import{Contract as la,toBeHex as ya,ZeroAddress as ba}from"ethers";import{PublicKey as Wt,SystemProgram as Lr}from"@solana/web3.js";var sn={_format:"hh-sol-artifact-1",contractName:"MayanSwap",sourceName:"src/MayanSwap.sol",abi:[{inputs:[{internalType:"address",name:"_tokenBridge",type:"address"},{internalType:"address",name:"_weth",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint16",name:"emitterChainId",type:"uint16"},{indexed:!0,internalType:"bytes32",name:"emitterAddress",type:"bytes32"},{indexed:!0,internalType:"uint64",name:"sequence",type:"uint64"}],name:"Redeemed",type:"event"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint8",name:"payloadId",type:"uint8"},{internalType:"bytes32",name:"tokenAddr",type:"bytes32"},{internalType:"uint16",name:"tokenChainId",type:"uint16"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"sourceAddr",type:"bytes32"},{internalType:"uint16",name:"sourceChainId",type:"uint16"},{internalType:"uint64",name:"sequence",type:"uint64"},{internalType:"uint64",name:"amountOutMin",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"uint64",name:"swapFee",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"bytes32",name:"auctionAddr",type:"bytes32"},{internalType:"bool",name:"unwrapRedeem",type:"bool"},{internalType:"bool",name:"unwrapRefund",type:"bool"}],internalType:"struct MayanStructs.Swap",name:"s",type:"tuple"}],name:"encodeSwap",outputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getWeth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseRedeemPayload",outputs:[{components:[{internalType:"uint8",name:"payloadId",type:"uint8"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"uint64",name:"relayerFee",type:"uint64"},{internalType:"bool",name:"unwrap",type:"bool"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes",name:"customPayload",type:"bytes"}],internalType:"struct MayanStructs.Redeem",name:"r",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"redeem",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"redeemAndUnwrap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_pause",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"swapFee",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"}],internalType:"struct MayanSwap.RelayerFees",name:"relayerFees",type:"tuple"},{components:[{internalType:"bytes32",name:"mayanAddr",type:"bytes32"},{internalType:"uint16",name:"mayanChainId",type:"uint16"},{internalType:"bytes32",name:"auctionAddr",type:"bytes32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrer",type:"bytes32"},{internalType:"bytes32",name:"refundAddr",type:"bytes32"}],internalType:"struct MayanSwap.Recepient",name:"recipient",type:"tuple"},{internalType:"bytes32",name:"tokenOutAddr",type:"bytes32"},{internalType:"uint16",name:"tokenOutChainId",type:"uint16"},{components:[{internalType:"uint256",name:"transferDeadline",type:"uint256"},{internalType:"uint64",name:"swapDeadline",type:"uint64"},{internalType:"uint64",name:"amountOutMin",type:"uint64"},{internalType:"bool",name:"unwrap",type:"bool"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes",name:"customPayload",type:"bytes"}],internalType:"struct MayanSwap.Criteria",name:"criteria",type:"tuple"},{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"swap",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address payable",name:"to",type:"address"}],name:"sweepEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"sweepToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"swapFee",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"}],internalType:"struct MayanSwap.RelayerFees",name:"relayerFees",type:"tuple"},{components:[{internalType:"bytes32",name:"mayanAddr",type:"bytes32"},{internalType:"uint16",name:"mayanChainId",type:"uint16"},{internalType:"bytes32",name:"auctionAddr",type:"bytes32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrer",type:"bytes32"},{internalType:"bytes32",name:"refundAddr",type:"bytes32"}],internalType:"struct MayanSwap.Recepient",name:"recipient",type:"tuple"},{internalType:"bytes32",name:"tokenOutAddr",type:"bytes32"},{internalType:"uint16",name:"tokenOutChainId",type:"uint16"},{components:[{internalType:"uint256",name:"transferDeadline",type:"uint256"},{internalType:"uint64",name:"swapDeadline",type:"uint64"},{internalType:"uint64",name:"amountOutMin",type:"uint64"},{internalType:"bool",name:"unwrap",type:"bool"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes",name:"customPayload",type:"bytes"}],internalType:"struct MayanSwap.Criteria",name:"criteria",type:"tuple"}],name:"wrapAndSwapETH",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}]};var Y={_format:"hh-sol-artifact-1",contractName:"MayanForwarder",sourceName:"src/MayanForwarder.sol",abi:[{inputs:[{internalType:"address",name:"_guardian",type:"address"},{internalType:"address[]",name:"_swapProtocols",type:"address[]"},{internalType:"address[]",name:"_mayanProtocols",type:"address[]"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"UnsupportedProtocol",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"protocolData",type:"bytes"}],name:"ForwardedERC20",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"protocolData",type:"bytes"}],name:"ForwardedEth",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SwapAndForwarded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"tokenIn",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"address",name:"swapProtocol",type:"address"},{indexed:!1,internalType:"address",name:"middleToken",type:"address"},{indexed:!1,internalType:"uint256",name:"middleAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"mayanData",type:"bytes"}],name:"SwapAndForwardedERC20",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"address",name:"swapProtocol",type:"address"},{indexed:!1,internalType:"address",name:"middleToken",type:"address"},{indexed:!1,internalType:"uint256",name:"middleAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"mayanData",type:"bytes"}],name:"SwapAndForwardedEth",type:"event"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct MayanForwarder.PermitParams",name:"permitParams",type:"tuple"},{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"protocolData",type:"bytes"}],name:"forwardERC20",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"protocolData",type:"bytes"}],name:"forwardEth",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"mayanProtocols",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextGuardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address payable",name:"to",type:"address"}],name:"rescueEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"rescueToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bool",name:"enabled",type:"bool"}],name:"setMayanProtocol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bool",name:"enabled",type:"bool"}],name:"setSwapProtocol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct MayanForwarder.PermitParams",name:"permitParams",type:"tuple"},{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bytes",name:"swapData",type:"bytes"},{internalType:"address",name:"middleToken",type:"address"},{internalType:"uint256",name:"minMiddleAmount",type:"uint256"},{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"mayanData",type:"bytes"}],name:"swapAndForwardERC20",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bytes",name:"swapData",type:"bytes"},{internalType:"address",name:"middleToken",type:"address"},{internalType:"uint256",name:"minMiddleAmount",type:"uint256"},{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"mayanData",type:"bytes"}],name:"swapAndForwardEth",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"swapProtocols",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],linkReferences:{},deployedLinkReferences:{}};import{Buffer as fa}from"buffer";import{Contract as ht,toBeHex as ee,ZeroAddress as wt}from"ethers";import{SystemProgram as on}from"@solana/web3.js";var Tt={_format:"hh-sol-artifact-1",contractName:"MayanCircle",sourceName:"src/MayanCircle.sol",abi:[{inputs:[{internalType:"address",name:"_cctpTokenMessenger",type:"address"},{internalType:"address",name:"_wormhole",type:"address"},{internalType:"address",name:"_feeManager",type:"address"},{internalType:"uint16",name:"_auctionChainId",type:"uint16"},{internalType:"bytes32",name:"_auctionAddr",type:"bytes32"},{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"CallerAlreadySet",type:"error"},{inputs:[],name:"CallerNotSet",type:"error"},{inputs:[],name:"CctpReceiveFailed",type:"error"},{inputs:[],name:"DeadlineViolation",type:"error"},{inputs:[],name:"DomainAlreadySet",type:"error"},{inputs:[],name:"DomainNotSet",type:"error"},{inputs:[],name:"EmitterAlreadySet",type:"error"},{inputs:[],name:"EthTransferFailed",type:"error"},{inputs:[],name:"InvalidAction",type:"error"},{inputs:[],name:"InvalidAddress",type:"error"},{inputs:[],name:"InvalidAmountOut",type:"error"},{inputs:[],name:"InvalidCaller",type:"error"},{inputs:[],name:"InvalidDestAddr",type:"error"},{inputs:[],name:"InvalidDomain",type:"error"},{inputs:[],name:"InvalidEmitter",type:"error"},{inputs:[],name:"InvalidGasDrop",type:"error"},{inputs:[],name:"InvalidMintRecipient",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidOrder",type:"error"},{inputs:[],name:"InvalidPayload",type:"error"},{inputs:[],name:"InvalidProtocolFee",type:"error"},{inputs:[],name:"InvalidRedeemFee",type:"error"},{inputs:[],name:"InvalidReferrerFee",type:"error"},{inputs:[],name:"MintRecipientAlreadySet",type:"error"},{inputs:[],name:"MintRecipientNotSet",type:"error"},{inputs:[],name:"Paused",type:"error"},{inputs:[],name:"Unauthorized",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint32",name:"sourceDomain",type:"uint32"},{indexed:!1,internalType:"uint64",name:"sourceNonce",type:"uint64"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"OrderFulfilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint32",name:"sourceDomain",type:"uint32"},{indexed:!1,internalType:"uint64",name:"sourceNonce",type:"uint64"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"OrderRefunded",type:"event"},{inputs:[],name:"auctionAddr",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"auctionChainId",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint32",name:"destDomain",type:"uint32"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"bytes",name:"customPayload",type:"bytes"}],name:"bridgeWithFee",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint256",name:"redeemFee",type:"uint256"},{internalType:"uint32",name:"destDomain",type:"uint32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"}],name:"bridgeWithLockedFee",outputs:[{internalType:"uint64",name:"cctpNonce",type:"uint64"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"cctpTokenMessenger",outputs:[{internalType:"contract ITokenMessenger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint16",name:"",type:"uint16"}],name:"chainIdToEmitter",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"consistencyLevel",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChain",type:"uint16"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"}],internalType:"struct MayanCircle.OrderParams",name:"params",type:"tuple"}],name:"createOrder",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint32",name:"",type:"uint32"}],name:"domainToCaller",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeManager",outputs:[{internalType:"contract IFeeManager",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint64",name:"",type:"uint64"}],name:"feeStorage",outputs:[{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"redeemFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{internalType:"bytes",name:"encodedVm",type:"bytes"},{components:[{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"promisedAmount",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{internalType:"bytes32",name:"driver",type:"bytes32"}],internalType:"struct MayanCircle.FulfillParams",name:"params",type:"tuple"},{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bytes",name:"swapData",type:"bytes"}],name:"fulfillOrder",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint16",name:"chainId",type:"uint16"}],name:"getDomain",outputs:[{internalType:"uint32",name:"domain",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"keyToMintRecipient",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"localDomain",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{internalType:"bytes",name:"encodedVm",type:"bytes"},{components:[{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"burnAmount",type:"uint64"},{internalType:"bytes32",name:"burnToken",type:"bytes32"},{internalType:"bytes32",name:"customPayload",type:"bytes32"}],internalType:"struct MayanCircle.BridgeWithFeeParams",name:"bridgeParams",type:"tuple"}],name:"redeemWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"}],name:"redeemWithLockedFee",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint32",name:"cctpNonce",type:"uint32"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"}],name:"refineFee",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"},{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChain",type:"uint16"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"}],internalType:"struct MayanCircle.OrderParams",name:"orderParams",type:"tuple"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"uint16",name:"sourceChainId",type:"uint16"},{internalType:"uint8",name:"protocolBps",type:"uint8"}],internalType:"struct MayanCircle.ExtraParams",name:"extraParams",type:"tuple"}],name:"refund",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address payable",name:"to",type:"address"}],name:"rescueEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"rescueToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],name:"setConsistencyLevel",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint16",name:"chainId",type:"uint16"},{internalType:"uint32",name:"domain",type:"uint32"}],name:"setDomain",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint32",name:"domain",type:"uint32"},{internalType:"bytes32",name:"caller",type:"bytes32"}],name:"setDomainCaller",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint16",name:"chainId",type:"uint16"},{internalType:"bytes32",name:"emitter",type:"bytes32"}],name:"setEmitter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_feeManager",type:"address"}],name:"setFeeManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint32",name:"destDomain",type:"uint32"},{internalType:"address",name:"tokenIn",type:"address"},{internalType:"bytes32",name:"mintRecipient",type:"bytes32"}],name:"setMintRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_pause",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"},{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"uint64",name:"cctpNonce",type:"uint64"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"}],internalType:"struct MayanCircle.UnlockFeeMsg",name:"unlockMsg",type:"tuple"}],name:"unlockFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm1",type:"bytes"},{internalType:"bytes",name:"encodedVm2",type:"bytes"},{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"uint64",name:"cctpNonce",type:"uint64"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"}],internalType:"struct MayanCircle.UnlockFeeMsg",name:"unlockMsg",type:"tuple"},{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"uint64",name:"cctpNonce",type:"uint64"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"}],internalType:"struct MayanCircle.UnlockRefinedFeeMsg",name:"refinedMsg",type:"tuple"}],name:"unlockFeeRefined",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"wormhole",outputs:[{internalType:"contract IWormhole",name:"",type:"address"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],linkReferences:{},deployedLinkReferences:{}};import{Buffer as Va}from"buffer";function Qa(e,t,n,a){let i=G(Number(n)),o=S(e.fromChain),s=S(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(n)}) and quote from chain are not same! ${o} !== ${i}`);let r=e.cheaperChain===e.fromChain;if(r&&a)throw new Error("Bridge lock fee cannot have custom payload");let u=I(t,s),p=T(e.redeemRelayerFee,O),m=T(e.gasDrop,Math.min(B(e.toChain),8)),c=BigInt(e.effectiveAmountIn64),l=re(e.toChain);if(!e.mctpMayanContract)throw new Error("MCTP contract address is missing");let f=e.mctpMayanContract;if(e.toChain==="solana"&&r)throw new Error("Cannot lock fee for transfer to solana");let y=T(e.bridgeFee,B(e.fromChain));return r&&(y=BigInt(0)),{lockFee:r,tokenIn:e.mctpInputContract,amountIn:c,redeemFee:p,gasDrop:m,destAddr:u,destDomain:l,payloadType:a?Xe:Ze,customPayload:a?`0x${Va.from(a).toString("hex")}`:"0x",bridgeFee:y,contractAddress:f}}function pn(e,t,n,a){let i=Qa(e,t,n,a),{contractAddress:o,tokenIn:s,amountIn:r,destAddr:u,lockFee:p,redeemFee:m,gasDrop:c,destDomain:l,customPayload:f,payloadType:y,bridgeFee:b}=i,g=new ht(o,Tt.abi),h,w;return p?h=g.interface.encodeFunctionData("bridgeWithLockedFee",[s,r,c,m,l,u]):h=g.interface.encodeFunctionData("bridgeWithFee",[s,r,m,c,u,l,y,f]),w=ee(b),{to:o,data:h,value:w,_params:i}}function ja(e,t,n,a){let i=G(Number(a)),o=S(e.fromChain),s=S(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${o} !== ${i}`);if(!e.mctpMayanContract)throw new Error("MCTP contract address is missing");let r=e.mctpMayanContract,u=I(t,s),p;n?p=I(n,s):p=I(on.programId.toString(),S("solana"));let m=T(e.redeemRelayerFee,O),c=T(e.gasDrop,Math.min(B(e.toChain),8)),l=BigInt(e.effectiveAmountIn64),f=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),y=BigInt(e.deadline64),b=e.toToken.contract===wt?I(on.programId.toString(),S("solana")):I(e.toChain==="sui"?e.toToken.verifiedAddress:e.toToken.contract,e.toToken.wChainId);return{params:{tokenIn:e.mctpInputContract,amountIn:l,gasDrop:c,destAddr:u,destChain:s,tokenOut:b,minAmountOut:f,deadline:y,redeemFee:m,referrerAddr:p,referrerBps:e.referrerBps||0},bridgeFee:T(e.bridgeFee,B(e.fromChain)),contractAddress:r}}function un(e,t,n,a){let i=ja(e,t,n,a),{contractAddress:o,params:s,bridgeFee:r}=i,p=new ht(o,Tt.abi).interface.encodeFunctionData("createOrder",[s]),m=ee(r);return{to:o,data:p,value:m,_params:i}}function cn(e,t,n,a,i,o){if(e.type!=="MCTP")throw new Error("Quote type is not MCTP");if(!Number.isFinite(Number(a)))throw new Error("Invalid signer chain id");a=Number(a);let s=i||j,r=new ht(d.MAYAN_FORWARDER_CONTRACT,Y.abi),u=T(e.bridgeFee,B(e.fromChain)),p=ee(u);if(e.fromToken.contract===e.mctpInputContract)if(e.hasAuction){if(!Number(e.deadline64))throw new Error("MCTP order requires timeout");let m=un(e,t,n,a),c="forwardERC20",l=[e.fromToken.contract,m._params.params.amountIn,s,m._params.contractAddress,m.data];return{data:r.interface.encodeFunctionData(c,l),to:d.MAYAN_FORWARDER_CONTRACT,value:ee(p),chainId:a,_forwarder:{method:c,params:l}}}else{let m=pn(e,t,a,o),c="forwardERC20",l=[e.fromToken.contract,m._params.amountIn,s,m._params.contractAddress,m.data];return{data:r.interface.encodeFunctionData(c,l),to:d.MAYAN_FORWARDER_CONTRACT,value:ee(p),chainId:a,_forwarder:{method:c,params:l}}}else{let{minMiddleAmount:m,evmSwapRouterAddress:c,evmSwapRouterCalldata:l}=e;if(!m||!c||!l)throw new Error("MCTP swap requires middle amount, router address and calldata");if(e.hasAuction){if(!Number(e.deadline64))throw new Error("MCTP order requires timeout");let f=un(e,t,n,a),y=T(e.minMiddleAmount,O);if(e.fromToken.contract===wt){let b=f._params.params.amountIn;if(b<=u)throw new Error("Amount in is less than bridge fee");u!==BigInt(0)&&(b-=u),p=ee(f._params.params.amountIn);let g="swapAndForwardEth",h=[b,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:ee(p),chainId:a,_forwarder:{method:g,params:h}}}else{let b="swapAndForwardERC20",g=[e.fromToken.contract,f._params.params.amountIn,s,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(b,g),to:d.MAYAN_FORWARDER_CONTRACT,value:ee(p),chainId:a,_forwarder:{method:b,params:g}}}}else{let f=pn(e,t,a,o),y=T(e.minMiddleAmount,O);if(e.fromToken.contract===wt){let b=f._params.amountIn;if(b<=u)throw new Error("Amount in is less than bridge fee");u!==BigInt(0)&&(b-=u),p=ee(f._params.amountIn);let g="swapAndForwardEth",h=[b,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:ee(p),chainId:a,_forwarder:{method:g,params:h}}}else{let b="swapAndForwardERC20",g=[e.fromToken.contract,f._params.amountIn,s,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(b,g),to:d.MAYAN_FORWARDER_CONTRACT,value:ee(p),chainId:a,_forwarder:{method:b,params:g}}}}}}import{Contract as zn,toBeHex as mt,ZeroAddress as dt}from"ethers";import{Keypair as kr,SystemProgram as Zn}from"@solana/web3.js";var mn={_format:"hh-sol-artifact-1",contractName:"MayanSwift",sourceName:"src/MayanSwift.sol",abi:[{inputs:[{internalType:"address",name:"_wormhole",type:"address"},{internalType:"address",name:"_feeManager",type:"address"},{internalType:"uint16",name:"_auctionChainId",type:"uint16"},{internalType:"bytes32",name:"_auctionAddr",type:"bytes32"},{internalType:"bytes32",name:"_solanaEmitter",type:"bytes32"},{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"DeadlineViolation",type:"error"},{inputs:[],name:"DuplicateOrder",type:"error"},{inputs:[],name:"FeesTooHigh",type:"error"},{inputs:[],name:"InvalidAction",type:"error"},{inputs:[],name:"InvalidAmount",type:"error"},{inputs:[],name:"InvalidAuctionMode",type:"error"},{inputs:[],name:"InvalidBpsFee",type:"error"},{inputs:[],name:"InvalidContractSignature",type:"error"},{inputs:[],name:"InvalidDestChain",type:"error"},{inputs:[],name:"InvalidEmitterAddress",type:"error"},{inputs:[],name:"InvalidEmitterChain",type:"error"},{inputs:[],name:"InvalidEvmAddr",type:"error"},{inputs:[],name:"InvalidGasDrop",type:"error"},{inputs:[],name:"InvalidOrderHash",type:"error"},{inputs:[],name:"InvalidOrderStatus",type:"error"},{inputs:[],name:"InvalidSignature",type:"error"},{inputs:[],name:"InvalidSignatureLength",type:"error"},{inputs:[],name:"InvalidSigner",type:"error"},{inputs:[],name:"InvalidSrcChain",type:"error"},{inputs:[],name:"InvalidWormholeFee",type:"error"},{inputs:[],name:"OrderNotExists",type:"error"},{inputs:[],name:"Paused",type:"error"},{inputs:[],name:"SmallAmountIn",type:"error"},{inputs:[],name:"Unauthorized",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint64",name:"sequence",type:"uint64"}],name:"OrderCanceled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"OrderCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint64",name:"sequence",type:"uint64"},{indexed:!1,internalType:"uint256",name:"netAmount",type:"uint256"}],name:"OrderFulfilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"netAmount",type:"uint256"}],name:"OrderRefunded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"OrderUnlocked",type:"event"},{inputs:[],name:"auctionAddr",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"auctionChainId",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{internalType:"bytes32",name:"canceler",type:"bytes32"}],name:"cancelOrder",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"consistencyLevel",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"}],name:"createOrderWithEth",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"},{internalType:"bytes",name:"signedOrderHash",type:"bytes"}],name:"createOrderWithSig",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"}],name:"createOrderWithToken",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"feeManager",outputs:[{internalType:"contract IFeeManager",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"fulfillAmount",type:"uint256"},{internalType:"bytes",name:"encodedVm",type:"bytes"},{internalType:"bytes32",name:"recepient",type:"bytes32"},{internalType:"bool",name:"batch",type:"bool"}],name:"fulfillOrder",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"fulfillAmount",type:"uint256"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"},{internalType:"bytes32",name:"recepient",type:"bytes32"},{internalType:"bool",name:"batch",type:"bool"}],name:"fulfillSimple",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextGuardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"orders",outputs:[{internalType:"enum MayanSwift.Status",name:"status",type:"uint8"},{internalType:"uint64",name:"amountIn",type:"uint64"},{internalType:"uint16",name:"destChainId",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseFulfillPayload",outputs:[{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"bytes32",name:"driver",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"promisedAmount",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"}],internalType:"struct MayanSwift.FulfillMsg",name:"fulfillMsg",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseRefundPayload",outputs:[{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"bytes32",name:"canceler",type:"bytes32"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"}],internalType:"struct MayanSwift.RefundMsg",name:"refundMsg",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseUnlockPayload",outputs:[{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"bytes32",name:"recipient",type:"bytes32"}],internalType:"struct MayanSwift.UnlockMsg",name:"unlockMsg",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"orderHashes",type:"bytes32[]"}],name:"postBatch",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"refundOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],name:"setConsistencyLevel",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_feeManager",type:"address"}],name:"setFeeManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_pause",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"solanaEmitter",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"unlockBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"unlockMsgs",outputs:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"bytes32",name:"recipient",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"unlockSingle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"wormhole",outputs:[{internalType:"contract IWormhole",name:"",type:"address"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],linkReferences:{},deployedLinkReferences:{}};import{Connection as rt,Keypair as za,PublicKey as N,SystemProgram as le,SYSVAR_RENT_PUBKEY as wn,Transaction as It,TransactionInstruction as oe,AddressLookupTableAccount as ln,ComputeBudgetProgram as Za}from"@solana/web3.js";import{Buffer as pe}from"buffer";import{blob as hn,struct as it,u8 as st}from"@solana/buffer-layout";import{sha256 as Xa}from"js-sha256";import qa from"bs58";import{Buffer as nt}from"buffer";import{PublicKey as Ya}from"@solana/web3.js";function $a(e,t){let n=t.subarray(0,8),a=e.instructions.find(r=>nt.from(r.discriminator).toString("hex").toLowerCase()===nt.from(n).toString("hex").toLowerCase());if(!a)throw new Error(`Instruction ${nt.from(n).toString("hex")} not in IDL`);let i=a.args||[],o={},s=8;for(let r of i){let[u,p]=Me(r.type,t,s,e);o[r.name]=u,s=p}return o}function Me(e,t,n,a){if(typeof e=="string")switch(e){case"u8":return[t.readUInt8(n),n+1];case"u16":return[t.readUInt16LE(n),n+2];case"u32":return[t.readUInt32LE(n),n+4];case"u64":return[t.readBigUInt64LE(n),n+8];case"bool":return[t.readUInt8(n)!==0,n+1];case"pubkey":{let i=t.subarray(n,n+32);return[new Ya(i),n+32]}default:throw new Error(`Unknown primitive: ${e}`)}if("array"in e){let[i,o]=e.array,s=[],r=n;for(let u=0;u<o;u++){let[p,m]=Me(i,t,r,a);s.push(p),r=m}return[s,r]}if("defined"in e){let i=a.types?.find(o=>o.name===e.defined.name);if(!i)throw new Error(`Type ${e.defined} not found`);if(i.type.kind==="struct"){let o={},s=n;for(let r of i.type.fields){let[u,p]=Me(r.type,t,s,a);o[r.name]=u,s=p}return[o,s]}else{let o=t.readUInt8(n),s=i.type.variants[o];if(!s)throw new Error(`Invalid enum index ${o}`);let r=n+1,u={variant:s.name};if(s.fields&&s.fields.length){let p=[];for(let m of s.fields){let[c,l]=Me(m.type,t,r,a);p.push(c),r=l}u.fields=p}return[u,r]}}if("option"in e)return t.readUInt8(n)===0?[null,n+1]:Me(e.option,t,n+1,a);if("vec"in e){let i=t.readUInt32LE(n),o=n+4,s=[];for(let r=0;r<i;r++){let[u,p]=Me(e.vec,t,o,a);s.push(u),o=p}return[s,o]}throw new Error(`Unsupported type shape: ${JSON.stringify(e)}`)}function dn(e){return $a(Ja,nt.from(e))}var Ja={address:"JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",metadata:{name:"jupiter",version:"0.1.0",spec:"0.1.0",description:"Jupiter aggregator program"},instructions:[{name:"route",docs:["route_plan Topologically sorted trade DAG"],discriminator:[229,23,203,151,122,227,173,42],accounts:[{name:"token_program"},{name:"user_transfer_authority",signer:!0},{name:"user_source_token_account",writable:!0},{name:"user_destination_token_account",writable:!0},{name:"destination_token_account",writable:!0,optional:!0},{name:"destination_mint"},{name:"platform_fee_account",writable:!0,optional:!0},{name:"event_authority",address:"D8cy77BBepLMngZx6ZukaTff5hCt1HrWyKk3Hnd9oitf"},{name:"program"}],args:[{name:"route_plan",type:{vec:{defined:{name:"RoutePlanStep"}}}},{name:"in_amount",type:"u64"},{name:"quoted_out_amount",type:"u64"},{name:"slippage_bps",type:"u16"},{name:"platform_fee_bps",type:"u8"}],returns:"u64"},{name:"shared_accounts_route",docs:["Route by using program owned token accounts and open orders accounts."],discriminator:[193,32,155,51,65,214,156,129],accounts:[{name:"token_program"},{name:"program_authority"},{name:"user_transfer_authority",signer:!0},{name:"source_token_account",writable:!0},{name:"program_source_token_account",writable:!0},{name:"program_destination_token_account",writable:!0},{name:"destination_token_account",writable:!0},{name:"source_mint"},{name:"destination_mint"},{name:"platform_fee_account",writable:!0,optional:!0},{name:"token_2022_program",optional:!0},{name:"event_authority",address:"D8cy77BBepLMngZx6ZukaTff5hCt1HrWyKk3Hnd9oitf"},{name:"program"}],args:[{name:"id",type:"u8"},{name:"route_plan",type:{vec:{defined:{name:"RoutePlanStep"}}}},{name:"in_amount",type:"u64"},{name:"quoted_out_amount",type:"u64"},{name:"slippage_bps",type:"u16"},{name:"platform_fee_bps",type:"u8"}],returns:"u64"}],types:[{name:"AccountsType",type:{kind:"enum",variants:[{name:"TransferHookA"},{name:"TransferHookB"},{name:"TransferHookReward"},{name:"TransferHookInput"},{name:"TransferHookIntermediate"},{name:"TransferHookOutput"},{name:"SupplementalTickArrays"},{name:"SupplementalTickArraysOne"},{name:"SupplementalTickArraysTwo"}]}},{name:"FeeEvent",type:{kind:"struct",fields:[{name:"account",type:"pubkey"},{name:"mint",type:"pubkey"},{name:"amount",type:"u64"}]}},{name:"RemainingAccountsInfo",type:{kind:"struct",fields:[{name:"slices",type:{vec:{defined:{name:"RemainingAccountsSlice"}}}}]}},{name:"RemainingAccountsSlice",type:{kind:"struct",fields:[{name:"accounts_type",type:{defined:{name:"AccountsType"}}},{name:"length",type:"u8"}]}},{name:"RoutePlanStep",type:{kind:"struct",fields:[{name:"swap",type:{defined:{name:"Swap"}}},{name:"percent",type:"u8"},{name:"input_index",type:"u8"},{name:"output_index",type:"u8"}]}},{name:"Side",type:{kind:"enum",variants:[{name:"Bid"},{name:"Ask"}]}},{name:"Swap",type:{kind:"enum",variants:[{name:"Saber"},{name:"SaberAddDecimalsDeposit"},{name:"SaberAddDecimalsWithdraw"},{name:"TokenSwap"},{name:"Sencha"},{name:"Step"},{name:"Cropper"},{name:"Raydium"},{name:"Crema",fields:[{name:"a_to_b",type:"bool"}]},{name:"Lifinity"},{name:"Mercurial"},{name:"Cykura"},{name:"Serum",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"MarinadeDeposit"},{name:"MarinadeUnstake"},{name:"Aldrin",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"AldrinV2",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"Whirlpool",fields:[{name:"a_to_b",type:"bool"}]},{name:"Invariant",fields:[{name:"x_to_y",type:"bool"}]},{name:"Meteora"},{name:"GooseFX"},{name:"DeltaFi",fields:[{name:"stable",type:"bool"}]},{name:"Balansol"},{name:"MarcoPolo",fields:[{name:"x_to_y",type:"bool"}]},{name:"Dradex",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"LifinityV2"},{name:"RaydiumClmm"},{name:"Openbook",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"Phoenix",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"Symmetry",fields:[{name:"from_token_id",type:"u64"},{name:"to_token_id",type:"u64"}]},{name:"TokenSwapV2"},{name:"HeliumTreasuryManagementRedeemV0"},{name:"StakeDexStakeWrappedSol"},{name:"StakeDexSwapViaStake",fields:[{name:"bridge_stake_seed",type:"u32"}]},{name:"GooseFXV2"},{name:"Perps"},{name:"PerpsAddLiquidity"},{name:"PerpsRemoveLiquidity"},{name:"MeteoraDlmm"},{name:"OpenBookV2",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"RaydiumClmmV2"},{name:"StakeDexPrefundWithdrawStakeAndDepositStake",fields:[{name:"bridge_stake_seed",type:"u32"}]},{name:"Clone",fields:[{name:"pool_index",type:"u8"},{name:"quantity_is_input",type:"bool"},{name:"quantity_is_collateral",type:"bool"}]},{name:"SanctumS",fields:[{name:"src_lst_value_calc_accs",type:"u8"},{name:"dst_lst_value_calc_accs",type:"u8"},{name:"src_lst_index",type:"u32"},{name:"dst_lst_index",type:"u32"}]},{name:"SanctumSAddLiquidity",fields:[{name:"lst_value_calc_accs",type:"u8"},{name:"lst_index",type:"u32"}]},{name:"SanctumSRemoveLiquidity",fields:[{name:"lst_value_calc_accs",type:"u8"},{name:"lst_index",type:"u32"}]},{name:"RaydiumCP"},{name:"WhirlpoolSwapV2",fields:[{name:"a_to_b",type:"bool"},{name:"remaining_accounts_info",type:{option:{defined:{name:"RemainingAccountsInfo"}}}}]},{name:"OneIntro"},{name:"PumpdotfunWrappedBuy"},{name:"PumpdotfunWrappedSell"},{name:"PerpsV2"},{name:"PerpsV2AddLiquidity"},{name:"PerpsV2RemoveLiquidity"},{name:"MoonshotWrappedBuy"},{name:"MoonshotWrappedSell"},{name:"StabbleStableSwap"},{name:"StabbleWeightedSwap"},{name:"Obric",fields:[{name:"x_to_y",type:"bool"}]},{name:"FoxBuyFromEstimatedCost"},{name:"FoxClaimPartial",fields:[{name:"is_y",type:"bool"}]},{name:"SolFi",fields:[{name:"is_quote_to_base",type:"bool"}]},{name:"SolayerDelegateNoInit"},{name:"SolayerUndelegateNoInit"},{name:"TokenMill",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"DaosFunBuy"},{name:"DaosFunSell"},{name:"ZeroFi"},{name:"StakeDexWithdrawWrappedSol"},{name:"VirtualsBuy"},{name:"VirtualsSell"},{name:"Perena",fields:[{name:"in_index",type:"u8"},{name:"out_index",type:"u8"}]},{name:"PumpdotfunAmmBuy"},{name:"PumpdotfunAmmSell"},{name:"Gamma"},{name:"MeteoraDlmmSwapV2",fields:[{name:"remaining_accounts_info",type:{defined:{name:"RemainingAccountsInfo"}}}]},{name:"Woofi"},{name:"MeteoraDammV2"},{name:"MeteoraDynamicBondingCurveSwap"},{name:"StabbleStableSwapV2"},{name:"StabbleWeightedSwapV2"},{name:"RaydiumLaunchlabBuy",fields:[{name:"share_fee_rate",type:"u64"}]},{name:"RaydiumLaunchlabSell",fields:[{name:"share_fee_rate",type:"u64"}]},{name:"BoopdotfunWrappedBuy"},{name:"BoopdotfunWrappedSell"},{name:"Plasma",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"GoonFi",fields:[{name:"is_bid",type:"bool"},{name:"blacklist_bump",type:"u8"}]},{name:"HumidiFi",fields:[{name:"swap_id",type:"u64"},{name:"is_base_to_quote",type:"bool"}]},{name:"MeteoraDynamicBondingCurveSwapWithRemainingAccounts"},{name:"TesseraV",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"RaydiumStable"}]}},{name:"SwapEvent",type:{kind:"struct",fields:[{name:"amm",type:"pubkey"},{name:"input_mint",type:"pubkey"},{name:"input_amount",type:"u64"},{name:"output_mint",type:"pubkey"},{name:"output_amount",type:"u64"}]}},{name:"TokenLedger",type:{kind:"struct",fields:[{name:"token_account",type:"pubkey"},{name:"amount",type:"u64"}]}}]};var er={};function tr(e){return er[e]??=new rt(e),new rt(e)}async function ot({trx:e,connection:t,errorChance:n,extraRpcs:a,options:i,rate:o=8}){let s=null,r=0,u=[t].concat(a.map(tr));for(let p=0;p<o;p++){if(s)try{let c=await Promise.any(u.map(l=>l.getSignatureStatus(s)));if(c&&c.value){if(c.value.err){if(r>=n)return{signature:s,serializedTrx:e};r++}else if(c.value.confirmationStatus==="confirmed")return{signature:s,serializedTrx:e}}}catch(c){console.error(c)}let m=u.map(c=>c.sendRawTransaction(e,i));if(!s)try{s=await Promise.any(m)}catch(c){console.error("Transaction not submitted, remaining attempts:",o-p-1,c)}await ze(1e3)}if(!s)throw new Error("Failed to send transaction");return{signature:s,serializedTrx:e}}function H(e,t,n,a,i=new N(d.TOKEN_PROGRAM_ID),o=new N(d.ASSOCIATED_TOKEN_PROGRAM_ID)){let s=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!1,isWritable:!1},{pubkey:le.programId,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:wn,isSigner:!1,isWritable:!1}];return new oe({keys:s,programId:o,data:pe.from([1])})}var yn=165;async function Ie(e,t,n,a,i,o=new N(d.TOKEN_PROGRAM_ID)){let s=[],r=await e.getMinimumBalanceForRentExemption(yn);return s.push(le.createAccount({fromPubkey:t,newAccountPubkey:i.publicKey,lamports:r,space:yn,programId:o})),s.push(new oe({keys:[{pubkey:i.publicKey,isWritable:!0,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:a,isWritable:!1,isSigner:!1},{pubkey:wn,isWritable:!1,isSigner:!1}],programId:o,data:pe.from([1])})),s}var fn=it([st("instruction"),hn(8,"amount")]);function In(e,t,n,a,i=new N(d.TOKEN_PROGRAM_ID)){let o=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!0,isWritable:!1}],s=pe.alloc(fn.span);return fn.encode({instruction:4,amount:v(a)},s),new oe({keys:o,programId:i,data:s})}var bn=it([st("instruction")]);function Le(e){let t=[{pubkey:e,isSigner:!1,isWritable:!0}],n=pe.alloc(bn.span);return bn.encode({instruction:17},n),new oe({keys:t,programId:new N(d.TOKEN_PROGRAM_ID),data:n})}var gn=it([st("instruction")]);function nr(e,t,n,a=new N(d.TOKEN_PROGRAM_ID)){let i=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1}],o=pe.alloc(gn.span);return gn.encode({instruction:9},o),new oe({keys:i,programId:a,data:o})}var Tn=it([st("instruction"),hn(8,"amount")]);function ye(e,t,n,a,i=new N(d.TOKEN_PROGRAM_ID)){let o=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1}],s=pe.alloc(Tn.span);return Tn.encode({instruction:3,amount:v(a)},s),new oe({keys:o,programId:i,data:s})}var te=new N("So11111111111111111111111111111111111111112");async function $i(e,t,n,a){let i=a??new rt("https://rpc.ankr.com/solana"),o=D(te,e,!1),{blockhash:s,lastValidBlockHeight:r}=await i.getLatestBlockhash(),u=new It({feePayer:e,blockhash:s,lastValidBlockHeight:r}),p=await i.getAccountInfo(o,"finalized");(!p||p.data.length===0)&&u.add(H(e,o,e,te)),u.add(le.transfer({fromPubkey:e,toPubkey:o,lamports:T(t,9)})),u.add(Le(o));let m=await n(u);return await ot({trx:m.serialize(),connection:i,errorChance:1,extraRpcs:[]})}async function Ji(e,t,n,a){let i=a??new rt("https://rpc.ankr.com/solana"),o=D(te,e,!1),s=za.generate(),{blockhash:r,lastValidBlockHeight:u}=await i.getLatestBlockhash(),p=new It({feePayer:e,blockhash:r,lastValidBlockHeight:u}),m=D(te,s.publicKey,!1);p.add(H(e,m,s.publicKey,te)),p.add(ye(o,m,e,T(t,9))),p.add(nr(m,e,s.publicKey)),p.partialSign(s);let c=await n(p);return await ot({trx:c.serialize(),connection:i,errorChance:1,extraRpcs:[]})}function at(e){return new oe({programId:new N(e.programId),keys:e.accounts.map(t=>({pubkey:new N(t.pubkey),isSigner:t.isSigner,isWritable:t.isWritable})),data:pe.from(e.data,"base64")})}async function ke(e,t){return(await t.getMultipleAccountsInfo(e.map(a=>new N(a)))).reduce((a,i,o)=>{let s=e[o];if(i){let r=new ln({key:new N(s),state:ln.deserialize(i.data)});a.push(r)}return a},new Array)}function fe(e,t){let n=at(e.swapInstruction),a=e.cleanupInstruction?at(e.cleanupInstruction):null,i=e.computeBudgetInstructions?e.computeBudgetInstructions.map(at):[],o=e.setupInstructions?e.setupInstructions.map(at):[];return{swapInstruction:n,cleanupInstruction:a,computeBudgetInstructions:i,setupInstructions:o,addressLookupTableAddresses:e.addressLookupTableAddresses}}function $(e){let t=`global:${e}`;return pe.from(Xa.digest(t)).subarray(0,8)}async function An(){let e;try{let t=await nn();e=new N(t)}catch{console.log("Relayer not found, using system program"),e=le.programId}return e}function Cn(e,t,n,a){let i=a.jitoAccount||"Cw8CFyM9FkoMi7K7Crf6HNQqf4uEMzpKw6QNghXLvLkY";return new It({feePayer:new N(e),blockhash:t,lastValidBlockHeight:n}).add(le.transfer({fromPubkey:new N(e),toPubkey:new N(i),lamports:a.tipLamports}))}var Sn=["https://mainnet.block-engine.jito.wtf/api/v1/bundles","https://amsterdam.mainnet.block-engine.jito.wtf/api/v1/bundles","https://frankfurt.mainnet.block-engine.jito.wtf/api/v1/bundles","https://london.mainnet.block-engine.jito.wtf/api/v1/bundles","https://ny.mainnet.block-engine.jito.wtf/api/v1/bundles","https://tokyo.mainnet.block-engine.jito.wtf/api/v1/bundles","https://slc.mainnet.block-engine.jito.wtf/api/v1/bundles"];async function ar(e,t){let n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:t});if(n.status!==200&&n.status!==201)throw console.error("Post Jito bundle failed",e,n.status,n.statusText),new Error("Send Jito bundle failed: "+n.status+" "+n.statusText);{let a=await n.json();return console.log("Post Jito bundle result",e,a.result),a.result}}async function At(e,t,n=!1){try{let a=[];for(let u of e)a.push(u.serialize());let i={jsonrpc:"2.0",id:1,method:"sendBundle",params:[a.map(u=>qa.encode(u))]},o=t.jitoSendUrl?[t.jitoSendUrl]:Sn,s=JSON.stringify(i);return await Promise.any(o.map(u=>ar(u,s)))}catch(a){if(console.error("Send Jito bundle failed",a),n)throw new Error("Send Jito bundle failed")}}async function rr(e,t){let a=0;for(;a<5;)try{let i=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:1,method:"getBundleStatuses",params:[e]})});if(!i.ok)throw new Error(`HTTP error! Status: ${i.status}`);let o=await i.json();if(o.error)throw new Error(`Error getting bundle statuses: ${JSON.stringify(o.error,null,2)}`);return o.result}catch(i){if(a++,await ze(1e3),a>=5)throw new Error(`Failed to fetch bundle statuses after 5 attempts: ${i.message}`)}}async function _n(e,t,n,a,i){let s=Date.now();for(;Date.now()-s<9e4&&await i.getBlockHeight()<=n;){await ze(1050);let r=t.jitoSendUrl?[t.jitoSendUrl]:Sn,u=await Promise.any(r.map(p=>rr([e],p)));if(u&&u.value&&u.value.length>0&&u.value[0]){console.log("===>",u.value[0]);let p=u.value[0].confirmation_status;if(p==="confirmed"||p==="finalized"){let m=await i.getSignatureStatus(a);if(!m||!m.value)continue;if(m.value?.err)throw new Error(`Bundle failed with error: ${m.value.err}`);return}}}throw new Error("Bundle not confirmed, timeout")}async function Pn(e){try{await fetch("https://explorer-api.mayan.finance/v3/submit/jito-bundle",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({bundleId:e})})}catch{}}function ir(e,t){if(e){if(!e.programId.equals(new N(d.TOKEN_PROGRAM_ID))&&!e.programId.equals(new N(d.TOKEN_2022_PROGRAM_ID)))throw new Error("Invalid cleanup instruction:: programId");if(Uint8Array.from(e.data).length!==1)throw new Error("Invalid cleanup instruction:: data");if(Uint8Array.from(e.data)[0]!==9)throw new Error("Invalid cleanup instruction:: data");if(t&&!e.keys[1].pubkey.equals(t))throw new Error("Invalid cleanup instruction:: dest account")}}function sr(e,t){if(!(e.length<1)){if(e.length>6)throw new Error("Invalid setup instruction:: too many instructions");e.forEach(n=>{if(!n.programId.equals(new N(d.ASSOCIATED_TOKEN_PROGRAM_ID))&&!n.programId.equals(le.programId)&&!n.programId.equals(new N(d.TOKEN_PROGRAM_ID))&&!n.programId.equals(new N(d.TOKEN_2022_PROGRAM_ID)))throw new Error("Invalid setup instruction:: programId");if(n.programId.equals(new N(d.ASSOCIATED_TOKEN_PROGRAM_ID))){if(Uint8Array.from(n.data).length===1){if(Uint8Array.from(n.data)[0]!==1)throw new Error("Invalid setup instruction:: data")}else if(Uint8Array.from(n.data).length!==0)throw new Error("Invalid setup instruction:: data")}else if(n.programId.equals(le.programId)){if(!t)throw new Error("Invalid setup instruction:: unknown transfer");let a=D(te,t,!0);if(n.data.readUint32LE()!==2)throw new Error("Invalid setup instruction:: invalid system program instruction");if(!n.keys[1].pubkey.equals(a))throw new Error("Invalid setup instruction:: invalid wrap transfer dest")}else if(n.data.toString("base64")!=="EQ==")throw new Error("Invalid setup instruction:: invalid token program instruction")})}}function or(e,t,n=!1){let a=new N("JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4");if(!e.programId.equals(a))throw new Error("Invalid swap instruction:: programId");if(e.data.subarray(0,8).toString("hex")===$("shared_accounts_route").toString("hex")){if(!e.keys[6].pubkey.equals(t))throw new Error("Invalid swap instruction shared_accounts_route:: dest account")}else if(e.data.subarray(0,8).toString("hex")===$("route").toString("hex")){if(n){if(!e.keys[4].pubkey.equals(a)&&!e.keys[3].pubkey.equals(t))throw new Error("Invalid swap instruction route:: dest account")}else if(!e.keys[4].pubkey.equals(t))throw new Error("Invalid swap instruction route:: dest account")}else throw new Error("Invalid swap instruction:: ix id")}function Mn(e,t){let n=dn(Uint8Array.from(e.data));if(n.in_amount>BigInt(t.effectiveAmountIn64))throw new Error("Invalid swap instruction:: amount in");let a=T(t.minAmountOut,t.toToken.decimals);if(n.quoted_out_amount-n.quoted_out_amount*BigInt(n.slippage_bps)/10000n<a)throw new Error("Invalid swap instruction:: quote expired");if(n.platform_fee_bps!==t.referrerBps)throw new Error("Invalid swap instruction:: platform fee")}function pr(e){e.forEach(t=>{if(!t.programId.equals(Za.programId))throw new Error("Invalid compute budget instruction:: programId");if(Uint8Array.from(t.data)[0]===3&&t.data.readBigUInt64LE(1)>100000000n)throw new Error("Invalid compute budget instruction:: to high tx fee")})}function ue(e,t,n,a,i=!1){pr(e.computeBudgetInstructions),sr(e.setupInstructions,n),or(e.swapInstruction,t,i),ir(e.cleanupInstruction,a)}function Re(e,t,n,a,i,o=new N("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA")){return new oe({keys:[{pubkey:e,isSigner:!0,isWritable:!1},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!1,isWritable:!1}],programId:new N("B96dV3Luxzo6SokJx3xt8i5y8Mb7HRR6Eec8hCjJDT69"),data:$("transfer_all_and_close")})}function Ct(e,t,n,a){let i=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:le.programId,isSigner:!1,isWritable:!1}],o=8+2+4+n.length,s=pe.alloc(o);return s.set($("create_simple"),0),s.writeUint16LE(a,8),s.writeUint32LE(n.length,10),s.set(n,14),new oe({keys:i,programId:new N(d.PAYLOAD_WRITER_PROGRAM_ID),data:s})}function St(e,t,n){let a=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0}],i=8+2,o=pe.alloc(i);return o.set($("close"),0),o.writeUint16LE(n,8),new oe({keys:a,programId:new N(d.PAYLOAD_WRITER_PROGRAM_ID),data:o})}import{Connection as Jn,PublicKey as Z,Keypair as kt,SystemProgram as ct,SYSVAR_CLOCK_PUBKEY as hr,SYSVAR_RENT_PUBKEY as Ir,Transaction as Qn,TransactionInstruction as Ar,ComputeBudgetProgram as Cr,MessageV0 as jn,VersionedTransaction as Rt}from"@solana/web3.js";import{blob as be,struct as Sr,u16 as _r,u8 as xe}from"@solana/buffer-layout";import{Buffer as ge}from"buffer";import{ZeroAddress as Et}from"ethers";import{PublicKey as M,Keypair as Oe,SystemProgram as Ae,SYSVAR_CLOCK_PUBKEY as ur,SYSVAR_RENT_PUBKEY as cr,TransactionInstruction as He,ComputeBudgetProgram as mr}from"@solana/web3.js";import{blob as L,struct as Ve,u16 as Nn,u8 as _t}from"@solana/buffer-layout";import{Buffer as J}from"buffer";import{PublicKey as Ee}from"@solana/web3.js";import{Buffer as pt}from"buffer";function kn(e){let t=new Ee(d.WORMHOLE_PROGRAM_ID),n=new Ee(e),[a]=Ee.findProgramAddressSync([pt.from("Bridge")],t),[i]=Ee.findProgramAddressSync([pt.from("emitter")],n),[o]=Ee.findProgramAddressSync([pt.from("Sequence"),i.toBuffer()],t),[s]=Ee.findProgramAddressSync([pt.from("fee_collector")],t);return{bridgeConfig:a,sequenceKey:o,feeCollector:s,emitter:i}}var Rn=Ve([L(8,"instruction")]);function Ke(e,t,n,a,i){let o=new M(d.WORMHOLE_PROGRAM_ID),s=new M(d.TOKEN_PROGRAM_ID),r=new M(d.CCTP_CORE_PROGRAM_ID),u=new M(d.CCTP_TOKEN_PROGRAM_ID),p=new M(d.MCTP_PROGRAM_ID),m=new M(a),c=new M(n),l=D(c,e,!0),f;i&&i>BigInt(0)?f=D(c,m,!1):f=new M(d.MCTP_PROGRAM_ID);let y=Je(c,t),b=kn(d.MCTP_PROGRAM_ID),g=Oe.generate(),h=Oe.generate(),w=[{pubkey:e,isWritable:!0,isSigner:!1},{pubkey:l,isWritable:!0,isSigner:!1},{pubkey:m,isWritable:!0,isSigner:!0},{pubkey:f,isWritable:!0,isSigner:!1},{pubkey:c,isWritable:!0,isSigner:!1},{pubkey:y.senderAuthority,isWritable:!1,isSigner:!1},{pubkey:y.tokenMessenger,isWritable:!1,isSigner:!1},{pubkey:y.remoteTokenMessengerKey,isWritable:!1,isSigner:!1},{pubkey:y.tokenMinter,isWritable:!1,isSigner:!1},{pubkey:y.localToken,isWritable:!0,isSigner:!1},{pubkey:y.eventAuthToken,isWritable:!1,isSigner:!1},{pubkey:y.messageTransmitter,isWritable:!0,isSigner:!1},{pubkey:g.publicKey,isWritable:!0,isSigner:!0},{pubkey:u,isWritable:!1,isSigner:!1},{pubkey:r,isWritable:!1,isSigner:!1},{pubkey:b.emitter,isWritable:!1,isSigner:!1},{pubkey:b.bridgeConfig,isWritable:!0,isSigner:!1},{pubkey:b.sequenceKey,isWritable:!0,isSigner:!1},{pubkey:b.feeCollector,isWritable:!0,isSigner:!1},{pubkey:h.publicKey,isWritable:!0,isSigner:!0},{pubkey:o,isWritable:!1,isSigner:!1},{pubkey:ur,isWritable:!1,isSigner:!1},{pubkey:cr,isWritable:!1,isSigner:!1},{pubkey:s,isWritable:!1,isSigner:!1},{pubkey:Ae.programId,isWritable:!1,isSigner:!1}],C=J.alloc(Rn.span);return Rn.encode({instruction:$("bridge_with_fee")},C),{instruction:new He({keys:w,data:C,programId:p}),signers:[g,h]}}var En=Ve([L(8,"instruction")]);function On(e,t,n,a,i){let o=[],s=new M(d.TOKEN_PROGRAM_ID),r=new M(d.ASSOCIATED_TOKEN_PROGRAM_ID),u=new M(d.CCTP_CORE_PROGRAM_ID),p=new M(d.CCTP_TOKEN_PROGRAM_ID),m=new M(d.MCTP_PROGRAM_ID),c=new M(a),l=new M(n),f=D(l,e,!0),y=Je(l,t),b=Oe.generate(),[g]=M.findProgramAddressSync([J.from("LOCKED_FEE"),l.toBuffer(),b.publicKey.toBytes()],m),h;i&&i>BigInt(0)?h=D(l,c,!1):h=new M(d.MCTP_PROGRAM_ID);let w=D(l,g,!0);o.push(H(c,w,g,l));let C=[{pubkey:e,isWritable:!0,isSigner:!1},{pubkey:f,isWritable:!0,isSigner:!1},{pubkey:c,isWritable:!0,isSigner:!0},{pubkey:h,isWritable:!0,isSigner:!1},{pubkey:g,isWritable:!0,isSigner:!1},{pubkey:w,isWritable:!0,isSigner:!1},{pubkey:l,isWritable:!0,isSigner:!1},{pubkey:y.senderAuthority,isWritable:!1,isSigner:!1},{pubkey:y.tokenMessenger,isWritable:!1,isSigner:!1},{pubkey:y.remoteTokenMessengerKey,isWritable:!1,isSigner:!1},{pubkey:y.tokenMinter,isWritable:!1,isSigner:!1},{pubkey:y.localToken,isWritable:!0,isSigner:!1},{pubkey:y.eventAuthToken,isWritable:!1,isSigner:!1},{pubkey:y.messageTransmitter,isWritable:!0,isSigner:!1},{pubkey:b.publicKey,isWritable:!0,isSigner:!0},{pubkey:p,isWritable:!1,isSigner:!1},{pubkey:u,isWritable:!1,isSigner:!1},{pubkey:s,isWritable:!1,isSigner:!1},{pubkey:r,isWritable:!1,isSigner:!1},{pubkey:Ae.programId,isWritable:!1,isSigner:!1}],R=J.alloc(En.span);En.encode({instruction:$("bridge_locked_fee")},R);let P=new He({keys:C,data:R,programId:m});return o.push(P),{instructions:o,signer:b}}var Dn=Ve([L(8,"instruction")]);function Fn(e,t,n,a,i){let o=new M(d.TOKEN_PROGRAM_ID),s=new M(d.CCTP_CORE_PROGRAM_ID),r=new M(d.CCTP_TOKEN_PROGRAM_ID),u=new M(d.MCTP_PROGRAM_ID),p=new M(a),m=new M(n),c=D(m,e,!0),l=Je(m,t),f=Oe.generate(),[y]=M.findProgramAddressSync([J.from("ORDER_SOLANA_SOURCE"),e.toBuffer()],u),b;i&&i>BigInt(0)?b=D(m,p,!1):b=new M(d.MCTP_PROGRAM_ID);let g=[{pubkey:e,isWritable:!1,isSigner:!1},{pubkey:c,isWritable:!0,isSigner:!1},{pubkey:p,isWritable:!0,isSigner:!0},{pubkey:b,isWritable:!0,isSigner:!1},{pubkey:m,isWritable:!0,isSigner:!1},{pubkey:y,isWritable:!0,isSigner:!1},{pubkey:l.senderAuthority,isWritable:!1,isSigner:!1},{pubkey:l.tokenMessenger,isWritable:!1,isSigner:!1},{pubkey:l.remoteTokenMessengerKey,isWritable:!1,isSigner:!1},{pubkey:l.tokenMinter,isWritable:!1,isSigner:!1},{pubkey:l.localToken,isWritable:!0,isSigner:!1},{pubkey:l.eventAuthToken,isWritable:!1,isSigner:!1},{pubkey:l.messageTransmitter,isWritable:!0,isSigner:!1},{pubkey:f.publicKey,isWritable:!0,isSigner:!0},{pubkey:r,isWritable:!1,isSigner:!1},{pubkey:s,isWritable:!1,isSigner:!1},{pubkey:new M(d.FEE_MANAGER_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:o,isWritable:!1,isSigner:!1},{pubkey:Ae.programId,isWritable:!1,isSigner:!1}],h=J.alloc(Dn.span);return Dn.encode({instruction:$("create_order")},h),{instruction:new He({keys:g,data:h,programId:u}),signer:f}}var vn=Ve([L(8,"instruction"),L(32,"destAddress"),L(8,"amountInMin"),L(8,"gasDrop"),L(8,"feeRedeem"),L(8,"feeSolana"),Nn("destinationChain"),L(32,"keyRnd"),_t("mode")]);function Ge(e){if(e.mode!=="WITH_FEE"&&e.mode!=="LOCK_FEE")throw new Error("Invalid mode: "+e.mode);let t=new M(e.swapperAddress),n=new M(e.mintAddress),a=D(n,e.ledger,!0),i=S(e.toChain),o=J.from(W(I(e.destinationAddress,i))),s=v(e.amountInMin64),r=v(T(e.gasDrop,Math.min(B(e.toChain),8))),u=v(T(e.feeRedeem,O)),p=v(e.feeSolana),m=e.referrerAddress?J.from(W(I(e.referrerAddress,i))):Ae.programId.toBuffer(),c=[{pubkey:t,isWritable:!0,isSigner:!0},{pubkey:e.ledger,isWritable:!0,isSigner:!1},{pubkey:a,isWritable:!1,isSigner:!1},{pubkey:e.customPayload||new M(d.MCTP_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:Ae.programId,isWritable:!1,isSigner:!1},{pubkey:new M(m),isWritable:!1,isSigner:!1}],l=J.alloc(vn.span);return vn.encode({instruction:$("init_bridge_ledger"),destAddress:o,amountInMin:s,gasDrop:r,feeRedeem:u,feeSolana:p,destinationChain:i,keyRnd:e.randomKey.toBuffer(),mode:e.mode==="WITH_FEE"?1:2},l),new He({keys:c,data:l,programId:new M(d.MCTP_PROGRAM_ID)})}var xn=Ve([L(8,"instruction"),L(32,"destAddress"),L(8,"amountInMin"),L(8,"gasDrop"),L(8,"feeRedeem"),L(8,"feeSolana"),Nn("destinationChain"),L(32,"keyRnd"),_t("mode"),L(32,"tokenOut"),L(8,"amountOutMin"),L(8,"deadline"),L(32,"refAddress"),_t("feeRateRef")]);function Bn(e){let t=new M(e.swapperAddress),n=new M(e.mintAddress),a=D(n,e.ledger,!0),i=S(e.toChain),o=J.from(W(I(e.destinationAddress,i))),s=v(e.amountInMin64),r=v(T(e.gasDrop,Math.min(B(e.toChain),8))),u=v(T(e.feeRedeem,O)),p=v(e.feeSolana),m=J.from(W(I(e.tokenOut,i))),c=e.referrerAddress?J.from(W(I(e.referrerAddress,i))):Ae.programId.toBuffer(),l=v(T(e.amountOutMin,Math.min(8,e.tokenOutDecimals))),f=v(e.deadline),y=[{pubkey:t,isWritable:!0,isSigner:!0},{pubkey:e.ledger,isWritable:!0,isSigner:!1},{pubkey:a,isWritable:!1,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:Ae.programId,isWritable:!1,isSigner:!1}],b=J.alloc(xn.span);return xn.encode({instruction:$("init_order_ledger"),destAddress:o,amountInMin:s,gasDrop:r,feeRedeem:u,feeSolana:p,destinationChain:i,keyRnd:e.randomKey.toBuffer(),mode:3,tokenOut:m,refAddress:c,amountOutMin:l,deadline:f,feeRateRef:e.feeRateRef},b),new He({keys:y,data:b,programId:new M(d.MCTP_PROGRAM_ID)})}async function Wn(e,t,n,a,i,o={}){let s=o?.forceSkipCctpInstructions||!1,r=o?.allowSwapperOffCurve||!1;if(e.toChain==="solana")throw new Error("Unsupported destination chain: "+e.toChain);let u=[],p=[],m=[],c=[],l=[],f=[],y=[],b=Oe.generate(),g=null;u.push(d.LOOKUP_TABLE);let h=new M(d.MCTP_PROGRAM_ID),w=new M(t),C=Oe.generate(),R=e.deadline64?BigInt(e.deadline64):BigInt(0);if(e.hasAuction&&!Number(e.deadline64))throw new Error("Swap mode requires a timeout");let P=e.hasAuction?"LEDGER_ORDER":"LEDGER_BRIDGE",[_]=M.findProgramAddressSync([J.from(P),w.toBytes(),C.publicKey.toBytes()],h),k=D(new M(e.mctpInputContract),_,!0),F=e.cheaperChain==="solana"?"LOCK_FEE":"WITH_FEE",U=e.toChain==="sui"?e.toToken.verifiedAddress:e.toToken.contract;if(e.fromToken.contract===e.mctpInputContract){let A=BigInt(s?e.solanaRelayerFee64:0);if(e.suggestedPriorityFee>0&&p.push(mr.setComputeUnitPrice({microLamports:e.suggestedPriorityFee})),p.push(H(w,k,_,new M(e.mctpInputContract))),p.push(ye(D(new M(e.mctpInputContract),w,r),k,w,BigInt(e.effectiveAmountIn64))),e.hasAuction){if(p.push(Bn({ledger:_,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:C.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:A,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:BigInt(e.effectiveAmountIn64),tokenOut:U,tokenOutDecimals:e.toToken.decimals,referrerAddress:a,amountOutMin:e.minAmountOut,deadline:R,feeRateRef:e.referrerBps})),!s){let{instruction:E,signer:K}=Fn(_,e.toChain,e.mctpInputContract,t,A);p.push(E),m.push(K)}}else if(p.push(Ge({ledger:_,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:C.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:A,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:BigInt(e.effectiveAmountIn64),mode:F,referrerAddress:a})),!s)if(F==="WITH_FEE"){let{instruction:E,signers:K}=Ke(_,e.toChain,e.mctpInputContract,t,A);p.push(E),m.push(...K)}else{let{instructions:E,signer:K}=On(_,e.toChain,e.mctpInputContract,t,A);p.push(...E),m.push(K)}}else{let A=await de({minMiddleAmount:e.minMiddleAmount,middleToken:e.mctpInputContract,userWallet:t,userLedger:_.toString(),slippageBps:e.slippageBps,fromToken:e.fromToken.contract,amountIn64:e.effectiveAmountIn64,depositMode:e.hasAuction?"SWAP":F,fillMaxAccounts:o?.separateSwapTx||!1,tpmTokenAccount:o?.separateSwapTx?b.publicKey.toString():null}),E=fe(A,i);o?.separateSwapTx&&A.maxAccountsFilled?(ue(E,b.publicKey,w),y=await Ie(i,w,new M(e.mctpInputContract),w,b),f.push(...E.computeBudgetInstructions),E.setupInstructions&&f.push(...E.setupInstructions),f.push(E.swapInstruction),E.cleanupInstruction&&f.push(E.cleanupInstruction),l.push(...E.addressLookupTableAddresses),p.push(H(w,k,_,new M(e.mctpInputContract))),p.push(Re(w,new M(e.mctpInputContract),b.publicKey,k,w))):(ue(E,k,w),p.push(...E.computeBudgetInstructions),E.setupInstructions&&p.push(...E.setupInstructions),p.push(E.swapInstruction),E.cleanupInstruction&&p.push(E.cleanupInstruction),u.push(...E.addressLookupTableAddresses));let K=f.length>0?BigInt(0):BigInt(e.solanaRelayerFee64);if(e.hasAuction){if(p.push(Bn({ledger:_,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:C.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:K,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:T(e.minMiddleAmount,O),tokenOut:U,tokenOutDecimals:e.toToken.decimals,referrerAddress:a,amountOutMin:e.minAmountOut,deadline:R,feeRateRef:e.referrerBps})),f.length>0){let{instruction:X,signer:V}=Fn(_,e.toChain,e.mctpInputContract,t,K);p.push(X),m.push(V)}}else if(p.push(Ge({ledger:_,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:C.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:K,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:T(e.minMiddleAmount,O),mode:F,referrerAddress:a})),f.length>0)if(F==="WITH_FEE"){let{instruction:X,signers:V}=Ke(_,e.toChain,e.mctpInputContract,t,K);p.push(X),m.push(...V)}else{let{instructions:X,signer:V}=On(_,e.toChain,e.mctpInputContract,t,K);p.push(...X),m.push(V)}}let x=await ke(u.concat(l),i);if(c=x.slice(0,u.length),f.length>0){let A=x.slice(u.length);g={messageV0:{payerKey:w,instructions:f,addressLookupTableAccounts:A},createTmpTokenAccountIxs:y,tmpTokenAccount:b}}return{instructions:p,signers:m,lookupTables:c,swapMessageV0Params:g}}import{PublicKey as me,Keypair as Un,SystemProgram as De,TransactionInstruction as dr,ComputeBudgetProgram as lr}from"@solana/web3.js";import{blob as q,struct as yr,u16 as fr,u8 as ut}from"@solana/buffer-layout";import{Buffer as z}from"buffer";import{ethers as br,ZeroAddress as Fe}from"ethers";function Pt(e,t,n,a,i){let s=z.alloc(239),r=0,u=S(e.fromChain),p=z.from(W(I(t,u)));s.set(p,0),r+=32,s.writeUInt16BE(u,r),r+=2;let m=e.swiftInputContract===Fe?I(De.programId.toString(),S("solana")):I(e.swiftInputContract,u),c=z.from(W(m));s.set(c,r),r+=32;let l=S(e.toChain),f=z.from(W(I(n,l)));s.set(f,r),r+=32,s.writeUInt16BE(l,r),r+=2;let y=e.toToken.contract===Fe?I(De.programId.toString(),S("solana")):I(e.toToken.contract,l),b=z.from(W(y));s.set(b,r),r+=32,s.writeBigUInt64BE(T(e.minAmountOut,Math.min(e.toToken.decimals,8)),r),r+=8,s.writeBigUInt64BE(T(e.gasDrop,Math.min(B(e.toChain),8)),r),r+=8,s.writeBigUInt64BE(BigInt(e.cancelRelayerFee64),r),r+=8,s.writeBigUInt64BE(BigInt(e.refundRelayerFee64),r),r+=8,s.writeBigUInt64BE(BigInt(e.deadline64),r),r+=8;let g=a?z.from(W(I(a,l))):De.programId.toBuffer();s.set(g,r),r+=32,s.writeUInt8(e.referrerBps,r),r+=1;let h=e.protocolBps;s.writeUInt8(h,r),r+=1,s.writeUInt8(e.swiftAuctionMode,r),r+=1;let w=z.from(W(i));if(s.set(w,r),r+=32,r!==239)throw new Error(`Invalid order data size: ${r}`);let C=br.keccak256(s);return z.from(W(C))}var Ln=yr([q(8,"instruction"),q(8,"amountInMin"),ut("nativeInput"),q(8,"feeSubmit"),q(32,"destAddress"),fr("destinationChain"),q(32,"tokenOut"),q(8,"amountOutMin"),q(8,"gasDrop"),q(8,"feeCancel"),q(8,"feeRefund"),q(8,"deadline"),q(32,"refAddress"),ut("feeRateRef"),ut("feeRateMayan"),ut("auctionMode"),q(32,"randomKey")]);function gr(e){let{quote:t}=e,n=t.swiftInputContract===Fe?te:new me(t.swiftInputContract),a=S(t.toChain);if(a!==t.toToken.wChainId)throw new Error(`Destination chain ID mismatch: ${a} != ${t.toToken.wChainId}`);let i=[{pubkey:e.trader,isWritable:!1,isSigner:!0},{pubkey:e.relayer,isWritable:!0,isSigner:!0},{pubkey:e.state,isWritable:!0,isSigner:!1},{pubkey:e.stateAccount,isWritable:!0,isSigner:!1},{pubkey:e.relayerAccount,isWritable:!0,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:new me(d.FEE_MANAGER_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:new me(d.TOKEN_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:De.programId,isWritable:!1,isSigner:!1}],o=z.alloc(Ln.span),s=e.referrerAddress?z.from(W(I(e.referrerAddress,a))):De.programId.toBuffer(),r=t.fromToken.contract===t.swiftInputContract?BigInt(t.effectiveAmountIn64):T(t.minMiddleAmount,t.swiftInputDecimals);return Ln.encode({instruction:$("init_order"),amountInMin:v(r),nativeInput:t.swiftInputContract===Fe?1:0,feeSubmit:v(BigInt(t.submitRelayerFee64)),destAddress:z.from(W(I(e.destinationAddress,a))),destinationChain:a,tokenOut:z.from(W(I(t.toToken.contract,a))),amountOutMin:v(T(t.minAmountOut,Math.min(t.toToken.decimals,8))),gasDrop:v(T(t.gasDrop,Math.min(B(t.toChain),8))),feeCancel:v(BigInt(t.cancelRelayerFee64)),feeRefund:v(BigInt(t.refundRelayerFee64)),deadline:v(e.deadline),refAddress:s,feeRateRef:t.referrerBps,feeRateMayan:t.protocolBps,auctionMode:t.swiftAuctionMode,randomKey:e.randomKey.toBuffer()},o),new dr({keys:i,data:o,programId:new me(d.SWIFT_PROGRAM_ID)})}async function Kn(e,t,n,a,i,o={}){if(e.type!=="SWIFT")throw new Error("Unsupported quote type for Swift: "+e.type);if(e.toChain==="solana")throw new Error("Unsupported destination chain: "+e.toChain);let s=o.allowSwapperOffCurve||!1,r=[],u=[],p=[];p.push(d.LOOKUP_TABLE);let m=[],c=[],l=[],f=Un.generate(),y=null,b=new me(d.SWIFT_PROGRAM_ID),g=new me(t),h=Un.generate();if(!Number(e.deadline64))throw new Error("Swift mode requires a timeout");let w=BigInt(e.deadline64),C=Pt(e,t,n,a,h.publicKey.toBuffer().toString("hex")),[R]=me.findProgramAddressSync([z.from("STATE_SOURCE"),C],b),P=e.swiftInputContract===Fe?te:new me(e.swiftInputContract),_=D(P,R,!0),k=e.gasless?new me(e.relayer):g,F=D(P,k,!1);if(e.fromToken.contract===e.swiftInputContract)e.suggestedPriorityFee>0&&r.push(lr.setComputeUnitPrice({microLamports:e.suggestedPriorityFee})),r.push(H(k,_,R,P)),e.swiftInputContract===Fe?r.push(De.transfer({fromPubkey:g,toPubkey:_,lamports:BigInt(e.effectiveAmountIn64)}),Le(_)):r.push(ye(D(P,g,s),_,g,BigInt(e.effectiveAmountIn64)));else{let x=await de({minMiddleAmount:e.minMiddleAmount,middleToken:e.swiftInputContract,userWallet:t,slippageBps:e.slippageBps,fromToken:e.fromToken.contract,amountIn64:e.effectiveAmountIn64,depositMode:e.gasless?"SWIFT_GASLESS":"SWIFT",orderHash:`0x${C.toString("hex")}`,fillMaxAccounts:o?.separateSwapTx||!1,tpmTokenAccount:o?.separateSwapTx?f.publicKey.toString():null}),A=fe(x,i);o?.separateSwapTx&&x.maxAccountsFilled?(ue(A,f.publicKey,g),l=await Ie(i,k,P,g,f),c.push(...A.computeBudgetInstructions),A.setupInstructions&&c.push(...A.setupInstructions),c.push(A.swapInstruction),A.cleanupInstruction&&c.push(A.cleanupInstruction),m.push(...A.addressLookupTableAddresses),r.push(H(k,_,R,P)),r.push(Re(g,P,f.publicKey,_,k))):(r.push(...A.computeBudgetInstructions),A.setupInstructions&&r.push(...A.setupInstructions),r.push(A.swapInstruction),A.cleanupInstruction&&r.push(A.cleanupInstruction),p.push(...A.addressLookupTableAddresses))}r.push(gr({quote:e,state:R,trader:g,stateAccount:_,randomKey:h.publicKey,relayerAccount:F,relayer:k,destinationAddress:n,deadline:w,referrerAddress:a}));let U=await ke(p.concat(m),i);if(u=U.slice(0,p.length),c.length>0){let x=U.slice(p.length);y={messageV0:{payerKey:k,instructions:c,addressLookupTableAccounts:x},createTmpTokenAccountIxs:l,tmpTokenAccount:f}}return{instructions:r,signers:[],lookupTables:u,swapMessageV0Params:y}}import Yn from"bs58";import{PublicKey as Ce,Keypair as Gn,ComputeBudgetProgram as Tr}from"@solana/web3.js";import{Buffer as Mt}from"buffer";async function Hn(e,t,n,a,i,o={}){if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase()||e.type!=="MCTP")throw new Error("Unsupported quote type for USDC deposit: "+e.type);if(!o?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(!Number(e.deadline64))throw new Error("HyperCore deposit requires timeout");let s=o.allowSwapperOffCurve||!1,r=[],u=[],p=[],m=[];m.push(d.LOOKUP_TABLE);let c=[],l=[],f=[],y=Gn.generate(),b=null,g=new Ce(t),h=new Ce(e.hyperCoreParams.initiateTokenContract),w=Math.floor(Math.random()*65e3),[C]=Ce.findProgramAddressSync([Mt.from("PAYLOAD"),g.toBuffer(),(()=>{let x=Mt.alloc(2);return x.writeUInt16LE(w,0),x})()],new Ce(d.PAYLOAD_WRITER_PROGRAM_ID)),R=qe(e,n,o.usdcPermitSignature),P=Gn.generate(),_=new Ce(d.MCTP_PROGRAM_ID),[k]=Ce.findProgramAddressSync([Mt.from("LEDGER_BRIDGE"),g.toBytes(),P.publicKey.toBytes()],_),F=D(h,k,!0);if(e.fromToken.contract===e.hyperCoreParams.initiateTokenContract){e.suggestedPriorityFee>0&&r.push(Tr.setComputeUnitPrice({microLamports:e.suggestedPriorityFee})),r.push(H(g,F,k,h)),r.push(ye(D(h,g,s),F,g,BigInt(e.hyperCoreParams.bridgeAmountUSDC64))),r.push(Ct(g,C,R,w)),r.push(Ge({ledger:k,randomKey:P.publicKey,swapperAddress:g.toString(),mintAddress:h.toString(),mode:"WITH_FEE",feeSolana:BigInt(0),amountInMin64:BigInt(e.hyperCoreParams.bridgeAmountUSDC64),customPayload:C,destinationAddress:d.HC_ARBITRUM_DEPOSIT_PROCESSOR,referrerAddress:a,feeRedeem:0,gasDrop:e.hyperCoreParams.failureGasDrop,toChain:"arbitrum"}));let{instruction:x,signers:A}=Ke(k,"arbitrum",e.hyperCoreParams.initiateTokenContract,g.toString(),BigInt(0));r.push(x),u.push(...A),r.push(St(g,C,w))}else{let x=await de({minMiddleAmount:e.minMiddleAmount,middleToken:e.hyperCoreParams.initiateTokenContract,userWallet:g.toString(),slippageBps:e.slippageBps,fromToken:e.fromToken.contract,amountIn64:e.effectiveAmountIn64,depositMode:"HC_USDC",fillMaxAccounts:o?.separateSwapTx||!1,tpmTokenAccount:y.publicKey.toString()}),A=fe(x,i);if(o?.separateSwapTx&&x.maxAccountsFilled)ue(A,y.publicKey,g),f=await Ie(i,g,h,g,y),l.push(...A.computeBudgetInstructions),A.setupInstructions&&l.push(...A.setupInstructions),l.push(A.swapInstruction),A.cleanupInstruction&&l.push(A.cleanupInstruction),c.push(...A.addressLookupTableAddresses);else{ue(A,y.publicKey,g),r.push(...A.computeBudgetInstructions);let Be=await Ie(i,g,h,g,y);r.push(...Be),u.push(y),A.setupInstructions&&r.push(...A.setupInstructions),r.push(A.swapInstruction),A.cleanupInstruction&&r.push(A.cleanupInstruction),m.push(...A.addressLookupTableAddresses)}let E=l.length>0?BigInt(0):BigInt(e.solanaRelayerFee64),K=BigInt(e.hyperCoreParams.bridgeAmountUSDC64);l.length>0&&(K=K-BigInt(e.solanaRelayerFee64)),r.push(H(g,F,k,new Ce(e.mctpInputContract))),r.push(ye(y.publicKey,F,g,K));let X=D(h,g,s),V=await i.getAccountInfo(X);if((!V||!V.data)&&r.push(H(g,X,g,h)),r.push(Re(g,h,y.publicKey,X,g)),r.push(Ct(g,C,R,w)),r.push(Ge({ledger:k,swapperAddress:g.toString(),mintAddress:h.toString(),randomKey:P.publicKey,mode:"WITH_FEE",feeSolana:E,amountInMin64:K,customPayload:C,destinationAddress:d.HC_ARBITRUM_DEPOSIT_PROCESSOR,referrerAddress:a,feeRedeem:0,gasDrop:e.hyperCoreParams.failureGasDrop,toChain:"arbitrum"})),r.push(St(g,C,w)),l.length>0){let{instruction:Be,signers:Ne}=Ke(k,"arbitrum",e.hyperCoreParams.initiateTokenContract,g.toString(),BigInt(0));r.push(Be),u.push(...Ne)}}let U=await ke(m.concat(c),i);if(p=U.slice(0,m.length),l.length>0){let x=U.slice(m.length);b={messageV0:{payerKey:g,instructions:l,addressLookupTableAccounts:x},createTmpTokenAccountIxs:f,tmpTokenAccount:y}}return{instructions:r,signers:u,lookupTables:p,swapMessageV0Params:b}}import{PublicKey as ve}from"@solana/web3.js";import{ZeroAddress as wr}from"ethers";async function Vn(e,t,n,a,i,o={}){if(e.type!=="MONO_CHAIN")throw new Error("Unsupported quote type for mono chain: "+e.type);if(e.fromChain!=="solana")throw new Error("Unsupported destination chain for mono chain: "+e.fromChain);if(e.toChain!=="solana")throw new Error("Unsupported destination chain for mono chain: "+e.toChain);if(e.fromToken.contract===e.toToken.contract)throw new Error("From token and to token are the same: "+e.fromToken.contract);if(n.startsWith("0x"))throw new Error("Destination address should not be EVM address");try{new ve(n)}catch{throw new Error("Invalid destination address: "+n)}let s=[],r=[],u=[],p=new ve(t),m=new ve(n),c=e.toToken.contract===wr?te:new ve(e.toToken.contract),l=D(c,m,!0,e.toToken.standard==="spl2022"?new ve(d.TOKEN_2022_PROGRAM_ID):new ve(d.TOKEN_PROGRAM_ID)),f=T(e.expectedAmountOut,e.toToken.decimals),y=await de({userWallet:t,destinationWallet:n,slippageBps:e.slippageBps,fromToken:e.fromToken.contract,middleToken:e.toToken.contract,amountIn64:e.effectiveAmountIn64,expectedAmountOut64:String(f),depositMode:"MONO_CHAIN",referrerAddress:a,referrerBps:e.referrerBps}),b=fe(y,i);return ue(b,l,p,m,p.equals(m)),Mn(b.swapInstruction,e),s.push(...b.computeBudgetInstructions),b.setupInstructions&&s.push(...b.setupInstructions),s.push(b.swapInstruction),b.cleanupInstruction&&s.push(b.cleanupInstruction),u.push(...b.addressLookupTableAddresses),{instructions:s,signers:[],lookupTables:r,swapMessageV0Params:null}}var Pr=420,$n=Sr([xe("instruction"),xe("stateNonce"),be(8,"amount"),be(8,"minAmountOut"),be(8,"deadline"),be(8,"feeSwap"),be(8,"feeReturn"),be(8,"feeCancel"),be(8,"gasDrop"),_r("destinationChain"),be(32,"destinationAddress"),xe("unwrapRedeem"),xe("unwrapRefund"),xe("mayanFeeNonce"),xe("referrerFeeNonce")]);async function Mr(e,t,n,a,i,o={}){let s=he(e,a);if(e.fromChain==="hypercore")throw new Error("HyperCore as source chain is not supported in Solana");if(e.toChain==="hypercore")return Hn(e,t,n,s,i,o);if(e.type==="MCTP")return Wn(e,t,n,s,i,o);if(e.type==="SWIFT")return Kn(e,t,n,s,i,o);if(e.type==="MONO_CHAIN")return Vn(e,t,n,s,i,o);let r=[],u=i??new Jn("https://rpc.ankr.com/solana"),p=new Z(d.MAYAN_PROGRAM_ID),m=new Z(d.TOKEN_PROGRAM_ID),c=new Z(t),l=new Z(d.AUCTION_PROGRAM_ID);e.suggestedPriorityFee>0&&r.push(Cr.setComputeUnitPrice({microLamports:e.suggestedPriorityFee}));let f;s?f=new Z(s):f=ct.programId;let[y,b]=Z.findProgramAddressSync([ge.from("MAYANFEE")],p),[g,h]=Z.findProgramAddressSync([ge.from("REFERRERFEE"),f.toBuffer()],p),w=kt.generate(),C=kt.generate(),[R,P]=Z.findProgramAddressSync([ge.from("V2STATE"),ge.from(w.publicKey.toBytes()),ge.from(C.publicKey.toBytes())],p),_=new Z(e.fromToken.mint),k=new Z(e.toToken.mint),F=D(_,c),U=D(_,R,!0),[[x,A],E,K]=await Promise.all([u.getMultipleAccountsInfo([F,U],"finalized"),u.getMinimumBalanceForRentExemption(Pr),An()]);(!x||x.data.length===0)&&r.push(H(c,F,c,_)),(!A||A.data.length===0)&&r.push(H(c,U,R,_)),e.fromToken.contract===Et&&(r.push(ct.transfer({fromPubkey:c,toPubkey:F,lamports:BigInt(e.effectiveAmountIn64)})),r.push(Le(F)));let X=BigInt(e.effectiveAmountIn64),V=kt.generate();r.push(In(F,V.publicKey,c,X)),r.push(ct.transfer({fromPubkey:c,toPubkey:V.publicKey,lamports:E}));let Be=[{pubkey:V.publicKey,isWritable:!1,isSigner:!0},{pubkey:w.publicKey,isWritable:!1,isSigner:!0},{pubkey:C.publicKey,isWritable:!1,isSigner:!0},{pubkey:R,isWritable:!0,isSigner:!1},{pubkey:F,isWritable:!0,isSigner:!1},{pubkey:c,isWritable:!1,isSigner:!1},{pubkey:U,isWritable:!0,isSigner:!1},{pubkey:_,isWritable:!1,isSigner:!1},{pubkey:k,isWritable:!1,isSigner:!1},{pubkey:l,isWritable:!1,isSigner:!1},{pubkey:f,isWritable:!1,isSigner:!1},{pubkey:y,isWritable:!1,isSigner:!1},{pubkey:g,isWritable:!1,isSigner:!1},{pubkey:V.publicKey,isWritable:!0,isSigner:!0},{pubkey:K,isWritable:!1,isSigner:!1},{pubkey:hr,isWritable:!1,isSigner:!1},{pubkey:Ir,isWritable:!1,isSigner:!1},{pubkey:m,isWritable:!1,isSigner:!1},{pubkey:ct.programId,isWritable:!1,isSigner:!1}],Ne=S(e.toChain);if(Ne===1){let yt=await u.getAccountInfo(new Z(n));if(yt&&yt.owner&&yt.owner.equals(m))throw new Error("Destination address is not about token account. It should be a owner address")}let Aa=ge.from(W(I(n,Ne))),Ca=T(e.minAmountOut,e.mintDecimals.to),Sa=T(e.swapRelayerFee,e.mintDecimals.from),_a=T(e.redeemRelayerFee,e.mintDecimals.to),Pa=T(e.refundRelayerFee,e.mintDecimals.from),Ma=T(e.gasDrop,zt(e.toChain)),ka=e.toToken.contract===Et,Ra=e.fromToken.contract===Et;if(!Number(e.deadline64))throw new Error("Deadline is not valid");let Ea=BigInt(e.deadline64),Ht=ge.alloc($n.span),Oa={instruction:101,stateNonce:P,amount:v(X),minAmountOut:v(Ca),deadline:v(Ea),feeSwap:v(Sa),feeReturn:v(_a),feeCancel:v(Pa),gasDrop:v(Ma),destinationChain:Ne,destinationAddress:Aa,unwrapRedeem:ka?1:0,unwrapRefund:Ra?1:0,mayanFeeNonce:b,referrerFeeNonce:h};$n.encode(Oa,Ht);let Da=new Ar({keys:Be,data:Ht,programId:p});return r.push(Da),{instructions:r,signers:[V,w,C],lookupTables:[],swapMessageV0Params:null}}async function Eo(e,t,n,a,i,o,s,r,u,p){let m=o??new Jn("https://rpc.ankr.com/solana"),c=!!(!e.gasless&&u&&u.tipLamports>0&&u.signAllTransactions),{instructions:l,signers:f,lookupTables:y,swapMessageV0Params:b}=await Mr(e,t,n,a,o,{allowSwapperOffCurve:p?.allowSwapperOffCurve,forceSkipCctpInstructions:p?.forceSkipCctpInstructions,separateSwapTx:c&&u?.separateSwapTx,usdcPermitSignature:p?.usdcPermitSignature}),g=new Z(t),h=e.gasless?new Z(e.relayer):g,{blockhash:w,lastValidBlockHeight:C}=await o.getLatestBlockhash(),R=jn.compile({instructions:l,payerKey:h,recentBlockhash:w,addressLookupTableAccounts:y}),P=new Rt(R);P.sign(f);let _;if(c){let k=[];if(b){let A=new Qn({feePayer:g,blockhash:w,lastValidBlockHeight:C}).add(...b.createTmpTokenAccountIxs);A.partialSign(b.tmpTokenAccount),k.push(A);let E=jn.compile({...b.messageV0,recentBlockhash:w});k.push(new Rt(E))}let F=Cn(t,w,C,u);k.push(P),k.push(F);let U=await u.signAllTransactions(k);_=U[U.length-2];let x=null;if(_ instanceof Qn&&_?.signatures[0]?.publicKey?x=Yn.encode(Uint8Array.from(_.signatures[0].signature)):_ instanceof Rt&&_?.signatures[0]&&(x=Yn.encode(Uint8Array.from(_.signatures[0]))),x===null)throw new Error("Failed to get mayan tx hash");if(b){let A=await At(U,u,!0);return await _n(A,u,C,x,o),Pn(A),{signature:x,serializedTrx:null}}else At(U,u).then(()=>{console.log("Jito bundle sent")}).catch(()=>{})}else _=await i(P);if(e.gasless){let k=ge.from(_.serialize()).toString("base64"),{orderHash:F}=await rn(k);return{signature:F,serializedTrx:null}}return await ot({trx:_.serialize(),connection:m,extraRpcs:s??[],errorChance:2,options:r})}function Xn(e,t,n,a,i){let o=G(Number(i)),s=S(e.fromChain),r=S(e.toChain);if(s!==o)throw new Error(`Signer chain id(${Number(i)}) and quote from chain are not same! ${s} !== ${o}`);if(!e.swiftMayanContract)throw new Error("SWIFT contract address is missing");if(e.toToken.wChainId!==r)throw new Error(`Destination chain ID mismatch: ${r} != ${e.toToken.wChainId}`);let u=e.swiftMayanContract;if(!Number(e.deadline64))throw new Error("Swift order requires timeout");let p=BigInt(e.deadline64),m=e.swiftInputContract,c=BigInt(e.effectiveAmountIn64),l;a?l=I(a,r):l=I(Zn.programId.toString(),1);let f=I(kr.generate().publicKey.toString(),1),y=e.toToken.contract===dt?I(Zn.programId.toString(),1):I(e.toToken.contract,r),b=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),g=T(e.gasDrop,Math.min(8,B(e.toChain))),h=I(n,r),w={trader:I(t,s),tokenOut:y,minAmountOut:b,gasDrop:g,cancelFee:BigInt(e.cancelRelayerFee64),refundFee:BigInt(e.refundRelayerFee64),deadline:p,destAddr:h,destChainId:r,referrerAddr:l,referrerBps:e.referrerBps||0,auctionMode:e.swiftAuctionMode,random:f};return{contractAddress:u,tokenIn:m,amountIn:c,order:w}}function qn(e,t,n,a,i,o){if(e.type!=="SWIFT")throw new Error("Quote type is not SWIFT");if(!Number.isFinite(Number(i)))throw new Error("Invalid signer chain id");if(!Number(e.deadline64))throw new Error("Swift order requires timeout");i=Number(i);let s=o||j,r=new zn(d.MAYAN_FORWARDER_CONTRACT,Y.abi),{tokenIn:u,amountIn:p,order:m,contractAddress:c}=Xn(e,t,n,a,i),l,f=new zn(c,mn.abi);e.swiftInputContract===dt?l=f.interface.encodeFunctionData("createOrderWithEth",[m]):l=f.interface.encodeFunctionData("createOrderWithToken",[u,p,m]);let y,b,g;if(e.fromToken.contract===e.swiftInputContract)e.fromToken.contract===dt?(y="forwardEth",b=[c,l],g=mt(p)):(y="forwardERC20",b=[u,p,s,c,l],g=mt(0));else{let{evmSwapRouterAddress:w,evmSwapRouterCalldata:C}=e;if(!e.minMiddleAmount||!w||!C)throw new Error("Swift swap requires middle amount, router address and calldata");let R=e.fromToken.contract,P=T(e.minMiddleAmount,e.swiftInputDecimals);e.fromToken.contract===dt?(y="swapAndForwardEth",b=[p,w,C,e.swiftInputContract,P,c,l],g=mt(p)):(y="swapAndForwardERC20",b=[R,p,s,w,C,e.swiftInputContract,P,c,l],g=mt(0))}return{data:r.interface.encodeFunctionData(y,b),to:d.MAYAN_FORWARDER_CONTRACT,value:g,chainId:i,_forwarder:{method:y,params:b}}}function Rr(e,t,n){if(!Number.isFinite(Number(n)))throw new Error("Invalid signer chain id");let a=BigInt(e.effectiveAmountIn64),i=BigInt(e.submitRelayerFee64);return{domain:{name:"Mayan Swift",chainId:Number(n),verifyingContract:e.swiftMayanContract},types:{CreateOrder:[{name:"OrderId",type:"bytes32"},{name:"InputAmount",type:"uint256"},{name:"SubmissionFee",type:"uint256"}]},value:{OrderId:t,InputAmount:a-i,SubmissionFee:i}}}function ea(e,t,n,a,i,o){if(e.type!=="SWIFT")throw new Error("Quote type is not SWIFT");if(!e.gasless)throw new Error("Quote does not support gasless");if(!Number.isFinite(Number(i)))throw new Error("Invalid signer chain id");if(!Number(e.deadline64))throw new Error("Swift order requires timeout");if(e.fromToken.contract!==e.swiftInputContract)throw new Error("Swift gasless order creation does not support source swap");let{tokenIn:s,amountIn:r,order:u}=Xn(e,t,n,a,Number(i)),p=S(e.fromChain),c=`0x${Pt(e,t,n,a,u.random).toString("hex")}`,l=Rr(e,c,i);return{permitParams:o,orderParams:{...u,sourceChainId:p,amountIn:r,tokenIn:s,submissionFee:BigInt(e.submitRelayerFee64)},orderHash:c,orderTypedData:l}}import{Contract as na,toBeHex as Ot,ZeroAddress as aa}from"ethers";import{Buffer as ne}from"buffer";var ta={abi:[{type:"function",name:"batchMaxApprove",inputs:[{name:"approvals",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"initiate",inputs:[{name:"recipient",type:"bytes32",internalType:"bytes32"},{name:"overrideAmountIn",type:"uint256",internalType:"uint256"},{name:"targetChain",type:"uint16",internalType:"uint16"},{name:"params",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes",internalType:"bytes"}],stateMutability:"payable"},{type:"error",name:"ChainNotSupported",inputs:[{name:"chain",type:"uint16",internalType:"uint16"}]},{type:"error",name:"DeadlineExpired",inputs:[{name:"blocktime",type:"uint256",internalType:"uint256"},{name:"deadline",type:"uint256",internalType:"uint256"}]},{type:"error",name:"EthTransferFailed",inputs:[]},{type:"error",name:"ExceedsMaxGasDropoff",inputs:[{name:"requested",type:"uint256",internalType:"uint256"},{name:"maximum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"ExceedsMaxRelayingFee",inputs:[{name:"fee",type:"uint256",internalType:"uint256"},{name:"maximum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InsufficientInputAmount",inputs:[{name:"input",type:"uint256",internalType:"uint256"},{name:"minimum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidAddress",inputs:[{name:"addr",type:"bytes32",internalType:"bytes32"}]},{type:"error",name:"InvalidBoolVal",inputs:[{name:"val",type:"uint8",internalType:"uint8"}]},{type:"error",name:"InvalidOverrideAmount",inputs:[{name:"received",type:"uint256",internalType:"uint256"},{name:"maximum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidSwapType",inputs:[{name:"swapType",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidSwapTypeForChain",inputs:[{name:"chain",type:"uint16",internalType:"uint16"},{name:"swapType",type:"uint256",internalType:"uint256"}]},{type:"error",name:"LengthMismatch",inputs:[{name:"encodedLength",type:"uint256",internalType:"uint256"},{name:"expectedLength",type:"uint256",internalType:"uint256"}]},{type:"error",name:"RelayingDisabledForChain",inputs:[]}]};var Te={FAST_MODE_FLAG:1,RELAY_REDEEM_MODE:2,EXACT_IN_FLAG:1,USDC_INPUT_TOKEN_TYPE:0,PRE_APPROVED_ACQUIRE_MODE:0,OUTPUT_USDC_MODE:0,OUTPUT_NATIVE_MODE:1,OUTPUT_OTHER_MODE:2};function Er(e){let t=(1n<<128n)-1n;if(e<0n||e>t)throw new RangeError("Value must fit in an unsigned 128-bit integer (0 <= value < 2^128)");let n=ne.alloc(16);for(let a=15;a>=0;a--)n[a]=Number(e&0xFFn),e>>=8n;return n}function Or(e,t,n){let{shuttleParams:a}=e;if(!a)throw new Error("Swap layer params are missing in quote response");let i=G(Number(n)),o=S(e.fromChain),s=S(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(n)}) and quote from chain are not same! ${o} !== ${i}`);let r=[];r.push(Te.FAST_MODE_FLAG);let u=ne.alloc(8);u.writeBigUInt64BE(BigInt(a.maxLLFee));let p=u.subarray(2);r.push(...p);let m=ne.alloc(4);m.writeUInt32BE(a.fastTransferDeadline),r.push(...m),r.push(Te.RELAY_REDEEM_MODE);let c=T(e.gasDrop,Math.min(6,B(e.toChain))),l=ne.alloc(8);l.writeBigUInt64BE(c);let f=l.subarray(4);r.push(...f);let y=ne.alloc(8);y.writeBigUInt64BE(BigInt(a.maxRelayingFee));let b=y.subarray(2);r.push(...b),r.push(Te.EXACT_IN_FLAG),r.push(Te.USDC_INPUT_TOKEN_TYPE);let g=BigInt(e.effectiveAmountIn64);if(e.fromToken.contract===e.shuttleInputContract){r.push(...Array(8).fill(0));let w=ne.alloc(8);w.writeBigUInt64BE(g),r.push(...w)}else r.push(...Array(16).fill(0));if(r.push(Te.PRE_APPROVED_ACQUIRE_MODE),a.hasDestSwap){if(e.toToken.contract===aa)r.push(Te.OUTPUT_NATIVE_MODE);else{r.push(Te.OUTPUT_OTHER_MODE);let P=ne.from(I(e.toToken.contract,s).slice(2),"hex");r.push(...P)}let w=ne.alloc(4);w.writeUInt32BE(Number(BigInt(e.deadline64))),r.push(...w);let C=T(e.minAmountOut,e.toToken.decimals);if(e.toChain==="solana"){r.push(...Array(8).fill(0));let P=ne.alloc(8);P.writeBigUInt64BE(C),r.push(...P)}else{let P=Er(C);r.push(...P)}let R=ne.from(a.path.slice(2),"hex");r.push(...R)}else r.push(Te.OUTPUT_USDC_MODE);return{destAddr:I(t,s),destChainId:s,serializedParams:`0x${ne.from(r).toString("hex")}`,contractAddress:e.shuttleContract,amountIn:g,bridgeFee:T(e.bridgeFee,B(e.fromChain))}}function ra(e,t,n,a){if(e.type!=="SHUTTLE")throw new Error("Quote type is not SHUTTLE");if(!Number.isFinite(Number(n)))throw new Error("Invalid signer chain id");n=Number(n);let i=a||j,o=new na(d.MAYAN_FORWARDER_CONTRACT,Y.abi),{destAddr:s,destChainId:r,serializedParams:u,contractAddress:p,amountIn:m,bridgeFee:c}=Or(e,t,n),l;l=new na(p,ta.abi).interface.encodeFunctionData("initiate",[s,m,r,u]);let y,b,g;if(e.fromToken.contract===e.shuttleInputContract)y="forwardERC20",b=[e.shuttleInputContract,m,i,p,l],g=Ot(c);else{let{evmSwapRouterAddress:w,evmSwapRouterCalldata:C}=e;if(!e.minMiddleAmount||!w||!C)throw new Error("Shuttle source chain swap requires middle amount, router address and calldata");let R=e.fromToken.contract,P=T(e.minMiddleAmount,e.shuttleInputDecimals);e.fromToken.contract===aa?(y="swapAndForwardEth",b=[m,w,C,e.shuttleInputContract,P,p,l],g=Ot(m)):(y="swapAndForwardERC20",b=[R,m,i,w,C,e.shuttleInputContract,P,p,l],g=Ot(c))}return{data:o.interface.encodeFunctionData(y,b),to:d.MAYAN_FORWARDER_CONTRACT,value:g,chainId:n,_forwarder:{method:y,params:b}}}import{Contract as xt,toBeHex as we,ZeroAddress as Ft}from"ethers";import{SystemProgram as vt}from"@solana/web3.js";var Dt={abi:[{type:"constructor",inputs:[{name:"_cctpTokenMessengerV2",type:"address",internalType:"address"},{name:"_feeManager",type:"address",internalType:"address"}],stateMutability:"nonpayable"},{type:"receive",stateMutability:"payable"},{type:"function",name:"bridge",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"redeemFee",type:"uint64",internalType:"uint64"},{name:"circleMaxFee",type:"uint256",internalType:"uint256"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"destAddr",type:"bytes32",internalType:"bytes32"},{name:"destDomain",type:"uint32",internalType:"uint32"},{name:"referrerAddress",type:"bytes32",internalType:"bytes32"},{name:"referrerBps",type:"uint8",internalType:"uint8"},{name:"payloadType",type:"uint8",internalType:"uint8"},{name:"minFinalityThreshold",type:"uint32",internalType:"uint32"},{name:"customPayload",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"cctpTokenMessengerV2",inputs:[],outputs:[{name:"",type:"address",internalType:"contract ITokenMessengerV2"}],stateMutability:"view"},{type:"function",name:"changeGuardian",inputs:[{name:"newGuardian",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"claimGuardian",inputs:[],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"createOrder",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"circleMaxFee",type:"uint256",internalType:"uint256"},{name:"destDomain",type:"uint32",internalType:"uint32"},{name:"minFinalityThreshold",type:"uint32",internalType:"uint32"},{name:"orderPayload",type:"tuple",internalType:"struct FastMCTP.OrderPayload",components:[{name:"payloadType",type:"uint8",internalType:"uint8"},{name:"destAddr",type:"bytes32",internalType:"bytes32"},{name:"tokenOut",type:"bytes32",internalType:"bytes32"},{name:"amountOutMin",type:"uint64",internalType:"uint64"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"redeemFee",type:"uint64",internalType:"uint64"},{name:"refundFee",type:"uint64",internalType:"uint64"},{name:"deadline",type:"uint64",internalType:"uint64"},{name:"referrerAddr",type:"bytes32",internalType:"bytes32"},{name:"referrerBps",type:"uint8",internalType:"uint8"}]}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"domainToCaller",inputs:[{name:"",type:"uint32",internalType:"uint32"}],outputs:[{name:"",type:"bytes32",internalType:"bytes32"}],stateMutability:"view"},{type:"function",name:"feeManager",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"fulfillOrder",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"},{name:"swapProtocol",type:"address",internalType:"address"},{name:"swapData",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"guardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"keyToMintRecipient",inputs:[{name:"",type:"bytes32",internalType:"bytes32"}],outputs:[{name:"",type:"bytes32",internalType:"bytes32"}],stateMutability:"view"},{type:"function",name:"nextGuardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"paused",inputs:[],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"redeem",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"refund",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"rescueEth",inputs:[{name:"amount",type:"uint256",internalType:"uint256"},{name:"to",type:"address",internalType:"address payable"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"rescueRedeem",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"rescueToken",inputs:[{name:"token",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"},{name:"to",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setDomainCallers",inputs:[{name:"domain",type:"uint32",internalType:"uint32"},{name:"caller",type:"bytes32",internalType:"bytes32"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setFeeManager",inputs:[{name:"_feeManager",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setMintRecipient",inputs:[{name:"destDomain",type:"uint32",internalType:"uint32"},{name:"tokenIn",type:"address",internalType:"address"},{name:"mintRecipient",type:"bytes32",internalType:"bytes32"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setPause",inputs:[{name:"_pause",type:"bool",internalType:"bool"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setWhitelistedMsgSenders",inputs:[{name:"sender",type:"address",internalType:"address"},{name:"isWhitelisted",type:"bool",internalType:"bool"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setWhitelistedSwapProtocols",inputs:[{name:"protocol",type:"address",internalType:"address"},{name:"isWhitelisted",type:"bool",internalType:"bool"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"whitelistedMsgSenders",inputs:[{name:"",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"whitelistedSwapProtocols",inputs:[{name:"",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"event",name:"OrderFulfilled",inputs:[{name:"sourceDomain",type:"uint32",indexed:!1,internalType:"uint32"},{name:"sourceNonce",type:"bytes32",indexed:!1,internalType:"bytes32"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"event",name:"OrderRefunded",inputs:[{name:"sourceDomain",type:"uint32",indexed:!1,internalType:"uint32"},{name:"sourceNonce",type:"bytes32",indexed:!1,internalType:"bytes32"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"error",name:"AlreadySet",inputs:[]},{type:"error",name:"CallerNotSet",inputs:[]},{type:"error",name:"CctpReceiveFailed",inputs:[]},{type:"error",name:"DeadlineViolation",inputs:[]},{type:"error",name:"EthTransferFailed",inputs:[]},{type:"error",name:"InvalidAddress",inputs:[]},{type:"error",name:"InvalidAmountOut",inputs:[]},{type:"error",name:"InvalidGasDrop",inputs:[]},{type:"error",name:"InvalidMintRecipient",inputs:[]},{type:"error",name:"InvalidPayload",inputs:[]},{type:"error",name:"InvalidPayloadType",inputs:[]},{type:"error",name:"InvalidRedeemFee",inputs:[]},{type:"error",name:"InvalidRefundFee",inputs:[]},{type:"error",name:"MintRecipientNotSet",inputs:[]},{type:"error",name:"Paused",inputs:[]},{type:"error",name:"Unauthorized",inputs:[]},{type:"error",name:"UnauthorizedMsgSender",inputs:[]},{type:"error",name:"UnauthorizedSwapProtocol",inputs:[]}]};import{Buffer as Dr}from"buffer";function Fr(e,t,n,a,i){let o=G(Number(a)),s=S(e.fromChain),r=S(e.toChain);if(s!==o)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${s} !== ${o}`);let u=I(t,r),p=T(e.redeemRelayerFee,O),m=T(e.gasDrop,Math.min(B(e.toChain),8)),c=BigInt(e.circleMaxFee64),l=BigInt(e.effectiveAmountIn64),f=re(e.toChain),y;if(n?y=I(n,r):y=I(vt.programId.toString(),S("solana")),!e.fastMctpMayanContract)throw new Error("FastMctp contract address is missing");let b=e.fastMctpMayanContract;return{tokenIn:e.fastMctpInputContract,amountIn:l,redeemFee:p,gasDrop:m,destAddr:u,destDomain:f,referrerAddr:y,referrerBps:e.referrerBps,payloadType:i?qt:Xt,customPayload:i?`0x${Dr.from(i).toString("hex")}`:"0x",minFinalityThreshold:Number(e.fastMctpMinFinality),circleMaxFee:c,contractAddress:b}}function ia(e,t,n,a,i){let o=Fr(e,t,n,a,i),{contractAddress:s,tokenIn:r,amountIn:u,destAddr:p,redeemFee:m,gasDrop:c,circleMaxFee:l,referrerAddr:f,referrerBps:y,destDomain:b,customPayload:g,minFinalityThreshold:h,payloadType:w}=o,C=new xt(s,Dt.abi),R,P;return R=C.interface.encodeFunctionData("bridge",[r,u,m,l,c,p,b,f,y,w,h,g]),P=we(0),{to:s,data:R,value:P,_params:o}}function vr(e,t,n,a){let i=G(Number(a)),o=S(e.fromChain),s=S(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${o} !== ${i}`);if(!e.fastMctpMayanContract)throw new Error("MCTP contract address is missing");let r=e.fastMctpMayanContract,u=I(t,s),p;n?p=I(n,s):p=I(vt.programId.toString(),S("solana"));let m=T(e.redeemRelayerFee,O),c=BigInt(e.refundRelayerFee64),l=BigInt(e.circleMaxFee64),f=T(e.gasDrop,Math.min(B(e.toChain),8)),y=re(e.toChain),b=BigInt(e.effectiveAmountIn64),g=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),h=BigInt(e.deadline64),w=e.toToken.contract===Ft?I(vt.programId.toString(),S("solana")):I(e.toChain==="sui"?e.toToken.verifiedAddress:e.toToken.contract,e.toToken.wChainId);return{tokenIn:e.fastMctpInputContract,amountIn:b,circleMaxFee:l,destDomain:y,minFinalityThreshold:Number(e.fastMctpMinFinality),orderPayload:{payloadType:en,destAddr:u,tokenOut:w,amountOutMin:g,gasDrop:f,redeemFee:m,refundFee:c,deadline:h,referrerAddr:p,referrerBps:e.referrerBps||0},contractAddress:r}}function sa(e,t,n,a){let i=vr(e,t,n,a),{contractAddress:o,orderPayload:s,tokenIn:r,amountIn:u,circleMaxFee:p,destDomain:m,minFinalityThreshold:c}=i,f=new xt(o,Dt.abi).interface.encodeFunctionData("createOrder",[r,u,p,m,c,s]),y=we(0);return{to:o,data:f,value:y,_params:i}}function oa(e,t,n,a,i,o){if(e.type!=="FAST_MCTP")throw new Error("Quote type is not FAST_MCTP");if(!Number.isFinite(Number(a)))throw new Error("Invalid signer chain id");a=Number(a);let s=i||j,r=new xt(d.MAYAN_FORWARDER_CONTRACT,Y.abi);if(e.fromToken.contract===e.fastMctpInputContract)if(e.hasAuction){if(!Number(e.deadline64))throw new Error("Fast Mctp order requires timeout");let u=sa(e,t,n,a),p="forwardERC20",m=[e.fromToken.contract,u._params.amountIn,s,u._params.contractAddress,u.data];return{data:r.interface.encodeFunctionData(p,m),to:d.MAYAN_FORWARDER_CONTRACT,value:we(0),chainId:a,_forwarder:{method:p,params:m}}}else{let u=ia(e,t,n,a,o),p="forwardERC20",m=[e.fromToken.contract,u._params.amountIn,s,u._params.contractAddress,u.data];return{data:r.interface.encodeFunctionData(p,m),to:d.MAYAN_FORWARDER_CONTRACT,value:we(0),chainId:a,_forwarder:{method:p,params:m}}}else{let{minMiddleAmount:u,evmSwapRouterAddress:p,evmSwapRouterCalldata:m}=e;if(!u||!p||!m)throw new Error("Fast Mctp swap requires middle amount, router address and calldata");if(e.hasAuction){if(!Number(e.deadline64))throw new Error("Fast Mctp order requires timeout");let c=sa(e,t,n,a),l=T(e.minMiddleAmount,O);if(e.fromToken.contract===Ft){let f="swapAndForwardEth",y=[c._params.amountIn,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:we(c._params.amountIn),chainId:a,_forwarder:{method:f,params:y}}}else{let f="swapAndForwardERC20",y=[e.fromToken.contract,c._params.amountIn,s,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:we(0),chainId:a,_forwarder:{method:f,params:y}}}}else{let c=ia(e,t,n,a,o),l=T(e.minMiddleAmount,O);if(e.fromToken.contract===Ft){let f="swapAndForwardEth",y=[c._params.amountIn,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:we(c._params.amountIn),chainId:a,_forwarder:{method:f,params:y}}}else{let f="swapAndForwardERC20",y=[e.fromToken.contract,c._params.amountIn,s,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:we(0),chainId:a,_forwarder:{method:f,params:y}}}}}}import{Contract as Nt,toBeHex as Qe,ZeroAddress as xr}from"ethers";import{SystemProgram as Br}from"@solana/web3.js";var Bt={abi:[{type:"constructor",inputs:[{name:"_hcProcessor",type:"address",internalType:"address"},{name:"_usdc",type:"address",internalType:"address"}],stateMutability:"nonpayable"},{type:"function",name:"changeGuardian",inputs:[{name:"newGuardian",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"claimGuardian",inputs:[],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"deposit",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"trader",type:"address",internalType:"address"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"bridgeAmount",type:"uint256",internalType:"uint256"},{name:"depositPayload",type:"tuple",internalType:"struct HCDepositInitiator.DepositPayload",components:[{name:"relayerFee",type:"uint64",internalType:"uint64"},{name:"permit",type:"tuple",internalType:"struct IHCBridge.DepositWithPermit",components:[{name:"user",type:"address",internalType:"address"},{name:"usd",type:"uint64",internalType:"uint64"},{name:"deadline",type:"uint64",internalType:"uint64"},{name:"signature",type:"tuple",internalType:"struct IHCBridge.Signature",components:[{name:"r",type:"uint256",internalType:"uint256"},{name:"s",type:"uint256",internalType:"uint256"},{name:"v",type:"uint8",internalType:"uint8"}]}]}]}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"fastDeposit",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"trader",type:"address",internalType:"address"},{name:"circleMaxFee",type:"uint256",internalType:"uint256"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"referrerAddress",type:"bytes32",internalType:"bytes32"},{name:"referrerBps",type:"uint8",internalType:"uint8"},{name:"minFinalityThreshold",type:"uint32",internalType:"uint32"},{name:"bridgeAmount",type:"uint256",internalType:"uint256"},{name:"depositPayload",type:"tuple",internalType:"struct HCDepositInitiator.DepositPayload",components:[{name:"relayerFee",type:"uint64",internalType:"uint64"},{name:"permit",type:"tuple",internalType:"struct IHCBridge.DepositWithPermit",components:[{name:"user",type:"address",internalType:"address"},{name:"usd",type:"uint64",internalType:"uint64"},{name:"deadline",type:"uint64",internalType:"uint64"},{name:"signature",type:"tuple",internalType:"struct IHCBridge.Signature",components:[{name:"r",type:"uint256",internalType:"uint256"},{name:"s",type:"uint256",internalType:"uint256"},{name:"v",type:"uint8",internalType:"uint8"}]}]}]}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"fastMCTP",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"guardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"mayanCircle",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"nextGuardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"setFastMCTP",inputs:[{name:"_fastMCTP",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setMayanCircle",inputs:[{name:"_mayanCircle",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"error",name:"AlreadySet",inputs:[]},{type:"error",name:"InsufficientAmount",inputs:[]},{type:"error",name:"Unauthorized",inputs:[]}]};import{Buffer as pa}from"buffer";function Nr(e,t,n,a){if(!e.hyperCoreParams.initiateContractAddress)throw new Error("HyperCore initiate contract address is missing");if(e.type!=="MCTP")throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);let i=new Nt(e.hyperCoreParams.initiateContractAddress,Bt.abi),o=pa.from(W(a));if(o.length!==65)throw new Error("Invalid USDC permit signature length");let s="0x"+o.subarray(0,32).toString("hex"),r="0x"+o.subarray(32,64).toString("hex"),u=o[64],p,m;return p=i.interface.encodeFunctionData("deposit",[e.hyperCoreParams.initiateTokenContract,BigInt(e.hyperCoreParams.bridgeAmountUSDC64),t,T(e.hyperCoreParams.failureGasDrop,Math.min(B("arbitrum"),8)),BigInt(e.hyperCoreParams.bridgeAmountUSDC64),{relayerFee:T(e.redeemRelayerFee,O),permit:{user:n,usd:BigInt(e.hyperCoreParams.depositAmountUSDC64),deadline:BigInt(e.deadline64),signature:{r:s,s:r,v:u}}}]),m=Qe(0),{to:e.hyperCoreParams.initiateContractAddress,data:p,value:m,_params:{amountIn:BigInt(e.hyperCoreParams.bridgeAmountUSDC64),contractAddress:e.hyperCoreParams.initiateContractAddress}}}function Wr(e,t,n,a,i){let o=S("arbitrum");if(!e.hyperCoreParams.initiateContractAddress)throw new Error("HyperCore initiate contract address is missing");if(e.type!=="FAST_MCTP")throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);let s=new Nt(e.hyperCoreParams.initiateContractAddress,Bt.abi),r=pa.from(W(i));if(r.length!==65)throw new Error("Invalid USDC permit signature length");let u="0x"+r.subarray(0,32).toString("hex"),p="0x"+r.subarray(32,64).toString("hex"),m=r[64],c;a?c=I(a,o):c=I(Br.programId.toString(),S("solana"));let l,f;return l=s.interface.encodeFunctionData("fastDeposit",[e.hyperCoreParams.initiateTokenContract,BigInt(e.hyperCoreParams.bridgeAmountUSDC64),t,BigInt(e.circleMaxFee64),T(e.hyperCoreParams.failureGasDrop,Math.min(B("arbitrum"),8)),c,e.referrerBps,Number(e.fastMctpMinFinality),BigInt(e.hyperCoreParams.bridgeAmountUSDC64),{relayerFee:T(e.redeemRelayerFee,O),permit:{user:n,usd:BigInt(e.hyperCoreParams.depositAmountUSDC64),deadline:BigInt(e.deadline64),signature:{r:u,s:p,v:m}}}]),f=Qe(0),{to:e.hyperCoreParams.initiateContractAddress,data:l,value:f,_params:{amountIn:BigInt(e.hyperCoreParams.bridgeAmountUSDC64),contractAddress:e.hyperCoreParams.initiateContractAddress}}}function ua(e,t,n,a,i,o,s,r={}){if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase()||e.type!=="MCTP"&&e.type!=="FAST_MCTP")throw new Error("Unsupported quote type for USDC deposit: "+e.type);if(!r?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(s)throw new Error("HyperCore deposit does not support payload");if(!Number.isFinite(Number(i)))throw new Error("Invalid signer chain id");let u=G(Number(i)),p=S(e.fromChain);if(p!==u)throw new Error(`Signer chain id(${Number(i)}) and quote from chain are not same! ${p} !== ${u}`);let m=o||j,c=new Nt(d.MAYAN_FORWARDER_CONTRACT,Y.abi),l;if(!Number(e.deadline64))throw new Error("HyperCore deposit requires timeout");if(e.type==="MCTP")l=Nr(e,t,n,r.usdcPermitSignature);else if(e.type==="FAST_MCTP")l=Wr(e,t,n,a,r.usdcPermitSignature);else throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);if(e.fromToken.contract.toLowerCase()===e.hyperCoreParams.initiateTokenContract.toLowerCase()){let f="forwardERC20",y=[e.fromToken.contract,BigInt(e.effectiveAmountIn64),m,l._params.contractAddress,l.data];return{data:c.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:Qe(0),chainId:i,_forwarder:{method:f,params:y}}}else{let{evmSwapRouterAddress:f,evmSwapRouterCalldata:y}=e;if(!e.minMiddleAmount||!f||!y)throw new Error("Fast Mctp swap requires middle amount, router address and calldata");let b=T(e.minMiddleAmount,O);if(e.fromToken.contract===xr){let g="swapAndForwardEth",h=[BigInt(e.effectiveAmountIn64),f,y,e.hyperCoreParams.initiateTokenContract,b,l._params.contractAddress,l.data];return{data:c.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:Qe(BigInt(e.effectiveAmountIn64)),chainId:i,_forwarder:{method:g,params:h}}}else{let g="swapAndForwardERC20",h=[e.fromToken.contract,BigInt(e.effectiveAmountIn64),m,f,y,e.hyperCoreParams.initiateTokenContract,b,l._params.contractAddress,l.data];return{data:c.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:Qe(0),chainId:i,_forwarder:{method:g,params:h}}}}}import{Contract as ma,toBeHex as lt,ZeroAddress as je}from"ethers";var ca={abi:[{type:"constructor",inputs:[{name:"_forwarderAddress",type:"address",internalType:"address"}],stateMutability:"nonpayable"},{type:"receive",stateMutability:"payable"},{type:"function",name:"ForwarderAddress",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"MAX_REFERRER_BPS",inputs:[],outputs:[{name:"",type:"uint8",internalType:"uint8"}],stateMutability:"view"},{type:"function",name:"changeGuardian",inputs:[{name:"newGuardian",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"claimGuardian",inputs:[],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"guardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"nextGuardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"rescueETH",inputs:[{name:"to",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"rescueToken",inputs:[{name:"token",type:"address",internalType:"address"},{name:"to",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"transferEth",inputs:[{name:"to",type:"address",internalType:"address"},{name:"referrerAddr",type:"address",internalType:"address"},{name:"referrerBps",type:"uint8",internalType:"uint8"}],outputs:[],stateMutability:"payable"},{type:"function",name:"transferToken",inputs:[{name:"token",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"},{name:"to",type:"address",internalType:"address"},{name:"referrerAddr",type:"address",internalType:"address"},{name:"referrerBps",type:"uint8",internalType:"uint8"}],outputs:[],stateMutability:"nonpayable"},{type:"event",name:"EthTransferred",inputs:[{name:"to",type:"address",indexed:!1,internalType:"address"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"event",name:"TokenTransferred",inputs:[{name:"token",type:"address",indexed:!1,internalType:"address"},{name:"to",type:"address",indexed:!1,internalType:"address"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"error",name:"InvalidReferrerBps",inputs:[]},{type:"error",name:"Unauthorized",inputs:[]}]};function Ur(e,t,n){let a=T(e.expectedAmountOut,e.toToken.decimals),i=new ma(e.monoChainMayanContract,ca.abi),o=n&&e.referrerBps||0,s,r;return e.toToken.contract===je?s=i.interface.encodeFunctionData("transferEth",[t,n||je,o]):s=i.interface.encodeFunctionData("transferToken",[e.toToken.contract,a,t,n||je,o]),e.fromToken.contract===je?r=lt(e.effectiveAmountIn64):r=lt(0),{to:e.monoChainMayanContract,data:s,value:r,_params:{amountIn:BigInt(e.effectiveAmountIn64),tokenIn:e.fromToken.contract}}}function da(e,t,n,a,i){if(e.type!=="MONO_CHAIN")throw new Error("Quote type is not MONO_CHAIN");if(e.fromChain!==e.toChain)throw new Error("Quote chains are not equal");if(e.fromToken.contract.toLowerCase()===e.toToken.contract.toLowerCase())throw new Error(`From token and to token are the same: ${e.fromToken.contract}`);if(!Number.isFinite(Number(a)))throw new Error("Invalid signer chain id");let o=G(Number(a)),s=S(e.fromChain);if(s!==o)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${s} !== ${o}`);a=Number(a);let r=i||j,u=new ma(d.MAYAN_FORWARDER_CONTRACT,Y.abi),{evmSwapRouterAddress:p,evmSwapRouterCalldata:m}=e;if(!p||!m)throw new Error("Mono chain swap requires router address and calldata");let c=Ur(e,t,n),l=T(e.minAmountOut,e.toToken.decimals);if(e.fromToken.contract===je){let f="swapAndForwardEth",y=[c._params.amountIn,p,m,e.toToken.contract,l,e.monoChainMayanContract,c.data];return{data:u.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:lt(c._params.amountIn),chainId:a,_forwarder:{method:f,params:y}}}else{let f="swapAndForwardERC20",y=[e.fromToken.contract,c._params.amountIn,r,p,m,e.toToken.contract,l,e.monoChainMayanContract,c.data];return{data:u.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:lt(0),chainId:a,_forwarder:{method:f,params:y}}}}function Kr(e,t,n,a,i,o){let s=new Wt(d.MAYAN_PROGRAM_ID),[r]=Wt.findProgramAddressSync([fa.from("MAIN")],s),u=D(new Wt(e.fromToken.mint),r,!0),p=BigInt(e.effectiveAmountIn64),m=I(u.toString(),1),c=I(d.AUCTION_PROGRAM_ID,1),l;n?l=I(n,1):l=I(Lr.programId.toString(),1);let f=G(Number(i)),y=S(e.fromChain),b=S(e.toChain);if(y!==f)throw new Error(`Signer chain id(${Number(i)}) and quote from chain are not same! ${y} !== ${f}`);let g=e.whMayanContract,h={mayanAddr:m,mayanChainId:1,destAddr:I(t,b),destChainId:b,auctionAddr:c,referrer:l,refundAddr:I(a,f)},w=e.toToken.contract===ba,C={transferDeadline:BigInt(e.deadline64),swapDeadline:BigInt(e.deadline64),amountOutMin:T(e.minAmountOut,Math.min(8,e.toToken.decimals)),gasDrop:T(e.gasDrop,Math.min(8,B(e.toChain))),unwrap:w,customPayload:o?`0x${fa.from(o).toString("hex")}`:"0x"},R={swapFee:T(e.swapRelayerFee,Math.min(8,e.fromToken.decimals)),redeemFee:T(e.redeemRelayerFee,Math.min(8,e.toToken.decimals)),refundFee:T(e.refundRelayerFee,Math.min(8,e.fromToken.decimals))},P=I(e.toToken.realOriginContractAddress,e.toToken.realOriginChainId),_=T(e.bridgeFee,18);return{amountIn:p,tokenIn:e.fromToken.contract,tokenOut:P,tokenOutWChainId:e.toToken.realOriginChainId,criteria:C,recipient:h,relayerFees:R,contractAddress:g,bridgeFee:_}}function Ut(e,t,n,a,i,o,s,r,u){let p=G(Number(o)),m=S(e.fromChain);if(m!==p)throw new Error(`Signer chain id(${Number(o)}) and quote from chain are not same! ${m} !== ${p}`);let c=he(e,a);if(e.toChain==="hypercore")return ua(e,t,n,c,o,r,s,u);if(e.type==="MCTP")return cn(e,n,c,o,r,s);if(e.type==="SWIFT")return qn(e,t,n,c,o,r);if(e.type==="SHUTTLE")return ra(e,n,o,r);if(e.type==="FAST_MCTP")return oa(e,n,c,o,r,s);if(e.type==="MONO_CHAIN")return da(e,n,c,o,r);if(e.type!="WH")throw new Error("Unsupported quote type");if(!Number(e.deadline64))throw new Error("WH mode requires a timeout");let{relayerFees:l,recipient:f,tokenOut:y,tokenOutWChainId:b,criteria:g,tokenIn:h,amountIn:w,contractAddress:C,bridgeFee:R}=Kr(e,n,c,i,o,s),P=new la(d.MAYAN_FORWARDER_CONTRACT,Y.abi),_=new la(C,sn.abi),k,F,U,x=r||j;if(h===ba){let E=_.interface.encodeFunctionData("wrapAndSwapETH",[l,f,y,b,g]);k="forwardEth",F=[C,E],U=ya(w)}else{let E=_.interface.encodeFunctionData("swap",[l,f,y,b,g,h,w]);k="forwardERC20",F=[h,w,x,C,E],U=ya(R)}let A=P.interface.encodeFunctionData(k,F);return{to:d.MAYAN_FORWARDER_CONTRACT,data:A,value:U,chainId:o,_forwarder:{method:k,params:F}}}async function qp(e,t,n,a,i,o,s,r,u){if(!i.provider)throw new Error("No provider found for signer");let p=await i.getAddress();if(p.toLowerCase()!==t.toLowerCase())throw new Error("Signer address does not match swapper address");let m=Number((await i.provider.getNetwork()).chainId);if(e.type==="SWIFT"&&e.gasless&&e.toChain!=="hypercore"){let l=he(e,a),f=ea(e,t,n,l,m,o),y=await i.signTypedData(f.orderTypedData.domain,f.orderTypedData.types,f.orderTypedData.value);return await an(f,y),f.orderHash}let c=Ut(e,t,n,a,p,m,r,o,u);if(delete c._forwarder,s?.gasPrice&&(c.gasPrice=s.gasPrice),s?.maxFeePerGas&&(c.maxFeePerGas=s.maxFeePerGas),s?.maxPriorityFeePerGas&&(c.maxPriorityFeePerGas=s.maxPriorityFeePerGas),s?.gasLimit)c.gasLimit=s.gasLimit;else{let l=await i.estimateGas(c);c.gasLimit=String(BigInt(String(l))*BigInt(110)/BigInt(100))}return c.chainId=$t(e.fromChain),i.sendTransaction(c)}async function eu(e,t,n,a,i){let o=await n.getAddress(),s=e.toChain==="solana"?"ENsytooJVSZyNHbxvueUeX8Am8gcNqPivVVE8USCBiy5":"0x1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a",r=Number((await n.provider.getNetwork()).chainId);if(e.type==="SWIFT"&&e.gasless)return BigInt(0);let u=Ut(e,t,s,null,o,r,i,a);delete u._forwarder;let p=await n.estimateGas(u);return p=BigInt(String(p)),e.type==="MCTP"||e.type==="SWIFT"?p*BigInt(110)/BigInt(100):p}async function tu(e,t,n,a){let i="0x1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a",o=e.toChain==="solana"?"ENsytooJVSZyNHbxvueUeX8Am8gcNqPivVVE8USCBiy5":"0x1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a",s=e?.fromToken?.chainId;if(e.type==="SWIFT"&&e.gasless)return BigInt(0);let r=Ut(e,i,o,null,i,s,a,n);return delete r._forwarder,t.estimateGas(r)}async function ga(e,t){let n;try{n=await t.getMoveFunctionArgTypes({package:e.package,module:e.module,function:e.function})}catch{throw new Error(`Failed to fetch ${e.package}::${e.module}::${e.function} ArgTypes`)}if(n){if(n[e.argumentIndex]!=="Pure"&&n[e.argumentIndex]?.Object!=="ByImmutableReference")throw new Error(`Argument ${e.argumentIndex} of ${e.module}::${e.function} is not immutable`)}else throw new Error(`Failed to fetch package::${e.module}::${e.function} ArgTypes`)}async function Lt(e,t){let n=[],a=BigInt(0),i;do{let o=await t.getCoins({...e,owner:e.walletAddress,cursor:i}),s=o.data.filter(r=>BigInt(r.balance)>BigInt(0));if(n=[...n,...s],s.forEach(r=>{a+=BigInt(r.balance)}),o.data.length===0||!o.hasNextPage||!o.nextCursor||a>=e.coinAmount)return{coins:n.sort((r,u)=>Number(BigInt(r.coinObjectId)-BigInt(u.coinObjectId))),sum:a};i=o.nextCursor}while(!0)}async function Ye(e,t){let n;try{n=await t.getObject({id:e,options:{showContent:!0}})}catch(a){throw new Error(`Failed to fetch Mayan Sui package ID: 

 ${a}`)}if(n.data?.content?.fields?.latest_package_id)return n.data.content.fields.latest_package_id;throw new Error("latest_package_id not found in Mayan Sui state object")}async function Se(e,t,n,a,i,o){let s;if(o?.result)s=o.result;else if(o?.objectId)s=i.object(o.objectId);else{let{coins:r,sum:u}=await Lt({walletAddress:t,coinType:n,coinAmount:e},a);if(u<e)throw new Error(`Insufficient funds to create Coin ${n} with amount ${e}`);r.length>1&&i.mergeCoins(r[0].coinObjectId,r.slice(1).map(m=>m.coinObjectId));let[p]=i.splitCoins(r[0].coinObjectId,[e]);s=p}return s}import{Transaction as $e}from"@mysten/sui/transactions";import{SUI_TYPE_ARG as Gr,SUI_CLOCK_OBJECT_ID as Hr}from"@mysten/sui/utils";import{SystemProgram as Kt}from"@solana/web3.js";import{ZeroAddress as Vr}from"ethers";async function Ta(e,t,n,a,i,o,s){let[r,u]=await Promise.all([Ye(d.SUI_MCTP_STATE,o),e.hasAuction?Ye(d.SUI_MCTP_FEE_MANAGER_STATE,o):null]),p=T(e.minMiddleAmount,O),m,c,l;if(e.fromToken.contract===e.mctpInputContract)m=s?.builtTransaction??new $e,c=await Se(p,t,e.mctpInputContract,o,m,s?.inputCoin);else{let{tx:b,outCoin:g,whFeeCoin:h}=await tt({amountIn64:e.effectiveAmountIn64,inputCoinType:e.fromToken.contract,middleCoinType:e.mctpInputContract,userWallet:t,withWhFee:e.hasAuction||e.cheaperChain!=="sui",referrerAddress:a,inputCoin:s?.inputCoin,transaction:s?.builtTransaction?await s.builtTransaction.toJSON():void 0});m=$e.from(b),c=g,l=h?{result:h}:null}e.hasAuction?await Yr(e,t,n,a,r,u,o,{inputCoin:{result:c},whFeeCoin:l,builtTransaction:m}):e.cheaperChain==="sui"?await jr(e,t,n,r,o,{inputCoin:{result:c},whFeeCoin:l,builtTransaction:m}):await Qr(e,t,n,r,i,o,{inputCoin:{result:c},whFeeCoin:l,builtTransaction:m});let f=BigInt(e.effectiveAmountIn64),y=i?Uint8Array.from(i):Uint8Array.from([]);m.moveCall({package:r,module:"init_order",function:"log_initialize_mctp",typeArguments:[e.fromToken.contract],arguments:[m.pure.u64(f),m.object(e.fromToken.verifiedAddress),m.pure.vector("u8",y)]});try{let b;a?b=I(a,S(e.toChain)):b=I(Kt.programId.toString(),S("solana")),m.moveCall({package:d.SUI_LOGGER_PACKAGE_ID,module:"referrer_logger",function:"log_referrer",arguments:[m.pure.address(b),m.pure.u8(e.referrerBps||0)]})}catch(b){console.error("Failed to log referrer",b)}return m}async function Qr(e,t,n,a,i,o,s){return Gt({swapperAddress:t,destinationAddress:n,toChain:e.toChain,minMiddleAmount:e.minMiddleAmount,mctpPackageId:a,mctpInputContract:e.mctpInputContract,gasDrop:e.gasDrop,redeemRelayerFee:e.redeemRelayerFee,mctpVerifiedInputAddress:e.mctpVerifiedInputAddress,mctpInputTreasury:e.mctpInputTreasury,bridgeFee:e.bridgeFee,payload:i,suiClient:o,options:s})}async function jr(e,t,n,a,i,o){let s=S(e.toChain),r=o?.builtTransaction??new $e,u=T(e.minMiddleAmount,O),p=await Se(u,t,e.mctpInputContract,i,r,o?.inputCoin),m=I(n,s),c=re(e.toChain),l=T(e.gasDrop,Math.min(B(e.toChain),8)),f=T(e.redeemRelayerFee,O),[y]=r.moveCall({package:a,module:"bridge_locked_fee",function:"prepare_bridge_locked_fee",typeArguments:[e.mctpInputContract],arguments:[p,r.pure.u64(u),r.pure.address(m),r.pure.u32(c),r.pure.u64(l),r.pure.u64(f)]}),[b,g]=r.moveCall({package:a,module:"bridge_locked_fee",function:"bridge_locked_fee",typeArguments:[e.mctpInputContract],arguments:[r.object(d.SUI_MCTP_STATE),r.object(d.SUI_CCTP_CORE_STATE),r.object(e.mctpVerifiedInputAddress),y]}),[h,w]=r.moveCall({package:d.SUI_CCTP_TOKEN_PACKAGE_ID,module:"deposit_for_burn",function:"deposit_for_burn_with_caller_with_package_auth",typeArguments:[e.mctpInputContract,`${a}::bridge_locked_fee::CircleAuth`],arguments:[g,r.object(d.SUI_CCTP_TOKEN_STATE),r.object(d.SUI_CCTP_CORE_STATE),r.object("0x403"),r.object(e.mctpInputTreasury)]});return r.moveCall({package:a,module:"bridge_locked_fee",function:"store_bridge_locked_fee",typeArguments:[e.mctpInputContract],arguments:[r.object(d.SUI_MCTP_STATE),r.object(e.mctpVerifiedInputAddress),b,w]}),r}async function Yr(e,t,n,a,i,o,s,r){let u=S(e.toChain),p=r?.builtTransaction??new $e,m=T(e.minMiddleAmount,O),[c]=await Promise.all([Se(m,t,e.mctpInputContract,s,p,r?.inputCoin),ga({package:o,module:"calculate_mctp_fee",function:"prepare_calc_mctp_fee",argumentIndex:3},s)]),l=e.toToken.contract===Vr?I(Kt.programId.toString(),S("solana")):I(e.toToken.contract,e.toToken.wChainId),f=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),y=I(n,u),b=re(e.toChain),g=T(e.gasDrop,Math.min(B(e.toChain),8)),h=T(e.redeemRelayerFee,O),w=BigInt(e.deadline64),C;a?C=I(a,u):C=I(Kt.programId.toString(),S("solana"));let R=[p.object(e.mctpVerifiedInputAddress),p.pure.u8(Zt),p.pure.address(t),c,p.pure.address(y),p.pure.u16(u),p.pure.address(l),p.pure.u64(f),p.pure.u64(g),p.pure.u64(h),p.pure.u64(w),p.pure.address(C),p.pure.u8(e.referrerBps)],[P]=p.moveCall({package:o,module:"calculate_mctp_fee",function:"prepare_calc_mctp_fee",typeArguments:[e.mctpInputContract],arguments:R}),[_]=p.moveCall({package:o,module:"calculate_mctp_fee",function:"calculate_mctp_fee",arguments:[p.object(d.SUI_MCTP_FEE_MANAGER_STATE),P]}),[k]=p.moveCall({package:i,module:"init_order",function:"prepare_initialize_order",typeArguments:[e.mctpInputContract],arguments:[...R.slice(1),p.pure.u32(b),p.pure.u64(m)]}),[F,U]=p.moveCall({package:i,module:"init_order",function:"initialize_order",typeArguments:[e.mctpInputContract],arguments:[p.object(d.SUI_MCTP_STATE),p.object(d.SUI_CCTP_CORE_STATE),p.object(e.mctpVerifiedInputAddress),k,_]}),[x,A]=p.moveCall({package:d.SUI_CCTP_TOKEN_PACKAGE_ID,module:"deposit_for_burn",function:"deposit_for_burn_with_caller_with_package_auth",typeArguments:[e.mctpInputContract,`${i}::init_order::CircleAuth`],arguments:[U,p.object(d.SUI_CCTP_TOKEN_STATE),p.object(d.SUI_CCTP_CORE_STATE),p.object("0x403"),p.object(e.mctpInputTreasury)]}),[E]=p.moveCall({package:i,module:"init_order",function:"publish_init_order",arguments:[p.object(d.SUI_MCTP_STATE),F,A]});return await wa(p,E,s,BigInt(e.bridgeFee),t,r?.whFeeCoin),p}async function wa(e,t,n,a,i,o){let s;if(o?.result)s=o.result;else if(o?.objectId)s=e.object(o.objectId);else if(a>BigInt(0)){let{coins:r,sum:u}=await Lt({walletAddress:i,coinType:Gr,coinAmount:a},n);if(u<a)throw new Error("Insufficient funds to pay Wormhole message fee");r.length>1&&e.mergeCoins(r[0].coinObjectId,r.slice(1).map(m=>m.coinObjectId));let[p]=e.splitCoins(r[0].coinObjectId,[a]);s=p}else{let[r]=e.splitCoins(e.gas,[e.pure.u64(0)]);s=r}return e.moveCall({package:d.SUI_WORMHOLE_PACKAGE_ID,module:"publish_message",function:"publish_message",arguments:[e.object(d.SUI_WORMHOLE_STATE),s,t,e.object(Hr)]}),e}async function Gt(e){let{swapperAddress:t,destinationAddress:n,mctpPackageId:a,payload:i,suiClient:o,options:s}=e,r=S(e.toChain),u=s?.builtTransaction??new $e,p=T(e.minMiddleAmount,O),m=await Se(p,t,e.mctpInputContract,o,u,s?.inputCoin),c=i?Xe:Ze,l=I(n,r),f=re(e.toChain),y=T(e.gasDrop,Math.min(B(e.toChain),8)),b=T(e.redeemRelayerFee,O),g=i?Uint8Array.from(i):Uint8Array.from([]),[h]=u.moveCall({package:a,module:"bridge_with_fee",function:"prepare_bridge_with_fee",typeArguments:[e.mctpInputContract],arguments:[u.pure.u8(c),m,u.pure.u64(p),u.pure.address(l),u.pure.u32(f),u.pure.u64(y),u.pure.u64(b),u.pure.vector("u8",g)]}),[w,C]=u.moveCall({package:a,module:"bridge_with_fee",function:"bridge_with_fee",typeArguments:[e.mctpInputContract],arguments:[u.object(d.SUI_MCTP_STATE),u.object(d.SUI_CCTP_CORE_STATE),u.object(e.mctpVerifiedInputAddress),h]}),[R,P]=u.moveCall({package:d.SUI_CCTP_TOKEN_PACKAGE_ID,module:"deposit_for_burn",function:"deposit_for_burn_with_caller_with_package_auth",typeArguments:[e.mctpInputContract,`${a}::bridge_with_fee::CircleAuth`],arguments:[C,u.object(d.SUI_CCTP_TOKEN_STATE),u.object(d.SUI_CCTP_CORE_STATE),u.object("0x403"),u.object(e.mctpInputTreasury)]}),[_]=u.moveCall({package:a,module:"bridge_with_fee",function:"publish_bridge_with_fee",arguments:[u.object(d.SUI_MCTP_STATE),w,P]});return await wa(u,_,o,BigInt(e.bridgeFee),t,s?.whFeeCoin),u}import{Transaction as ha}from"@mysten/sui/transactions";import{SystemProgram as $r}from"@solana/web3.js";async function Ia(e,t,n,a,i,o){if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase()||e.type!=="MCTP")throw new Error("Unsupported quote type for USDC deposit: "+e.type);if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(!o?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(!Number(e.deadline64))throw new Error("HyperCore deposit requires timeout");let[s]=await Promise.all([Ye(d.SUI_MCTP_STATE,i)]),r=T(e.minMiddleAmount,O),u,p,m;if(e.fromToken.contract===e.hyperCoreParams.initiateTokenContract)u=o?.builtTransaction??new ha,p=await Se(BigInt(e.hyperCoreParams.bridgeAmountUSDC64),t,e.mctpInputContract,i,u,o?.inputCoin);else{let{tx:y,outCoin:b,whFeeCoin:g}=await tt({amountIn64:e.effectiveAmountIn64,inputCoinType:e.fromToken.contract,middleCoinType:e.hyperCoreParams.initiateTokenContract,userWallet:t,withWhFee:!0,referrerAddress:a,inputCoin:o?.inputCoin,transaction:o?.builtTransaction?await o.builtTransaction.toJSON():void 0});u=ha.from(y);let[h]=u.splitCoins(b,[BigInt(e.hyperCoreParams.bridgeAmountUSDC64)]);u.transferObjects([b],u.pure.address(t)),p=h,m=g?{result:g}:null}let c=qe(e,n,o.usdcPermitSignature);await Gt({swapperAddress:t,destinationAddress:d.HC_ARBITRUM_DEPOSIT_PROCESSOR,mctpPackageId:s,toChain:"arbitrum",minMiddleAmount:Yt(e.hyperCoreParams.bridgeAmountUSDC64,O),bridgeFee:e.bridgeFee,gasDrop:e.hyperCoreParams.failureGasDrop,mctpInputContract:e.mctpInputContract,mctpInputTreasury:e.mctpInputTreasury,mctpVerifiedInputAddress:e.mctpVerifiedInputAddress,redeemRelayerFee:0,payload:c,suiClient:i,options:{inputCoin:{result:p},whFeeCoin:m,builtTransaction:u}});let l=BigInt(e.effectiveAmountIn64),f=Uint8Array.from(c);u.moveCall({package:s,module:"init_order",function:"log_initialize_mctp",typeArguments:[e.fromToken.contract],arguments:[u.pure.u64(l),u.object(e.fromToken.verifiedAddress),u.pure.vector("u8",f)]});try{let y;a?y=I(a,S(e.toChain)):y=I($r.programId.toString(),S("solana")),u.moveCall({package:d.SUI_LOGGER_PACKAGE_ID,module:"referrer_logger",function:"log_referrer",arguments:[u.pure.address(y),u.pure.u8(e.referrerBps||0)]})}catch(y){console.error("Failed to log referrer",y)}return u}async function Bu(e,t,n,a,i,o,s){let r=he(e,a);if(e.toChain==="hypercore"){if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(!s?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(e.type!=="MCTP")throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);if(i)throw new Error("Payload is not supported for HyperCore deposit quotes");return Ia(e,t,n,r,o,s)}if(e.type==="MCTP")return Ta(e,t,n,r,i,o,s);throw new Error("Unsupported quote type from Sui chain")}export{qt as FAST_MCTP_PAYLOAD_TYPE_CUSTOM_PAYLOAD,Xt as FAST_MCTP_PAYLOAD_TYPE_DEFAULT,en as FAST_MCTP_PAYLOAD_TYPE_ORDER,Zt as MCTP_INIT_ORDER_PAYLOAD_ID,Xe as MCTP_PAYLOAD_TYPE_CUSTOM_PAYLOAD,Ze as MCTP_PAYLOAD_TYPE_DEFAULT,Ka as PermitTypes,j as ZeroPermit,jr as addBridgeLockedFeeMoveCalls,Qr as addBridgeWithFeeMoveCalls,Gt as addBridgeWithFeeMoveCalls2,Yr as addInitOrderMoveCalls,d as addresses,ga as assertArgumentIsImmutable,Pn as broadcastJitoBundleId,tn as checkHyperCoreDeposit,Jt as checkSdkVersionSupport,_n as confirmJitoBundleId,In as createApproveInstruction,H as createAssociatedTokenAccountInstruction,nr as createCloseAccountInstruction,Hn as createHyperCoreDepositFromSolanaInstructions,Ie as createInitializeRandomTokenAccountInstructions,Ge as createMctpBridgeLedgerInstruction,Ke as createMctpBridgeWithFeeInstruction,Wn as createMctpFromSolanaInstructions,Ta as createMctpFromSuiMoveCalls,Vn as createMonoChainFromSolanaInstructions,St as createPayloadWriterCloseInstruction,Ct as createPayloadWriterCreateInstruction,ye as createSplTransferInstruction,Mr as createSwapFromSolanaInstructions,Bu as createSwapFromSuiMoveCalls,Kn as createSwiftFromSolanaInstructions,Pt as createSwiftOrderHash,Le as createSyncNativeInstruction,Re as createTransferAllAndCloseInstruction,fe as decentralizeClientSwapInstructions,An as decideRelayer,at as deserializeInstructionInfo,eu as estimateQuoteRequiredGas,tu as estimateQuoteRequiredGasAprox,Lt as fetchAllCoins,yi as fetchAllTokenList,Ye as fetchMayanSuiPackageId,bi as fetchQuote,fi as fetchTokenList,Ha as generateFetchQuoteUrl,ke as getAddressLookupTableAccounts,T as getAmountOfFractionalAmount,$ as getAnchorInstructionData,D as getAssociatedTokenAddress,gi as getCurrentChainTime,Yt as getDisplayAmount,$t as getEvmChainIdByName,Xn as getEvmSwiftParams,oa as getFastMctpFromEvmTxPayload,B as getGasDecimal,zt as getGasDecimalsInSolana,ua as getHyperCoreDepositFromEvmTxPayload,qe as getHyperCoreUSDCDepositCustomPayload,ui as getHyperCoreUSDCDepositPermitParams,Cn as getJitoTipTransfer,cn as getMctpFromEvmTxPayload,da as getMonoChainFromEvmTxPayload,La as getPermitDomain,Ga as getPermitParams,he as getQuoteSuitableReferrerAddress,v as getSafeU64Blob,Ue as getSdkVersion,nn as getSuggestedRelayer,Ut as getSwapFromEvmTxPayload,de as getSwapSolana,tt as getSwapSui,ea as getSwiftFromEvmGasLessParams,qn as getSwiftFromEvmTxPayload,Rr as getSwiftOrderTypeData,G as getWormholeChainIdById,S as getWormholeChainIdByName,W as hexToUint8Array,Na as isValidAptosType,I as nativeAddressToHexString,Se as resolveInputCoin,At as sendJitoBundle,te as solMint,an as submitSwiftEvmSwap,rn as submitSwiftSolanaSwap,ot as submitTransactionWithRetry,qp as swapFromEvm,Eo as swapFromSolana,Ji as unwrapSol,ue as validateJupSwap,Mn as validateJupSwapInstructionData,ze as wait,$i as wrapSol};
