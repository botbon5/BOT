var ga=Object.create;var at=Object.defineProperty;var Ta=Object.getOwnPropertyDescriptor;var wa=Object.getOwnPropertyNames;var ha=Object.getPrototypeOf,Ia=Object.prototype.hasOwnProperty;var Aa=(e,t)=>{for(var n in t)at(e,n,{get:t[n],enumerable:!0})},un=(e,t,n,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of wa(t))!Ia.call(e,i)&&i!==n&&at(e,i,{get:()=>t[i],enumerable:!(a=Ta(t,i))||a.enumerable});return e};var rt=(e,t,n)=>(n=e!=null?ga(ha(e)):{},un(t||!e||!e.__esModule?at(n,"default",{value:e,enumerable:!0}):n,e)),Ca=e=>un(at({},"__esModule",{value:!0}),e);var or={};Aa(or,{FAST_MCTP_PAYLOAD_TYPE_CUSTOM_PAYLOAD:()=>kt,FAST_MCTP_PAYLOAD_TYPE_DEFAULT:()=>Mt,FAST_MCTP_PAYLOAD_TYPE_ORDER:()=>Rt,MCTP_INIT_ORDER_PAYLOAD_ID:()=>Pt,MCTP_PAYLOAD_TYPE_CUSTOM_PAYLOAD:()=>Je,MCTP_PAYLOAD_TYPE_DEFAULT:()=>$e,PermitTypes:()=>ln,ZeroPermit:()=>z,addBridgeLockedFeeMoveCalls:()=>ta,addBridgeWithFeeMoveCalls:()=>ea,addBridgeWithFeeMoveCalls2:()=>Tt,addInitOrderMoveCalls:()=>na,addresses:()=>d,assertArgumentIsImmutable:()=>rn,broadcastJitoBundleId:()=>Kt,checkHyperCoreDeposit:()=>Et,checkSdkVersionSupport:()=>St,confirmJitoBundleId:()=>Lt,createApproveInstruction:()=>Nt,createAssociatedTokenAccountInstruction:()=>$,createCloseAccountInstruction:()=>En,createHyperCoreDepositFromSolanaInstructions:()=>Qt,createInitializeRandomTokenAccountInstructions:()=>ke,createMctpBridgeLedgerInstruction:()=>Ke,createMctpBridgeWithFeeInstruction:()=>Le,createMctpFromSolanaInstructions:()=>Ht,createMctpFromSuiMoveCalls:()=>sn,createMonoChainFromSolanaInstructions:()=>jt,createPayloadWriterCloseInstruction:()=>ut,createPayloadWriterCreateInstruction:()=>pt,createSplTransferInstruction:()=>Ae,createSwapFromSolanaInstructions:()=>Vn,createSwapFromSuiMoveCalls:()=>sr,createSwiftFromSolanaInstructions:()=>Vt,createSwiftOrderHash:()=>ct,createSyncNativeInstruction:()=>Ue,createTransferAllAndCloseInstruction:()=>Fe,decentralizeClientSwapInstructions:()=>Ce,decideRelayer:()=>Wt,deserializeInstructionInfo:()=>qe,estimateQuoteRequiredGas:()=>rr,estimateQuoteRequiredGasAprox:()=>ir,fetchAllCoins:()=>ft,fetchAllTokenList:()=>ka,fetchMayanSuiPackageId:()=>He,fetchQuote:()=>Ea,fetchTokenList:()=>Ra,generateFetchQuoteUrl:()=>fn,getAddressLookupTableAccounts:()=>De,getAmountOfFractionalAmount:()=>T,getAnchorInstructionData:()=>ee,getAssociatedTokenAddress:()=>v,getCurrentChainTime:()=>Oa,getDisplayAmount:()=>At,getEvmChainIdByName:()=>Ct,getEvmSwiftParams:()=>$t,getFastMctpFromEvmTxPayload:()=>Xt,getGasDecimal:()=>W,getGasDecimalsInSolana:()=>_t,getHyperCoreDepositFromEvmTxPayload:()=>tn,getHyperCoreUSDCDepositCustomPayload:()=>ze,getHyperCoreUSDCDepositPermitParams:()=>Ma,getJitoTipTransfer:()=>Ut,getMctpFromEvmTxPayload:()=>Bt,getMonoChainFromEvmTxPayload:()=>nn,getPermitDomain:()=>dn,getPermitParams:()=>yn,getQuoteSuitableReferrerAddress:()=>Me,getSafeU64Blob:()=>B,getSdkVersion:()=>Ne,getSuggestedRelayer:()=>Ot,getSwapFromEvmTxPayload:()=>yt,getSwapSolana:()=>Ie,getSwapSui:()=>Ze,getSwiftFromEvmGasLessParams:()=>zt,getSwiftFromEvmTxPayload:()=>Jt,getSwiftOrderTypeData:()=>Qn,getWormholeChainIdById:()=>Y,getWormholeChainIdByName:()=>P,hexToUint8Array:()=>L,isValidAptosType:()=>mn,nativeAddressToHexString:()=>I,resolveInputCoin:()=>Ee,sendJitoBundle:()=>ot,solMint:()=>ue,submitSwiftEvmSwap:()=>Dt,submitSwiftSolanaSwap:()=>Ft,submitTransactionWithRetry:()=>et,swapFromEvm:()=>ar,swapFromSolana:()=>$a,unwrapSol:()=>Ua,validateJupSwap:()=>fe,validateJupSwapInstructionData:()=>Gt,wait:()=>Ye,wrapSol:()=>Wa});module.exports=Ca(or);var le=rt(require("cross-fetch"));var d={MAYAN_FORWARDER_CONTRACT:"0x337685fdaB40D39bd02028545a4FfA7D287cC3E2",MAYAN_PROGRAM_ID:"FC4eXxkyrMPTjiYUpp4EAnkmwMbQyZ6NDCh1kfLn6vsf",AUCTION_PROGRAM_ID:"8QJmxZcEzwuYmCPy6XqgN2sHcYCcFq6AEfBMJZZuLo5a",MCTP_PROGRAM_ID:"dkpZqrxHFrhziEMQ931GLtfy11nFkCsfMftH9u6QwBU",SWIFT_PROGRAM_ID:"BLZRi6frs4X4DNLw56V4EXai1b6QVESN1BhHBTYM9VcY",FEE_MANAGER_PROGRAM_ID:"5VtQHnhs2pfVEr68qQsbTRwKh4JV5GTu9mBHgHFxpHeQ",WORMHOLE_PROGRAM_ID:"worm2ZoG2kUd4vFXhvjh93UUH596ayRfgQ2MgjNMTth",CCTP_CORE_PROGRAM_ID:"CCTPmbSD7gX1bxKPAmg77w8oFzNFpaQiQUWD43TKaecd",CCTP_TOKEN_PROGRAM_ID:"CCTPiPYPc6AsJuwueEnWgSgucamXDZwBd53dQ11YiKX3",TOKEN_PROGRAM_ID:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",TOKEN_2022_PROGRAM_ID:"TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb",ASSOCIATED_TOKEN_PROGRAM_ID:"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",SPL_UTILS_PROGRAM_ID:"B96dV3Luxzo6SokJx3xt8i5y8Mb7HRR6Eec8hCjJDT69",LOOKUP_TABLE:"Ff3yi1meWQQ19VPZMzGg6H8JQQeRudiV7QtVtyzJyoht",SUI_MCTP_STATE:"0xb787fe0f7530b4fd2162fa0cc92f4f6c5a97c54b4c5c55eb04ab29f4b803ac9c",SUI_MCTP_FEE_MANAGER_STATE:"0xa1b4a96ce93d36dd0bbce0adc39533a07d2f32928918c80cd6fe7868320978f2",SUI_CCTP_CORE_PACKAGE_ID:"0x08d87d37ba49e785dde270a83f8e979605b03dc552b5548f26fdf2f49bf7ed1b",SUI_CCTP_CORE_STATE:"0xf68268c3d9b1df3215f2439400c1c4ea08ac4ef4bb7d6f3ca6a2a239e17510af",SUI_CCTP_TOKEN_PACKAGE_ID:"0x2aa6c5d56376c371f88a6cc42e852824994993cb9bab8d3e6450cbe3cb32b94e",SUI_CCTP_TOKEN_STATE:"0x45993eecc0382f37419864992c12faee2238f5cfe22b98ad3bf455baf65c8a2f",SUI_WORMHOLE_PACKAGE_ID:"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a",SUI_WORMHOLE_STATE:"0xaeab97f96cf9877fee2883315d459552b2b921edc16d7ceac6eab944dd88919c",SUI_LOGGER_PACKAGE_ID:"0x05680e9030c147b413a489f7891273acc221d49bd061c433e5771bc170fc37ac",EXPLORER_URL:"https://explorer-api.mayan.finance/v3",PRICE_URL:"https://price-api.mayan.finance/v3",RELAYER_URL:"https://relayer-api.mayan.finance/v3",HC_ARBITRUM_BRIDGE:"0x2df1c51e09aecf9cacb7bc98cb1742757f163df7",HC_ARBITRUM_DEPOSIT_PROCESSOR:"0xdDd77e62C848C3334f1148d4F1457FC59ede4E4B",ARBITRUM_USDC_CONTRACT:"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",PAYLOAD_WRITER_PROGRAM_ID:"DwMLtdtJqJQkHzNcrdTBuWHJByJfgpKBnvFvzyKdy3cU"};var re=require("ethers"),he=require("@solana/web3.js"),Oe=require("buffer");var ht={_format:"hh-sol-artifact-1",contractName:"ERC20Permit",sourceName:"contracts/token/ERC20/extensions/ERC20Permit.sol",abi:[{inputs:[],name:"ECDSAInvalidSignature",type:"error"},{inputs:[{internalType:"uint256",name:"length",type:"uint256"}],name:"ECDSAInvalidSignatureLength",type:"error"},{inputs:[{internalType:"bytes32",name:"s",type:"bytes32"}],name:"ECDSAInvalidSignatureS",type:"error"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"allowance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"}],name:"ERC20InsufficientAllowance",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"}],name:"ERC20InsufficientBalance",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC20InvalidApprover",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC20InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC20InvalidSender",type:"error"},{inputs:[{internalType:"address",name:"spender",type:"address"}],name:"ERC20InvalidSpender",type:"error"},{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"}],name:"ERC2612ExpiredSignature",type:"error"},{inputs:[{internalType:"address",name:"signer",type:"address"},{internalType:"address",name:"owner",type:"address"}],name:"ERC2612InvalidSigner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"currentNonce",type:"uint256"}],name:"InvalidAccountNonce",type:"error"},{inputs:[],name:"InvalidShortString",type:"error"},{inputs:[{internalType:"string",name:"str",type:"string"}],name:"StringTooLong",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[],name:"EIP712DomainChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"eip712Domain",outputs:[{internalType:"bytes1",name:"fields",type:"bytes1"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"version",type:"string"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"address",name:"verifyingContract",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256[]",name:"extensions",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],bytecode:"0x",deployedBytecode:"0x",linkReferences:{},deployedLinkReferences:{}};var cn=rt(require("js-sha3"));var de=require("@solana/web3.js");var be=require("buffer"),x=6;function ge(e){switch(e){case"ethereum":return 0;case"avalanche":return 1;case"optimism":return 2;case"arbitrum":return 3;case"solana":return 5;case"base":return 6;case"polygon":return 7;case"sui":return 8;case"unichain":return 10;case"linea":return 11;case"sonic":return 13;default:throw new Error("unsupported chain for cctp")}}function it(e,t){let n=new de.PublicKey(d.CCTP_CORE_PROGRAM_ID),a=new de.PublicKey(d.CCTP_TOKEN_PROGRAM_ID),[i]=de.PublicKey.findProgramAddressSync([be.Buffer.from("message_transmitter")],n),[o]=de.PublicKey.findProgramAddressSync([be.Buffer.from("sender_authority")],a),[s]=de.PublicKey.findProgramAddressSync([be.Buffer.from("local_token"),e.toBytes()],a),[r]=de.PublicKey.findProgramAddressSync([be.Buffer.from("token_messenger")],a),[u]=de.PublicKey.findProgramAddressSync([be.Buffer.from("token_minter")],a),p=ge(t),[m]=de.PublicKey.findProgramAddressSync([be.Buffer.from("remote_token_messenger"),be.Buffer.from(p.toString())],a),[c]=de.PublicKey.findProgramAddressSync([be.Buffer.from("__event_authority")],n),[l]=de.PublicKey.findProgramAddressSync([be.Buffer.from("__event_authority")],a);return{messageTransmitter:i,senderAuthority:o,remoteTokenMessengerKey:m,tokenMessenger:r,tokenMinter:u,eventAuthToken:l,eventAuthCore:c,localToken:s}}var Sa=cn.sha3_256,mn=e=>/^(0x)?[0-9a-fA-F]+::\w+::\w+$/.test(e);function I(e,t){if(t===1)return(0,re.zeroPadValue)(new he.PublicKey(e).toBytes(),32);if(t===X.ethereum||t===X.bsc||t===X.polygon||t===X.avalanche||t===X.arbitrum||t===X.optimism||t===X.base||t===X.unichain||t===X.linea||t===X.sonic)return(0,re.zeroPadValue)(e,32);if(t===X.aptos&&mn(e))return`0x${Sa(e)}`;if(t===X.sui){let n=e.startsWith("0x")?e.substring(2):e;if(Oe.Buffer.from(n,"hex").length!==32)throw new Error("Invalid sui address: "+e);return(0,re.zeroPadValue)(e,32)}else throw console.log(`Unsupported chain id: ${t}`,e),new Error("Unsupported token chain")}function L(e){return new Uint8Array(Oe.Buffer.from(e.startsWith("0x")?e.substring(2):e,"hex"))}function v(e,t,n=!1,a=new he.PublicKey(d.TOKEN_PROGRAM_ID),i=new he.PublicKey(d.ASSOCIATED_TOKEN_PROGRAM_ID)){if(!n&&!he.PublicKey.isOnCurve(t.toBuffer()))throw new Error("TokenOwnerOffCurveError");let[o]=he.PublicKey.findProgramAddressSync([t.toBuffer(),a.toBuffer(),e.toBuffer()],i);return o}function _a(e){return(typeof e=="string"||typeof e=="number")&&e!==""&&e!==null&&!isNaN(Number(e))&&Number.isFinite(Number(e))}function T(e,t){if(e==null)throw new Error("getAmountOfFractionalAmount: Amount is null or undefined");if(typeof e!="string"&&typeof e!="number")throw new Error("getAmountOfFractionalAmount: Amount is not a string or number");if(typeof e=="string"&&e.length===0)throw new Error("getAmountOfFractionalAmount: Amount is empty");if(!Number.isFinite(Number(e)))throw new Error("getAmountOfFractionalAmount: Amount is not a number");if(!_a(t))throw new Error("getAmountOfFractionalAmount: decimals is not a number");let n=Math.min(8,Number(t)),a=Number(e).toFixed(n+1),i=new RegExp(`^-?\\d+(?:\\.\\d{0,${n}})?`),o=a.match(i);if(!o)throw new Error("getAmountOfFractionalAmount: fixedAmount is null");let s=o[0];return(0,re.parseUnits)(s,Number(t))}function At(e,t){return Number((0,re.formatUnits)(e,t))}var X={solana:1,ethereum:2,bsc:4,polygon:5,avalanche:6,arbitrum:23,optimism:24,base:30,aptos:22,sui:21,unichain:44,linea:38,hypercore:65e3,sonic:52};function P(e){return X[e]}var It={[1]:2,[56]:4,[137]:5,[43114]:6,[42161]:23,[10]:24,[8453]:30,[130]:44,[59144]:38,[146]:52};function Ct(e){let t=X[e],n=Object.keys(It);for(let a of n)if(It[a]===t)return Number(a);throw new Error(`Unsupported chain: ${e}`)}function Y(e){return It[e]}var Be=[10,9,2];function Ne(){return Be.join("_")}function St(e){return Be[0]<e[0]?!1:Be[0]>e[0]?!0:Be[1]<e[1]?!1:Be[1]>e[1]||Be[2]>=e[2]}function W(e){return e==="solana"?9:18}function _t(e){return e==="solana"?9:8}var Pa=BigInt(2)**BigInt(64)-BigInt(1);function B(e){if(e<BigInt(0)||e>Pa)throw new Error(`Invalid u64: ${e}`);let t=Oe.Buffer.alloc(8);return t.writeBigUInt64LE(e),t}var z={value:BigInt(0),deadline:0,v:0,r:`0x${he.SystemProgram.programId.toBuffer().toString("hex")}`,s:`0x${he.SystemProgram.programId.toBuffer().toString("hex")}`};function Ye(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}function Me(e,t){return!e||!t?null:e.type==="WH"?t?.solana||null:e.type==="MCTP"||e.type==="SWIFT"?e.toChain==="solana"?t?.solana||null:e.toChain==="sui"?t?.sui||null:t?.evm||null:e.type==="FAST_MCTP"&&e.toChain!=="solana"&&e.toChain!=="sui"?t?.evm||null:e.type==="MONO_CHAIN"?e.fromChain==="solana"?t?.solana||null:e.fromChain==="sui"?t?.sui||null:t?.evm||null:null}var $e=1,Je=2,Pt=1,Mt=1,kt=2,Rt=3;async function dn(e,t){let n=new re.ethers.Contract(e.contract,ht.abi,t),a,i;try{let[s,r]=await Promise.all([n.DOMAIN_SEPARATOR(),n.name()]);a=s,i=r}catch{throw{mayanError:{permitIssue:!0}}}let o={name:i,version:"1",chainId:e.chainId,verifyingContract:e.contract};for(let s=1;s<11;s++)if(o.version=String(s),re.TypedDataEncoder.hashDomain(o).toLowerCase()===a.toLowerCase())return o;throw{mayanError:{permitIssue:!0}}}var ln={Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]};async function yn(e,t,n,a,i,o){if(e.standard!=="erc20"&&e.standard!=="hypertoken")throw new Error("Token is not ERC20");if(!e.supportsPermit)throw new Error("Token does not support permit");let s=new re.ethers.Contract(e.contract,ht.abi,i),[r,u]=await Promise.all([dn(e,i),s.nonces(t)]);return{domain:r,types:ln,value:{owner:t,spender:n,nonce:String(u),value:String(a),deadline:String(o)}}}async function Ma(e,t,n){if(!e.hyperCoreParams)throw new Error("Quote does not have hyperCoreParams");if(e.toChain!=="hypercore")throw new Error("Quote toChain is not hypercore");if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase())throw new Error("Quote toToken is not USDC on Arbitrum");let a={name:"USDC",standard:"erc20",symbol:"USDC",mint:"CR4xnGrhsu1fWNPoX4KbTUUtqGMF3mzRLfj4S6YEs1Yo",verified:!0,contract:"0xaf88d065e77c8cc2239327c5edb3a432268e5831",chainId:42161,wChainId:23,decimals:6,logoURI:"http://assets.coingecko.com/coins/images/6319/small/usdc.png?1696506694",coingeckoId:"usd-coin",realOriginContractAddress:"0xaf88d065e77c8cc2239327c5edb3a432268e5831",realOriginChainId:23,supportsPermit:!0,verifiedAddress:"0xaf88d065e77c8cc2239327c5edb3a432268e5831"},[i,o]=await Promise.all([yn(a,t,d.HC_ARBITRUM_BRIDGE,BigInt(e.hyperCoreParams.depositAmountUSDC64),n,BigInt(e.deadline64)),Et(t,e.toToken.contract)]);if(!o)throw new Error("Because of concurrency, deposit is not possible at the moment, please try again later");return i}function ze(e,t,n){let a=Oe.Buffer.alloc(109),i=Oe.Buffer.from(L(t));if(i.length!==20)throw new Error("Invalid destination address length, expected 20 bytes");let o=Oe.Buffer.from(L(n));if(o.length!==65)throw new Error("Invalid USDC permit signature length, expected 65 bytes");return a.writeBigUInt64BE(T(e.redeemRelayerFee,x),0),a.set(i,8),a.writeBigUInt64BE(BigInt(e.hyperCoreParams.depositAmountUSDC64),28),a.writeBigUInt64BE(BigInt(e.deadline64),36),a.set(o,44),a}function st(e){return Object.entries(e).filter(([t,n])=>n!=null&&!Array.isArray(n)).map(([t,n])=>`${encodeURIComponent(t)}=${encodeURIComponent(n)}`).join("&")}async function Te(e){if(e.status.toString().startsWith("5")){let t;try{let n=await e.json();(n?.code||n?.statusCode)&&(n?.message||n?.msg)&&(t={code:n?.code||n?.statusCode,message:n?.message||n?.msg})}catch{t=new Error("Internal server error")}throw t}}async function ka(e){let t=e?`?standard=${e.join(",")}`:"",n=await(0,le.default)(`${d.PRICE_URL}/tokens${t}`,{method:"GET",redirect:"follow"});if(await Te(n),n.status===200)return await n.json();throw new Error("Cannot fetch Mayan tokens!")}async function Ra(e,t=!1,n){let a={chain:e,nonPortal:t,standard:n?n?.join(","):void 0},i=await(0,le.default)(`${d.PRICE_URL}/tokens?${st(a)}`);if(await Te(i),i.status===200)return(await i.json())[e];throw new Error("Cannot fetch Mayan tokens!")}function fn(e,t={wormhole:!0,swift:!0,mctp:!0,shuttle:!0,gasless:!1,onlyDirect:!1,fastMctp:!0,fullList:!1,payload:void 0,monoChain:!0}){let{gasDrop:n,referrerBps:a}=e,i=e.slippageBps;i!=="auto"&&!Number.isFinite(i)&&(i=e.slippage*100);let s={...{wormhole:t.wormhole!==!1,swift:t.swift!==!1,mctp:t.mctp!==!1,shuttle:t.shuttle===!0,fastMctp:t.fastMctp!==!1,gasless:t.gasless===!0,onlyDirect:t.onlyDirect===!0,fullList:t.fullList===!0,payload:typeof t.payload=="string"?t.payload:void 0,monoChain:t.monoChain!==!1},solanaProgram:d.MAYAN_PROGRAM_ID,forwarderAddress:d.MAYAN_FORWARDER_CONTRACT,amountIn:!e.amountIn64&&Number.isFinite(e.amount)?e.amount:void 0,amountIn64:e.amountIn64,fromToken:e.fromToken,fromChain:e.fromChain,toToken:e.toToken,toChain:e.toChain,slippageBps:i,referrer:e.referrer,referrerBps:Number.isFinite(a)?a:void 0,gasDrop:Number.isFinite(n)?n:void 0,sdkVersion:Ne()},r=`${d.PRICE_URL}/quote?`,u=st(s);return r+u}async function Ea(e,t={swift:!0,mctp:!0,gasless:!1,onlyDirect:!1}){let n=fn(e,t),a=await(0,le.default)(n,{method:"GET",redirect:"follow"});await Te(a);let i=await a.json();if(a.status!==200&&a.status!==201)throw{code:i?.code||0,message:i?.msg||i?.message||"Route not found",data:i?.data};if(!St(i.minimumSdkVersion))throw{code:9999,message:"Swap SDK is outdated!"};return i.quotes}async function Oa(e){let t=await(0,le.default)(`${d.PRICE_URL}/clock/${e}`,{method:"GET",redirect:"follow"});await Te(t);let n=await t.json();if(t.status!==200&&t.status!==201)throw n;return n.clock}async function Ot(){let e=await(0,le.default)(`${d.RELAYER_URL}/active-relayers?solanaProgram=${d.MAYAN_PROGRAM_ID}`,{method:"GET",redirect:"follow"});await Te(e);let t=await e.json();if(e.status!==200&&e.status!==201)throw t;return t.suggested}async function Ie(e){let t=st({...e,sdkVersion:Ne()}),n=await(0,le.default)(`${d.PRICE_URL}/get-swap/solana?${t}`,{method:"GET",redirect:"follow"});await Te(n);let a=await n.json();if(n.status!==200&&n.status!==201)throw a;return a}async function Ze(e){let t=JSON.stringify({...e,sdkVersion:Ne()}),n=`${d.PRICE_URL}/get-swap/sui`,a=await(0,le.default)(n,{method:"POST",redirect:"follow",body:t,headers:{"Content-Type":"application/json"}});await Te(a);let i=await a.json();if(a.status!==200&&a.status!==201)throw i;return i}async function Dt(e,t){let n=await(0,le.default)(`${d.EXPLORER_URL}/submit/evm`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...e,signature:t},(a,i)=>typeof i=="bigint"?i.toString():i)});await Te(n)}async function Ft(e){let t=await(0,le.default)(`${d.EXPLORER_URL}/submit/solana`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({signedTx:e})});await Te(t);let n=await t.json();if(t.status!==200&&t.status!==201)throw n;return n}async function Et(e,t){let n=st({destWallet:e,destToken:t,sdkVersion:Ne()}),a=await(0,le.default)(`${d.EXPLORER_URL}/hypercore/is-allowed?${n}`,{method:"GET",redirect:"follow"});await Te(a);let i=await a.json();if(a.status!==200&&a.status!==201)throw i;return i.allowed===!0}var Pe=require("ethers"),Ge=require("@solana/web3.js");var bn={_format:"hh-sol-artifact-1",contractName:"MayanSwap",sourceName:"src/MayanSwap.sol",abi:[{inputs:[{internalType:"address",name:"_tokenBridge",type:"address"},{internalType:"address",name:"_weth",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint16",name:"emitterChainId",type:"uint16"},{indexed:!0,internalType:"bytes32",name:"emitterAddress",type:"bytes32"},{indexed:!0,internalType:"uint64",name:"sequence",type:"uint64"}],name:"Redeemed",type:"event"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint8",name:"payloadId",type:"uint8"},{internalType:"bytes32",name:"tokenAddr",type:"bytes32"},{internalType:"uint16",name:"tokenChainId",type:"uint16"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"sourceAddr",type:"bytes32"},{internalType:"uint16",name:"sourceChainId",type:"uint16"},{internalType:"uint64",name:"sequence",type:"uint64"},{internalType:"uint64",name:"amountOutMin",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"uint64",name:"swapFee",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"bytes32",name:"auctionAddr",type:"bytes32"},{internalType:"bool",name:"unwrapRedeem",type:"bool"},{internalType:"bool",name:"unwrapRefund",type:"bool"}],internalType:"struct MayanStructs.Swap",name:"s",type:"tuple"}],name:"encodeSwap",outputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getWeth",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseRedeemPayload",outputs:[{components:[{internalType:"uint8",name:"payloadId",type:"uint8"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"uint64",name:"relayerFee",type:"uint64"},{internalType:"bool",name:"unwrap",type:"bool"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes",name:"customPayload",type:"bytes"}],internalType:"struct MayanStructs.Redeem",name:"r",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"redeem",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"redeemAndUnwrap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_pause",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"swapFee",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"}],internalType:"struct MayanSwap.RelayerFees",name:"relayerFees",type:"tuple"},{components:[{internalType:"bytes32",name:"mayanAddr",type:"bytes32"},{internalType:"uint16",name:"mayanChainId",type:"uint16"},{internalType:"bytes32",name:"auctionAddr",type:"bytes32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrer",type:"bytes32"},{internalType:"bytes32",name:"refundAddr",type:"bytes32"}],internalType:"struct MayanSwap.Recepient",name:"recipient",type:"tuple"},{internalType:"bytes32",name:"tokenOutAddr",type:"bytes32"},{internalType:"uint16",name:"tokenOutChainId",type:"uint16"},{components:[{internalType:"uint256",name:"transferDeadline",type:"uint256"},{internalType:"uint64",name:"swapDeadline",type:"uint64"},{internalType:"uint64",name:"amountOutMin",type:"uint64"},{internalType:"bool",name:"unwrap",type:"bool"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes",name:"customPayload",type:"bytes"}],internalType:"struct MayanSwap.Criteria",name:"criteria",type:"tuple"},{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"swap",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address payable",name:"to",type:"address"}],name:"sweepEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"sweepToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"swapFee",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"}],internalType:"struct MayanSwap.RelayerFees",name:"relayerFees",type:"tuple"},{components:[{internalType:"bytes32",name:"mayanAddr",type:"bytes32"},{internalType:"uint16",name:"mayanChainId",type:"uint16"},{internalType:"bytes32",name:"auctionAddr",type:"bytes32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrer",type:"bytes32"},{internalType:"bytes32",name:"refundAddr",type:"bytes32"}],internalType:"struct MayanSwap.Recepient",name:"recipient",type:"tuple"},{internalType:"bytes32",name:"tokenOutAddr",type:"bytes32"},{internalType:"uint16",name:"tokenOutChainId",type:"uint16"},{components:[{internalType:"uint256",name:"transferDeadline",type:"uint256"},{internalType:"uint64",name:"swapDeadline",type:"uint64"},{internalType:"uint64",name:"amountOutMin",type:"uint64"},{internalType:"bool",name:"unwrap",type:"bool"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes",name:"customPayload",type:"bytes"}],internalType:"struct MayanSwap.Criteria",name:"criteria",type:"tuple"}],name:"wrapAndSwapETH",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}]};var q={_format:"hh-sol-artifact-1",contractName:"MayanForwarder",sourceName:"src/MayanForwarder.sol",abi:[{inputs:[{internalType:"address",name:"_guardian",type:"address"},{internalType:"address[]",name:"_swapProtocols",type:"address[]"},{internalType:"address[]",name:"_mayanProtocols",type:"address[]"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"UnsupportedProtocol",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"protocolData",type:"bytes"}],name:"ForwardedERC20",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"protocolData",type:"bytes"}],name:"ForwardedEth",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SwapAndForwarded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"tokenIn",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"address",name:"swapProtocol",type:"address"},{indexed:!1,internalType:"address",name:"middleToken",type:"address"},{indexed:!1,internalType:"uint256",name:"middleAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"mayanData",type:"bytes"}],name:"SwapAndForwardedERC20",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"address",name:"swapProtocol",type:"address"},{indexed:!1,internalType:"address",name:"middleToken",type:"address"},{indexed:!1,internalType:"uint256",name:"middleAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"mayanProtocol",type:"address"},{indexed:!1,internalType:"bytes",name:"mayanData",type:"bytes"}],name:"SwapAndForwardedEth",type:"event"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct MayanForwarder.PermitParams",name:"permitParams",type:"tuple"},{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"protocolData",type:"bytes"}],name:"forwardERC20",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"protocolData",type:"bytes"}],name:"forwardEth",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"mayanProtocols",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextGuardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address payable",name:"to",type:"address"}],name:"rescueEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"rescueToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bool",name:"enabled",type:"bool"}],name:"setMayanProtocol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bool",name:"enabled",type:"bool"}],name:"setSwapProtocol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct MayanForwarder.PermitParams",name:"permitParams",type:"tuple"},{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bytes",name:"swapData",type:"bytes"},{internalType:"address",name:"middleToken",type:"address"},{internalType:"uint256",name:"minMiddleAmount",type:"uint256"},{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"mayanData",type:"bytes"}],name:"swapAndForwardERC20",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bytes",name:"swapData",type:"bytes"},{internalType:"address",name:"middleToken",type:"address"},{internalType:"uint256",name:"minMiddleAmount",type:"uint256"},{internalType:"address",name:"mayanProtocol",type:"address"},{internalType:"bytes",name:"mayanData",type:"bytes"}],name:"swapAndForwardEth",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"swapProtocols",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],linkReferences:{},deployedLinkReferences:{}};var an=require("buffer");var V=require("ethers"),xt=require("@solana/web3.js");var vt={_format:"hh-sol-artifact-1",contractName:"MayanCircle",sourceName:"src/MayanCircle.sol",abi:[{inputs:[{internalType:"address",name:"_cctpTokenMessenger",type:"address"},{internalType:"address",name:"_wormhole",type:"address"},{internalType:"address",name:"_feeManager",type:"address"},{internalType:"uint16",name:"_auctionChainId",type:"uint16"},{internalType:"bytes32",name:"_auctionAddr",type:"bytes32"},{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"CallerAlreadySet",type:"error"},{inputs:[],name:"CallerNotSet",type:"error"},{inputs:[],name:"CctpReceiveFailed",type:"error"},{inputs:[],name:"DeadlineViolation",type:"error"},{inputs:[],name:"DomainAlreadySet",type:"error"},{inputs:[],name:"DomainNotSet",type:"error"},{inputs:[],name:"EmitterAlreadySet",type:"error"},{inputs:[],name:"EthTransferFailed",type:"error"},{inputs:[],name:"InvalidAction",type:"error"},{inputs:[],name:"InvalidAddress",type:"error"},{inputs:[],name:"InvalidAmountOut",type:"error"},{inputs:[],name:"InvalidCaller",type:"error"},{inputs:[],name:"InvalidDestAddr",type:"error"},{inputs:[],name:"InvalidDomain",type:"error"},{inputs:[],name:"InvalidEmitter",type:"error"},{inputs:[],name:"InvalidGasDrop",type:"error"},{inputs:[],name:"InvalidMintRecipient",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidOrder",type:"error"},{inputs:[],name:"InvalidPayload",type:"error"},{inputs:[],name:"InvalidProtocolFee",type:"error"},{inputs:[],name:"InvalidRedeemFee",type:"error"},{inputs:[],name:"InvalidReferrerFee",type:"error"},{inputs:[],name:"MintRecipientAlreadySet",type:"error"},{inputs:[],name:"MintRecipientNotSet",type:"error"},{inputs:[],name:"Paused",type:"error"},{inputs:[],name:"Unauthorized",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint32",name:"sourceDomain",type:"uint32"},{indexed:!1,internalType:"uint64",name:"sourceNonce",type:"uint64"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"OrderFulfilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint32",name:"sourceDomain",type:"uint32"},{indexed:!1,internalType:"uint64",name:"sourceNonce",type:"uint64"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"OrderRefunded",type:"event"},{inputs:[],name:"auctionAddr",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"auctionChainId",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint32",name:"destDomain",type:"uint32"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"bytes",name:"customPayload",type:"bytes"}],name:"bridgeWithFee",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint256",name:"redeemFee",type:"uint256"},{internalType:"uint32",name:"destDomain",type:"uint32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"}],name:"bridgeWithLockedFee",outputs:[{internalType:"uint64",name:"cctpNonce",type:"uint64"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"cctpTokenMessenger",outputs:[{internalType:"contract ITokenMessenger",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint16",name:"",type:"uint16"}],name:"chainIdToEmitter",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"consistencyLevel",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChain",type:"uint16"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"}],internalType:"struct MayanCircle.OrderParams",name:"params",type:"tuple"}],name:"createOrder",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint32",name:"",type:"uint32"}],name:"domainToCaller",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"feeManager",outputs:[{internalType:"contract IFeeManager",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint64",name:"",type:"uint64"}],name:"feeStorage",outputs:[{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"redeemFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{internalType:"bytes",name:"encodedVm",type:"bytes"},{components:[{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"promisedAmount",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{internalType:"bytes32",name:"driver",type:"bytes32"}],internalType:"struct MayanCircle.FulfillParams",name:"params",type:"tuple"},{internalType:"address",name:"swapProtocol",type:"address"},{internalType:"bytes",name:"swapData",type:"bytes"}],name:"fulfillOrder",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint16",name:"chainId",type:"uint16"}],name:"getDomain",outputs:[{internalType:"uint32",name:"domain",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"keyToMintRecipient",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"localDomain",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{internalType:"bytes",name:"encodedVm",type:"bytes"},{components:[{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"uint64",name:"burnAmount",type:"uint64"},{internalType:"bytes32",name:"burnToken",type:"bytes32"},{internalType:"bytes32",name:"customPayload",type:"bytes32"}],internalType:"struct MayanCircle.BridgeWithFeeParams",name:"bridgeParams",type:"tuple"}],name:"redeemWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"}],name:"redeemWithLockedFee",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint32",name:"cctpNonce",type:"uint32"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"}],name:"refineFee",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"},{internalType:"bytes",name:"cctpMsg",type:"bytes"},{internalType:"bytes",name:"cctpSigs",type:"bytes"},{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChain",type:"uint16"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"uint64",name:"redeemFee",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"}],internalType:"struct MayanCircle.OrderParams",name:"orderParams",type:"tuple"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"uint16",name:"sourceChainId",type:"uint16"},{internalType:"uint8",name:"protocolBps",type:"uint8"}],internalType:"struct MayanCircle.ExtraParams",name:"extraParams",type:"tuple"}],name:"refund",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address payable",name:"to",type:"address"}],name:"rescueEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"rescueToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],name:"setConsistencyLevel",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint16",name:"chainId",type:"uint16"},{internalType:"uint32",name:"domain",type:"uint32"}],name:"setDomain",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint32",name:"domain",type:"uint32"},{internalType:"bytes32",name:"caller",type:"bytes32"}],name:"setDomainCaller",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint16",name:"chainId",type:"uint16"},{internalType:"bytes32",name:"emitter",type:"bytes32"}],name:"setEmitter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_feeManager",type:"address"}],name:"setFeeManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint32",name:"destDomain",type:"uint32"},{internalType:"address",name:"tokenIn",type:"address"},{internalType:"bytes32",name:"mintRecipient",type:"bytes32"}],name:"setMintRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_pause",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"},{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"uint64",name:"cctpNonce",type:"uint64"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"}],internalType:"struct MayanCircle.UnlockFeeMsg",name:"unlockMsg",type:"tuple"}],name:"unlockFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm1",type:"bytes"},{internalType:"bytes",name:"encodedVm2",type:"bytes"},{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"uint64",name:"cctpNonce",type:"uint64"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"}],internalType:"struct MayanCircle.UnlockFeeMsg",name:"unlockMsg",type:"tuple"},{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"uint8",name:"payloadType",type:"uint8"},{internalType:"uint64",name:"cctpNonce",type:"uint64"},{internalType:"uint32",name:"cctpDomain",type:"uint32"},{internalType:"bytes32",name:"unlockerAddr",type:"bytes32"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"}],internalType:"struct MayanCircle.UnlockRefinedFeeMsg",name:"refinedMsg",type:"tuple"}],name:"unlockFeeRefined",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"wormhole",outputs:[{internalType:"contract IWormhole",name:"",type:"address"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],linkReferences:{},deployedLinkReferences:{}};var wn=require("buffer");function Da(e,t,n,a){let i=Y(Number(n)),o=P(e.fromChain),s=P(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(n)}) and quote from chain are not same! ${o} !== ${i}`);let r=e.cheaperChain===e.fromChain;if(r&&a)throw new Error("Bridge lock fee cannot have custom payload");let u=I(t,s),p=T(e.redeemRelayerFee,x),m=T(e.gasDrop,Math.min(W(e.toChain),8)),c=BigInt(e.effectiveAmountIn64),l=ge(e.toChain);if(!e.mctpMayanContract)throw new Error("MCTP contract address is missing");let f=e.mctpMayanContract;if(e.toChain==="solana"&&r)throw new Error("Cannot lock fee for transfer to solana");let y=T(e.bridgeFee,W(e.fromChain));return r&&(y=BigInt(0)),{lockFee:r,tokenIn:e.mctpInputContract,amountIn:c,redeemFee:p,gasDrop:m,destAddr:u,destDomain:l,payloadType:a?Je:$e,customPayload:a?`0x${wn.Buffer.from(a).toString("hex")}`:"0x",bridgeFee:y,contractAddress:f}}function gn(e,t,n,a){let i=Da(e,t,n,a),{contractAddress:o,tokenIn:s,amountIn:r,destAddr:u,lockFee:p,redeemFee:m,gasDrop:c,destDomain:l,customPayload:f,payloadType:y,bridgeFee:b}=i,g=new V.Contract(o,vt.abi),h,w;return p?h=g.interface.encodeFunctionData("bridgeWithLockedFee",[s,r,c,m,l,u]):h=g.interface.encodeFunctionData("bridgeWithFee",[s,r,m,c,u,l,y,f]),w=(0,V.toBeHex)(b),{to:o,data:h,value:w,_params:i}}function Fa(e,t,n,a){let i=Y(Number(a)),o=P(e.fromChain),s=P(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${o} !== ${i}`);if(!e.mctpMayanContract)throw new Error("MCTP contract address is missing");let r=e.mctpMayanContract,u=I(t,s),p;n?p=I(n,s):p=I(xt.SystemProgram.programId.toString(),P("solana"));let m=T(e.redeemRelayerFee,x),c=T(e.gasDrop,Math.min(W(e.toChain),8)),l=BigInt(e.effectiveAmountIn64),f=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),y=BigInt(e.deadline64),b=e.toToken.contract===V.ZeroAddress?I(xt.SystemProgram.programId.toString(),P("solana")):I(e.toChain==="sui"?e.toToken.verifiedAddress:e.toToken.contract,e.toToken.wChainId);return{params:{tokenIn:e.mctpInputContract,amountIn:l,gasDrop:c,destAddr:u,destChain:s,tokenOut:b,minAmountOut:f,deadline:y,redeemFee:m,referrerAddr:p,referrerBps:e.referrerBps||0},bridgeFee:T(e.bridgeFee,W(e.fromChain)),contractAddress:r}}function Tn(e,t,n,a){let i=Fa(e,t,n,a),{contractAddress:o,params:s,bridgeFee:r}=i,p=new V.Contract(o,vt.abi).interface.encodeFunctionData("createOrder",[s]),m=(0,V.toBeHex)(r);return{to:o,data:p,value:m,_params:i}}function Bt(e,t,n,a,i,o){if(e.type!=="MCTP")throw new Error("Quote type is not MCTP");if(!Number.isFinite(Number(a)))throw new Error("Invalid signer chain id");a=Number(a);let s=i||z,r=new V.Contract(d.MAYAN_FORWARDER_CONTRACT,q.abi),u=T(e.bridgeFee,W(e.fromChain)),p=(0,V.toBeHex)(u);if(e.fromToken.contract===e.mctpInputContract)if(e.hasAuction){if(!Number(e.deadline64))throw new Error("MCTP order requires timeout");let m=Tn(e,t,n,a),c="forwardERC20",l=[e.fromToken.contract,m._params.params.amountIn,s,m._params.contractAddress,m.data];return{data:r.interface.encodeFunctionData(c,l),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,V.toBeHex)(p),chainId:a,_forwarder:{method:c,params:l}}}else{let m=gn(e,t,a,o),c="forwardERC20",l=[e.fromToken.contract,m._params.amountIn,s,m._params.contractAddress,m.data];return{data:r.interface.encodeFunctionData(c,l),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,V.toBeHex)(p),chainId:a,_forwarder:{method:c,params:l}}}else{let{minMiddleAmount:m,evmSwapRouterAddress:c,evmSwapRouterCalldata:l}=e;if(!m||!c||!l)throw new Error("MCTP swap requires middle amount, router address and calldata");if(e.hasAuction){if(!Number(e.deadline64))throw new Error("MCTP order requires timeout");let f=Tn(e,t,n,a),y=T(e.minMiddleAmount,x);if(e.fromToken.contract===V.ZeroAddress){let b=f._params.params.amountIn;if(b<=u)throw new Error("Amount in is less than bridge fee");u!==BigInt(0)&&(b-=u),p=(0,V.toBeHex)(f._params.params.amountIn);let g="swapAndForwardEth",h=[b,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,V.toBeHex)(p),chainId:a,_forwarder:{method:g,params:h}}}else{let b="swapAndForwardERC20",g=[e.fromToken.contract,f._params.params.amountIn,s,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(b,g),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,V.toBeHex)(p),chainId:a,_forwarder:{method:b,params:g}}}}else{let f=gn(e,t,a,o),y=T(e.minMiddleAmount,x);if(e.fromToken.contract===V.ZeroAddress){let b=f._params.amountIn;if(b<=u)throw new Error("Amount in is less than bridge fee");u!==BigInt(0)&&(b-=u),p=(0,V.toBeHex)(f._params.amountIn);let g="swapAndForwardEth",h=[b,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,V.toBeHex)(p),chainId:a,_forwarder:{method:g,params:h}}}else{let b="swapAndForwardERC20",g=[e.fromToken.contract,f._params.amountIn,s,c,l,e.mctpInputContract,y,f._params.contractAddress,f.data];return{data:r.interface.encodeFunctionData(b,g),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,V.toBeHex)(p),chainId:a,_forwarder:{method:b,params:g}}}}}}var oe=require("ethers"),nt=require("@solana/web3.js");var hn={_format:"hh-sol-artifact-1",contractName:"MayanSwift",sourceName:"src/MayanSwift.sol",abi:[{inputs:[{internalType:"address",name:"_wormhole",type:"address"},{internalType:"address",name:"_feeManager",type:"address"},{internalType:"uint16",name:"_auctionChainId",type:"uint16"},{internalType:"bytes32",name:"_auctionAddr",type:"bytes32"},{internalType:"bytes32",name:"_solanaEmitter",type:"bytes32"},{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"DeadlineViolation",type:"error"},{inputs:[],name:"DuplicateOrder",type:"error"},{inputs:[],name:"FeesTooHigh",type:"error"},{inputs:[],name:"InvalidAction",type:"error"},{inputs:[],name:"InvalidAmount",type:"error"},{inputs:[],name:"InvalidAuctionMode",type:"error"},{inputs:[],name:"InvalidBpsFee",type:"error"},{inputs:[],name:"InvalidContractSignature",type:"error"},{inputs:[],name:"InvalidDestChain",type:"error"},{inputs:[],name:"InvalidEmitterAddress",type:"error"},{inputs:[],name:"InvalidEmitterChain",type:"error"},{inputs:[],name:"InvalidEvmAddr",type:"error"},{inputs:[],name:"InvalidGasDrop",type:"error"},{inputs:[],name:"InvalidOrderHash",type:"error"},{inputs:[],name:"InvalidOrderStatus",type:"error"},{inputs:[],name:"InvalidSignature",type:"error"},{inputs:[],name:"InvalidSignatureLength",type:"error"},{inputs:[],name:"InvalidSigner",type:"error"},{inputs:[],name:"InvalidSrcChain",type:"error"},{inputs:[],name:"InvalidWormholeFee",type:"error"},{inputs:[],name:"OrderNotExists",type:"error"},{inputs:[],name:"Paused",type:"error"},{inputs:[],name:"SmallAmountIn",type:"error"},{inputs:[],name:"Unauthorized",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint64",name:"sequence",type:"uint64"}],name:"OrderCanceled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"OrderCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint64",name:"sequence",type:"uint64"},{indexed:!1,internalType:"uint256",name:"netAmount",type:"uint256"}],name:"OrderFulfilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"netAmount",type:"uint256"}],name:"OrderRefunded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"OrderUnlocked",type:"event"},{inputs:[],name:"auctionAddr",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"auctionChainId",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{internalType:"bytes32",name:"canceler",type:"bytes32"}],name:"cancelOrder",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"newGuardian",type:"address"}],name:"changeGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimGuardian",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"consistencyLevel",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"}],name:"createOrderWithEth",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"},{internalType:"bytes",name:"signedOrderHash",type:"bytes"}],name:"createOrderWithSig",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"}],name:"createOrderWithToken",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"feeManager",outputs:[{internalType:"contract IFeeManager",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"fulfillAmount",type:"uint256"},{internalType:"bytes",name:"encodedVm",type:"bytes"},{internalType:"bytes32",name:"recepient",type:"bytes32"},{internalType:"bool",name:"batch",type:"bool"}],name:"fulfillOrder",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"fulfillAmount",type:"uint256"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{components:[{internalType:"bytes32",name:"trader",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"minAmountOut",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"auctionMode",type:"uint8"},{internalType:"bytes32",name:"random",type:"bytes32"}],internalType:"struct MayanSwift.OrderParams",name:"params",type:"tuple"},{internalType:"bytes32",name:"recepient",type:"bytes32"},{internalType:"bool",name:"batch",type:"bool"}],name:"fulfillSimple",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextGuardian",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"orders",outputs:[{internalType:"enum MayanSwift.Status",name:"status",type:"uint8"},{internalType:"uint64",name:"amountIn",type:"uint64"},{internalType:"uint16",name:"destChainId",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseFulfillPayload",outputs:[{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"destChainId",type:"uint16"},{internalType:"bytes32",name:"destAddr",type:"bytes32"},{internalType:"bytes32",name:"driver",type:"bytes32"},{internalType:"bytes32",name:"tokenOut",type:"bytes32"},{internalType:"uint64",name:"promisedAmount",type:"uint64"},{internalType:"uint64",name:"gasDrop",type:"uint64"},{internalType:"uint64",name:"deadline",type:"uint64"},{internalType:"bytes32",name:"referrerAddr",type:"bytes32"},{internalType:"uint8",name:"referrerBps",type:"uint8"},{internalType:"uint8",name:"protocolBps",type:"uint8"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"}],internalType:"struct MayanSwift.FulfillMsg",name:"fulfillMsg",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseRefundPayload",outputs:[{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"bytes32",name:"canceler",type:"bytes32"},{internalType:"uint64",name:"cancelFee",type:"uint64"},{internalType:"uint64",name:"refundFee",type:"uint64"}],internalType:"struct MayanSwift.RefundMsg",name:"refundMsg",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"encoded",type:"bytes"}],name:"parseUnlockPayload",outputs:[{components:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"bytes32",name:"recipient",type:"bytes32"}],internalType:"struct MayanSwift.UnlockMsg",name:"unlockMsg",type:"tuple"}],stateMutability:"pure",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"orderHashes",type:"bytes32[]"}],name:"postBatch",outputs:[{internalType:"uint64",name:"sequence",type:"uint64"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"refundOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint8",name:"_consistencyLevel",type:"uint8"}],name:"setConsistencyLevel",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_feeManager",type:"address"}],name:"setFeeManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_pause",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"solanaEmitter",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"unlockBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"unlockMsgs",outputs:[{internalType:"uint8",name:"action",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint16",name:"srcChainId",type:"uint16"},{internalType:"bytes32",name:"tokenIn",type:"bytes32"},{internalType:"bytes32",name:"recipient",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"encodedVm",type:"bytes"}],name:"unlockSingle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"wormhole",outputs:[{internalType:"contract IWormhole",name:"",type:"address"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],linkReferences:{},deployedLinkReferences:{}};var C=require("@solana/web3.js");var ye=require("buffer"),ie=require("@solana/buffer-layout"),kn=require("js-sha256"),Rn=rt(require("bs58"));var Xe=require("buffer"),In=require("@solana/web3.js");function va(e,t){let n=t.subarray(0,8),a=e.instructions.find(r=>Xe.Buffer.from(r.discriminator).toString("hex").toLowerCase()===Xe.Buffer.from(n).toString("hex").toLowerCase());if(!a)throw new Error(`Instruction ${Xe.Buffer.from(n).toString("hex")} not in IDL`);let i=a.args||[],o={},s=8;for(let r of i){let[u,p]=We(r.type,t,s,e);o[r.name]=u,s=p}return o}function We(e,t,n,a){if(typeof e=="string")switch(e){case"u8":return[t.readUInt8(n),n+1];case"u16":return[t.readUInt16LE(n),n+2];case"u32":return[t.readUInt32LE(n),n+4];case"u64":return[t.readBigUInt64LE(n),n+8];case"bool":return[t.readUInt8(n)!==0,n+1];case"pubkey":{let i=t.subarray(n,n+32);return[new In.PublicKey(i),n+32]}default:throw new Error(`Unknown primitive: ${e}`)}if("array"in e){let[i,o]=e.array,s=[],r=n;for(let u=0;u<o;u++){let[p,m]=We(i,t,r,a);s.push(p),r=m}return[s,r]}if("defined"in e){let i=a.types?.find(o=>o.name===e.defined.name);if(!i)throw new Error(`Type ${e.defined} not found`);if(i.type.kind==="struct"){let o={},s=n;for(let r of i.type.fields){let[u,p]=We(r.type,t,s,a);o[r.name]=u,s=p}return[o,s]}else{let o=t.readUInt8(n),s=i.type.variants[o];if(!s)throw new Error(`Invalid enum index ${o}`);let r=n+1,u={variant:s.name};if(s.fields&&s.fields.length){let p=[];for(let m of s.fields){let[c,l]=We(m.type,t,r,a);p.push(c),r=l}u.fields=p}return[u,r]}}if("option"in e)return t.readUInt8(n)===0?[null,n+1]:We(e.option,t,n+1,a);if("vec"in e){let i=t.readUInt32LE(n),o=n+4,s=[];for(let r=0;r<i;r++){let[u,p]=We(e.vec,t,o,a);s.push(u),o=p}return[s,o]}throw new Error(`Unsupported type shape: ${JSON.stringify(e)}`)}function An(e){return va(xa,Xe.Buffer.from(e))}var xa={address:"JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",metadata:{name:"jupiter",version:"0.1.0",spec:"0.1.0",description:"Jupiter aggregator program"},instructions:[{name:"route",docs:["route_plan Topologically sorted trade DAG"],discriminator:[229,23,203,151,122,227,173,42],accounts:[{name:"token_program"},{name:"user_transfer_authority",signer:!0},{name:"user_source_token_account",writable:!0},{name:"user_destination_token_account",writable:!0},{name:"destination_token_account",writable:!0,optional:!0},{name:"destination_mint"},{name:"platform_fee_account",writable:!0,optional:!0},{name:"event_authority",address:"D8cy77BBepLMngZx6ZukaTff5hCt1HrWyKk3Hnd9oitf"},{name:"program"}],args:[{name:"route_plan",type:{vec:{defined:{name:"RoutePlanStep"}}}},{name:"in_amount",type:"u64"},{name:"quoted_out_amount",type:"u64"},{name:"slippage_bps",type:"u16"},{name:"platform_fee_bps",type:"u8"}],returns:"u64"},{name:"shared_accounts_route",docs:["Route by using program owned token accounts and open orders accounts."],discriminator:[193,32,155,51,65,214,156,129],accounts:[{name:"token_program"},{name:"program_authority"},{name:"user_transfer_authority",signer:!0},{name:"source_token_account",writable:!0},{name:"program_source_token_account",writable:!0},{name:"program_destination_token_account",writable:!0},{name:"destination_token_account",writable:!0},{name:"source_mint"},{name:"destination_mint"},{name:"platform_fee_account",writable:!0,optional:!0},{name:"token_2022_program",optional:!0},{name:"event_authority",address:"D8cy77BBepLMngZx6ZukaTff5hCt1HrWyKk3Hnd9oitf"},{name:"program"}],args:[{name:"id",type:"u8"},{name:"route_plan",type:{vec:{defined:{name:"RoutePlanStep"}}}},{name:"in_amount",type:"u64"},{name:"quoted_out_amount",type:"u64"},{name:"slippage_bps",type:"u16"},{name:"platform_fee_bps",type:"u8"}],returns:"u64"}],types:[{name:"AccountsType",type:{kind:"enum",variants:[{name:"TransferHookA"},{name:"TransferHookB"},{name:"TransferHookReward"},{name:"TransferHookInput"},{name:"TransferHookIntermediate"},{name:"TransferHookOutput"},{name:"SupplementalTickArrays"},{name:"SupplementalTickArraysOne"},{name:"SupplementalTickArraysTwo"}]}},{name:"FeeEvent",type:{kind:"struct",fields:[{name:"account",type:"pubkey"},{name:"mint",type:"pubkey"},{name:"amount",type:"u64"}]}},{name:"RemainingAccountsInfo",type:{kind:"struct",fields:[{name:"slices",type:{vec:{defined:{name:"RemainingAccountsSlice"}}}}]}},{name:"RemainingAccountsSlice",type:{kind:"struct",fields:[{name:"accounts_type",type:{defined:{name:"AccountsType"}}},{name:"length",type:"u8"}]}},{name:"RoutePlanStep",type:{kind:"struct",fields:[{name:"swap",type:{defined:{name:"Swap"}}},{name:"percent",type:"u8"},{name:"input_index",type:"u8"},{name:"output_index",type:"u8"}]}},{name:"Side",type:{kind:"enum",variants:[{name:"Bid"},{name:"Ask"}]}},{name:"Swap",type:{kind:"enum",variants:[{name:"Saber"},{name:"SaberAddDecimalsDeposit"},{name:"SaberAddDecimalsWithdraw"},{name:"TokenSwap"},{name:"Sencha"},{name:"Step"},{name:"Cropper"},{name:"Raydium"},{name:"Crema",fields:[{name:"a_to_b",type:"bool"}]},{name:"Lifinity"},{name:"Mercurial"},{name:"Cykura"},{name:"Serum",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"MarinadeDeposit"},{name:"MarinadeUnstake"},{name:"Aldrin",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"AldrinV2",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"Whirlpool",fields:[{name:"a_to_b",type:"bool"}]},{name:"Invariant",fields:[{name:"x_to_y",type:"bool"}]},{name:"Meteora"},{name:"GooseFX"},{name:"DeltaFi",fields:[{name:"stable",type:"bool"}]},{name:"Balansol"},{name:"MarcoPolo",fields:[{name:"x_to_y",type:"bool"}]},{name:"Dradex",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"LifinityV2"},{name:"RaydiumClmm"},{name:"Openbook",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"Phoenix",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"Symmetry",fields:[{name:"from_token_id",type:"u64"},{name:"to_token_id",type:"u64"}]},{name:"TokenSwapV2"},{name:"HeliumTreasuryManagementRedeemV0"},{name:"StakeDexStakeWrappedSol"},{name:"StakeDexSwapViaStake",fields:[{name:"bridge_stake_seed",type:"u32"}]},{name:"GooseFXV2"},{name:"Perps"},{name:"PerpsAddLiquidity"},{name:"PerpsRemoveLiquidity"},{name:"MeteoraDlmm"},{name:"OpenBookV2",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"RaydiumClmmV2"},{name:"StakeDexPrefundWithdrawStakeAndDepositStake",fields:[{name:"bridge_stake_seed",type:"u32"}]},{name:"Clone",fields:[{name:"pool_index",type:"u8"},{name:"quantity_is_input",type:"bool"},{name:"quantity_is_collateral",type:"bool"}]},{name:"SanctumS",fields:[{name:"src_lst_value_calc_accs",type:"u8"},{name:"dst_lst_value_calc_accs",type:"u8"},{name:"src_lst_index",type:"u32"},{name:"dst_lst_index",type:"u32"}]},{name:"SanctumSAddLiquidity",fields:[{name:"lst_value_calc_accs",type:"u8"},{name:"lst_index",type:"u32"}]},{name:"SanctumSRemoveLiquidity",fields:[{name:"lst_value_calc_accs",type:"u8"},{name:"lst_index",type:"u32"}]},{name:"RaydiumCP"},{name:"WhirlpoolSwapV2",fields:[{name:"a_to_b",type:"bool"},{name:"remaining_accounts_info",type:{option:{defined:{name:"RemainingAccountsInfo"}}}}]},{name:"OneIntro"},{name:"PumpdotfunWrappedBuy"},{name:"PumpdotfunWrappedSell"},{name:"PerpsV2"},{name:"PerpsV2AddLiquidity"},{name:"PerpsV2RemoveLiquidity"},{name:"MoonshotWrappedBuy"},{name:"MoonshotWrappedSell"},{name:"StabbleStableSwap"},{name:"StabbleWeightedSwap"},{name:"Obric",fields:[{name:"x_to_y",type:"bool"}]},{name:"FoxBuyFromEstimatedCost"},{name:"FoxClaimPartial",fields:[{name:"is_y",type:"bool"}]},{name:"SolFi",fields:[{name:"is_quote_to_base",type:"bool"}]},{name:"SolayerDelegateNoInit"},{name:"SolayerUndelegateNoInit"},{name:"TokenMill",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"DaosFunBuy"},{name:"DaosFunSell"},{name:"ZeroFi"},{name:"StakeDexWithdrawWrappedSol"},{name:"VirtualsBuy"},{name:"VirtualsSell"},{name:"Perena",fields:[{name:"in_index",type:"u8"},{name:"out_index",type:"u8"}]},{name:"PumpdotfunAmmBuy"},{name:"PumpdotfunAmmSell"},{name:"Gamma"},{name:"MeteoraDlmmSwapV2",fields:[{name:"remaining_accounts_info",type:{defined:{name:"RemainingAccountsInfo"}}}]},{name:"Woofi"},{name:"MeteoraDammV2"},{name:"MeteoraDynamicBondingCurveSwap"},{name:"StabbleStableSwapV2"},{name:"StabbleWeightedSwapV2"},{name:"RaydiumLaunchlabBuy",fields:[{name:"share_fee_rate",type:"u64"}]},{name:"RaydiumLaunchlabSell",fields:[{name:"share_fee_rate",type:"u64"}]},{name:"BoopdotfunWrappedBuy"},{name:"BoopdotfunWrappedSell"},{name:"Plasma",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"GoonFi",fields:[{name:"is_bid",type:"bool"},{name:"blacklist_bump",type:"u8"}]},{name:"HumidiFi",fields:[{name:"swap_id",type:"u64"},{name:"is_base_to_quote",type:"bool"}]},{name:"MeteoraDynamicBondingCurveSwapWithRemainingAccounts"},{name:"TesseraV",fields:[{name:"side",type:{defined:{name:"Side"}}}]},{name:"RaydiumStable"}]}},{name:"SwapEvent",type:{kind:"struct",fields:[{name:"amm",type:"pubkey"},{name:"input_mint",type:"pubkey"},{name:"input_amount",type:"u64"},{name:"output_mint",type:"pubkey"},{name:"output_amount",type:"u64"}]}},{name:"TokenLedger",type:{kind:"struct",fields:[{name:"token_account",type:"pubkey"},{name:"amount",type:"u64"}]}}]};var Ba={};function Na(e){return Ba[e]??=new C.Connection(e),new C.Connection(e)}async function et({trx:e,connection:t,errorChance:n,extraRpcs:a,options:i,rate:o=8}){let s=null,r=0,u=[t].concat(a.map(Na));for(let p=0;p<o;p++){if(s)try{let c=await Promise.any(u.map(l=>l.getSignatureStatus(s)));if(c&&c.value){if(c.value.err){if(r>=n)return{signature:s,serializedTrx:e};r++}else if(c.value.confirmationStatus==="confirmed")return{signature:s,serializedTrx:e}}}catch(c){console.error(c)}let m=u.map(c=>c.sendRawTransaction(e,i));if(!s)try{s=await Promise.any(m)}catch(c){console.error("Transaction not submitted, remaining attempts:",o-p-1,c)}await Ye(1e3)}if(!s)throw new Error("Failed to send transaction");return{signature:s,serializedTrx:e}}function $(e,t,n,a,i=new C.PublicKey(d.TOKEN_PROGRAM_ID),o=new C.PublicKey(d.ASSOCIATED_TOKEN_PROGRAM_ID)){let s=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!1,isWritable:!1},{pubkey:C.SystemProgram.programId,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:C.SYSVAR_RENT_PUBKEY,isSigner:!1,isWritable:!1}];return new C.TransactionInstruction({keys:s,programId:o,data:ye.Buffer.from([1])})}var Cn=165;async function ke(e,t,n,a,i,o=new C.PublicKey(d.TOKEN_PROGRAM_ID)){let s=[],r=await e.getMinimumBalanceForRentExemption(Cn);return s.push(C.SystemProgram.createAccount({fromPubkey:t,newAccountPubkey:i.publicKey,lamports:r,space:Cn,programId:o})),s.push(new C.TransactionInstruction({keys:[{pubkey:i.publicKey,isWritable:!0,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:a,isWritable:!1,isSigner:!1},{pubkey:C.SYSVAR_RENT_PUBKEY,isWritable:!1,isSigner:!1}],programId:o,data:ye.Buffer.from([1])})),s}var Sn=(0,ie.struct)([(0,ie.u8)("instruction"),(0,ie.blob)(8,"amount")]);function Nt(e,t,n,a,i=new C.PublicKey(d.TOKEN_PROGRAM_ID)){let o=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!0,isWritable:!1}],s=ye.Buffer.alloc(Sn.span);return Sn.encode({instruction:4,amount:B(a)},s),new C.TransactionInstruction({keys:o,programId:i,data:s})}var _n=(0,ie.struct)([(0,ie.u8)("instruction")]);function Ue(e){let t=[{pubkey:e,isSigner:!1,isWritable:!0}],n=ye.Buffer.alloc(_n.span);return _n.encode({instruction:17},n),new C.TransactionInstruction({keys:t,programId:new C.PublicKey(d.TOKEN_PROGRAM_ID),data:n})}var Pn=(0,ie.struct)([(0,ie.u8)("instruction")]);function En(e,t,n,a=new C.PublicKey(d.TOKEN_PROGRAM_ID)){let i=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1}],o=ye.Buffer.alloc(Pn.span);return Pn.encode({instruction:9},o),new C.TransactionInstruction({keys:i,programId:a,data:o})}var Mn=(0,ie.struct)([(0,ie.u8)("instruction"),(0,ie.blob)(8,"amount")]);function Ae(e,t,n,a,i=new C.PublicKey(d.TOKEN_PROGRAM_ID)){let o=[{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1}],s=ye.Buffer.alloc(Mn.span);return Mn.encode({instruction:3,amount:B(a)},s),new C.TransactionInstruction({keys:o,programId:i,data:s})}var ue=new C.PublicKey("So11111111111111111111111111111111111111112");async function Wa(e,t,n,a){let i=a??new C.Connection("https://rpc.ankr.com/solana"),o=v(ue,e,!1),{blockhash:s,lastValidBlockHeight:r}=await i.getLatestBlockhash(),u=new C.Transaction({feePayer:e,blockhash:s,lastValidBlockHeight:r}),p=await i.getAccountInfo(o,"finalized");(!p||p.data.length===0)&&u.add($(e,o,e,ue)),u.add(C.SystemProgram.transfer({fromPubkey:e,toPubkey:o,lamports:T(t,9)})),u.add(Ue(o));let m=await n(u);return await et({trx:m.serialize(),connection:i,errorChance:1,extraRpcs:[]})}async function Ua(e,t,n,a){let i=a??new C.Connection("https://rpc.ankr.com/solana"),o=v(ue,e,!1),s=C.Keypair.generate(),{blockhash:r,lastValidBlockHeight:u}=await i.getLatestBlockhash(),p=new C.Transaction({feePayer:e,blockhash:r,lastValidBlockHeight:u}),m=v(ue,s.publicKey,!1);p.add($(e,m,s.publicKey,ue)),p.add(Ae(o,m,e,T(t,9))),p.add(En(m,e,s.publicKey)),p.partialSign(s);let c=await n(p);return await et({trx:c.serialize(),connection:i,errorChance:1,extraRpcs:[]})}function qe(e){return new C.TransactionInstruction({programId:new C.PublicKey(e.programId),keys:e.accounts.map(t=>({pubkey:new C.PublicKey(t.pubkey),isSigner:t.isSigner,isWritable:t.isWritable})),data:ye.Buffer.from(e.data,"base64")})}async function De(e,t){return(await t.getMultipleAccountsInfo(e.map(a=>new C.PublicKey(a)))).reduce((a,i,o)=>{let s=e[o];if(i){let r=new C.AddressLookupTableAccount({key:new C.PublicKey(s),state:C.AddressLookupTableAccount.deserialize(i.data)});a.push(r)}return a},new Array)}function Ce(e,t){let n=qe(e.swapInstruction),a=e.cleanupInstruction?qe(e.cleanupInstruction):null,i=e.computeBudgetInstructions?e.computeBudgetInstructions.map(qe):[],o=e.setupInstructions?e.setupInstructions.map(qe):[];return{swapInstruction:n,cleanupInstruction:a,computeBudgetInstructions:i,setupInstructions:o,addressLookupTableAddresses:e.addressLookupTableAddresses}}function ee(e){let t=`global:${e}`;return ye.Buffer.from(kn.sha256.digest(t)).subarray(0,8)}async function Wt(){let e;try{let t=await Ot();e=new C.PublicKey(t)}catch{console.log("Relayer not found, using system program"),e=C.SystemProgram.programId}return e}function Ut(e,t,n,a){let i=a.jitoAccount||"Cw8CFyM9FkoMi7K7Crf6HNQqf4uEMzpKw6QNghXLvLkY";return new C.Transaction({feePayer:new C.PublicKey(e),blockhash:t,lastValidBlockHeight:n}).add(C.SystemProgram.transfer({fromPubkey:new C.PublicKey(e),toPubkey:new C.PublicKey(i),lamports:a.tipLamports}))}var On=["https://mainnet.block-engine.jito.wtf/api/v1/bundles","https://amsterdam.mainnet.block-engine.jito.wtf/api/v1/bundles","https://frankfurt.mainnet.block-engine.jito.wtf/api/v1/bundles","https://london.mainnet.block-engine.jito.wtf/api/v1/bundles","https://ny.mainnet.block-engine.jito.wtf/api/v1/bundles","https://tokyo.mainnet.block-engine.jito.wtf/api/v1/bundles","https://slc.mainnet.block-engine.jito.wtf/api/v1/bundles"];async function La(e,t){let n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:t});if(n.status!==200&&n.status!==201)throw console.error("Post Jito bundle failed",e,n.status,n.statusText),new Error("Send Jito bundle failed: "+n.status+" "+n.statusText);{let a=await n.json();return console.log("Post Jito bundle result",e,a.result),a.result}}async function ot(e,t,n=!1){try{let a=[];for(let u of e)a.push(u.serialize());let i={jsonrpc:"2.0",id:1,method:"sendBundle",params:[a.map(u=>Rn.default.encode(u))]},o=t.jitoSendUrl?[t.jitoSendUrl]:On,s=JSON.stringify(i);return await Promise.any(o.map(u=>La(u,s)))}catch(a){if(console.error("Send Jito bundle failed",a),n)throw new Error("Send Jito bundle failed")}}async function Ka(e,t){let a=0;for(;a<5;)try{let i=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:1,method:"getBundleStatuses",params:[e]})});if(!i.ok)throw new Error(`HTTP error! Status: ${i.status}`);let o=await i.json();if(o.error)throw new Error(`Error getting bundle statuses: ${JSON.stringify(o.error,null,2)}`);return o.result}catch(i){if(a++,await Ye(1e3),a>=5)throw new Error(`Failed to fetch bundle statuses after 5 attempts: ${i.message}`)}}async function Lt(e,t,n,a,i){let s=Date.now();for(;Date.now()-s<9e4&&await i.getBlockHeight()<=n;){await Ye(1050);let r=t.jitoSendUrl?[t.jitoSendUrl]:On,u=await Promise.any(r.map(p=>Ka([e],p)));if(u&&u.value&&u.value.length>0&&u.value[0]){console.log("===>",u.value[0]);let p=u.value[0].confirmation_status;if(p==="confirmed"||p==="finalized"){let m=await i.getSignatureStatus(a);if(!m||!m.value)continue;if(m.value?.err)throw new Error(`Bundle failed with error: ${m.value.err}`);return}}}throw new Error("Bundle not confirmed, timeout")}async function Kt(e){try{await fetch("https://explorer-api.mayan.finance/v3/submit/jito-bundle",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({bundleId:e})})}catch{}}function Ga(e,t){if(e){if(!e.programId.equals(new C.PublicKey(d.TOKEN_PROGRAM_ID))&&!e.programId.equals(new C.PublicKey(d.TOKEN_2022_PROGRAM_ID)))throw new Error("Invalid cleanup instruction:: programId");if(Uint8Array.from(e.data).length!==1)throw new Error("Invalid cleanup instruction:: data");if(Uint8Array.from(e.data)[0]!==9)throw new Error("Invalid cleanup instruction:: data");if(t&&!e.keys[1].pubkey.equals(t))throw new Error("Invalid cleanup instruction:: dest account")}}function Ha(e,t){if(!(e.length<1)){if(e.length>6)throw new Error("Invalid setup instruction:: too many instructions");e.forEach(n=>{if(!n.programId.equals(new C.PublicKey(d.ASSOCIATED_TOKEN_PROGRAM_ID))&&!n.programId.equals(C.SystemProgram.programId)&&!n.programId.equals(new C.PublicKey(d.TOKEN_PROGRAM_ID))&&!n.programId.equals(new C.PublicKey(d.TOKEN_2022_PROGRAM_ID)))throw new Error("Invalid setup instruction:: programId");if(n.programId.equals(new C.PublicKey(d.ASSOCIATED_TOKEN_PROGRAM_ID))){if(Uint8Array.from(n.data).length===1){if(Uint8Array.from(n.data)[0]!==1)throw new Error("Invalid setup instruction:: data")}else if(Uint8Array.from(n.data).length!==0)throw new Error("Invalid setup instruction:: data")}else if(n.programId.equals(C.SystemProgram.programId)){if(!t)throw new Error("Invalid setup instruction:: unknown transfer");let a=v(ue,t,!0);if(n.data.readUint32LE()!==2)throw new Error("Invalid setup instruction:: invalid system program instruction");if(!n.keys[1].pubkey.equals(a))throw new Error("Invalid setup instruction:: invalid wrap transfer dest")}else if(n.data.toString("base64")!=="EQ==")throw new Error("Invalid setup instruction:: invalid token program instruction")})}}function Va(e,t,n=!1){let a=new C.PublicKey("JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4");if(!e.programId.equals(a))throw new Error("Invalid swap instruction:: programId");if(e.data.subarray(0,8).toString("hex")===ee("shared_accounts_route").toString("hex")){if(!e.keys[6].pubkey.equals(t))throw new Error("Invalid swap instruction shared_accounts_route:: dest account")}else if(e.data.subarray(0,8).toString("hex")===ee("route").toString("hex")){if(n){if(!e.keys[4].pubkey.equals(a)&&!e.keys[3].pubkey.equals(t))throw new Error("Invalid swap instruction route:: dest account")}else if(!e.keys[4].pubkey.equals(t))throw new Error("Invalid swap instruction route:: dest account")}else throw new Error("Invalid swap instruction:: ix id")}function Gt(e,t){let n=An(Uint8Array.from(e.data));if(n.in_amount>BigInt(t.effectiveAmountIn64))throw new Error("Invalid swap instruction:: amount in");let a=T(t.minAmountOut,t.toToken.decimals);if(n.quoted_out_amount-n.quoted_out_amount*BigInt(n.slippage_bps)/10000n<a)throw new Error("Invalid swap instruction:: quote expired");if(n.platform_fee_bps!==t.referrerBps)throw new Error("Invalid swap instruction:: platform fee")}function Qa(e){e.forEach(t=>{if(!t.programId.equals(C.ComputeBudgetProgram.programId))throw new Error("Invalid compute budget instruction:: programId");if(Uint8Array.from(t.data)[0]===3&&t.data.readBigUInt64LE(1)>100000000n)throw new Error("Invalid compute budget instruction:: to high tx fee")})}function fe(e,t,n,a,i=!1){Qa(e.computeBudgetInstructions),Ha(e.setupInstructions,n),Va(e.swapInstruction,t,i),Ga(e.cleanupInstruction,a)}function Fe(e,t,n,a,i,o=new C.PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA")){return new C.TransactionInstruction({keys:[{pubkey:e,isSigner:!0,isWritable:!1},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!1,isWritable:!1}],programId:new C.PublicKey("B96dV3Luxzo6SokJx3xt8i5y8Mb7HRR6Eec8hCjJDT69"),data:ee("transfer_all_and_close")})}function pt(e,t,n,a){let i=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:C.SystemProgram.programId,isSigner:!1,isWritable:!1}],o=8+2+4+n.length,s=ye.Buffer.alloc(o);return s.set(ee("create_simple"),0),s.writeUint16LE(a,8),s.writeUint32LE(n.length,10),s.set(n,14),new C.TransactionInstruction({keys:i,programId:new C.PublicKey(d.PAYLOAD_WRITER_PROGRAM_ID),data:s})}function ut(e,t,n){let a=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0}],i=8+2,o=ye.Buffer.alloc(i);return o.set(ee("close"),0),o.writeUint16LE(n,8),new C.TransactionInstruction({keys:a,programId:new C.PublicKey(d.PAYLOAD_WRITER_PROGRAM_ID),data:o})}var R=require("@solana/web3.js"),Q=require("@solana/buffer-layout");var _e=require("buffer");var dt=require("ethers");var A=require("@solana/web3.js"),D=require("@solana/buffer-layout");var te=require("buffer");var ve=require("@solana/web3.js");var tt=require("buffer");function Dn(e){let t=new ve.PublicKey(d.WORMHOLE_PROGRAM_ID),n=new ve.PublicKey(e),[a]=ve.PublicKey.findProgramAddressSync([tt.Buffer.from("Bridge")],t),[i]=ve.PublicKey.findProgramAddressSync([tt.Buffer.from("emitter")],n),[o]=ve.PublicKey.findProgramAddressSync([tt.Buffer.from("Sequence"),i.toBuffer()],t),[s]=ve.PublicKey.findProgramAddressSync([tt.Buffer.from("fee_collector")],t);return{bridgeConfig:a,sequenceKey:o,feeCollector:s,emitter:i}}var Fn=(0,D.struct)([(0,D.blob)(8,"instruction")]);function Le(e,t,n,a,i){let o=new A.PublicKey(d.WORMHOLE_PROGRAM_ID),s=new A.PublicKey(d.TOKEN_PROGRAM_ID),r=new A.PublicKey(d.CCTP_CORE_PROGRAM_ID),u=new A.PublicKey(d.CCTP_TOKEN_PROGRAM_ID),p=new A.PublicKey(d.MCTP_PROGRAM_ID),m=new A.PublicKey(a),c=new A.PublicKey(n),l=v(c,e,!0),f;i&&i>BigInt(0)?f=v(c,m,!1):f=new A.PublicKey(d.MCTP_PROGRAM_ID);let y=it(c,t),b=Dn(d.MCTP_PROGRAM_ID),g=A.Keypair.generate(),h=A.Keypair.generate(),w=[{pubkey:e,isWritable:!0,isSigner:!1},{pubkey:l,isWritable:!0,isSigner:!1},{pubkey:m,isWritable:!0,isSigner:!0},{pubkey:f,isWritable:!0,isSigner:!1},{pubkey:c,isWritable:!0,isSigner:!1},{pubkey:y.senderAuthority,isWritable:!1,isSigner:!1},{pubkey:y.tokenMessenger,isWritable:!1,isSigner:!1},{pubkey:y.remoteTokenMessengerKey,isWritable:!1,isSigner:!1},{pubkey:y.tokenMinter,isWritable:!1,isSigner:!1},{pubkey:y.localToken,isWritable:!0,isSigner:!1},{pubkey:y.eventAuthToken,isWritable:!1,isSigner:!1},{pubkey:y.messageTransmitter,isWritable:!0,isSigner:!1},{pubkey:g.publicKey,isWritable:!0,isSigner:!0},{pubkey:u,isWritable:!1,isSigner:!1},{pubkey:r,isWritable:!1,isSigner:!1},{pubkey:b.emitter,isWritable:!1,isSigner:!1},{pubkey:b.bridgeConfig,isWritable:!0,isSigner:!1},{pubkey:b.sequenceKey,isWritable:!0,isSigner:!1},{pubkey:b.feeCollector,isWritable:!0,isSigner:!1},{pubkey:h.publicKey,isWritable:!0,isSigner:!0},{pubkey:o,isWritable:!1,isSigner:!1},{pubkey:A.SYSVAR_CLOCK_PUBKEY,isWritable:!1,isSigner:!1},{pubkey:A.SYSVAR_RENT_PUBKEY,isWritable:!1,isSigner:!1},{pubkey:s,isWritable:!1,isSigner:!1},{pubkey:A.SystemProgram.programId,isWritable:!1,isSigner:!1}],_=te.Buffer.alloc(Fn.span);return Fn.encode({instruction:ee("bridge_with_fee")},_),{instruction:new A.TransactionInstruction({keys:w,data:_,programId:p}),signers:[g,h]}}var vn=(0,D.struct)([(0,D.blob)(8,"instruction")]);function xn(e,t,n,a,i){let o=[],s=new A.PublicKey(d.TOKEN_PROGRAM_ID),r=new A.PublicKey(d.ASSOCIATED_TOKEN_PROGRAM_ID),u=new A.PublicKey(d.CCTP_CORE_PROGRAM_ID),p=new A.PublicKey(d.CCTP_TOKEN_PROGRAM_ID),m=new A.PublicKey(d.MCTP_PROGRAM_ID),c=new A.PublicKey(a),l=new A.PublicKey(n),f=v(l,e,!0),y=it(l,t),b=A.Keypair.generate(),[g]=A.PublicKey.findProgramAddressSync([te.Buffer.from("LOCKED_FEE"),l.toBuffer(),b.publicKey.toBytes()],m),h;i&&i>BigInt(0)?h=v(l,c,!1):h=new A.PublicKey(d.MCTP_PROGRAM_ID);let w=v(l,g,!0);o.push($(c,w,g,l));let _=[{pubkey:e,isWritable:!0,isSigner:!1},{pubkey:f,isWritable:!0,isSigner:!1},{pubkey:c,isWritable:!0,isSigner:!0},{pubkey:h,isWritable:!0,isSigner:!1},{pubkey:g,isWritable:!0,isSigner:!1},{pubkey:w,isWritable:!0,isSigner:!1},{pubkey:l,isWritable:!0,isSigner:!1},{pubkey:y.senderAuthority,isWritable:!1,isSigner:!1},{pubkey:y.tokenMessenger,isWritable:!1,isSigner:!1},{pubkey:y.remoteTokenMessengerKey,isWritable:!1,isSigner:!1},{pubkey:y.tokenMinter,isWritable:!1,isSigner:!1},{pubkey:y.localToken,isWritable:!0,isSigner:!1},{pubkey:y.eventAuthToken,isWritable:!1,isSigner:!1},{pubkey:y.messageTransmitter,isWritable:!0,isSigner:!1},{pubkey:b.publicKey,isWritable:!0,isSigner:!0},{pubkey:p,isWritable:!1,isSigner:!1},{pubkey:u,isWritable:!1,isSigner:!1},{pubkey:s,isWritable:!1,isSigner:!1},{pubkey:r,isWritable:!1,isSigner:!1},{pubkey:A.SystemProgram.programId,isWritable:!1,isSigner:!1}],O=te.Buffer.alloc(vn.span);vn.encode({instruction:ee("bridge_locked_fee")},O);let k=new A.TransactionInstruction({keys:_,data:O,programId:m});return o.push(k),{instructions:o,signer:b}}var Bn=(0,D.struct)([(0,D.blob)(8,"instruction")]);function Nn(e,t,n,a,i){let o=new A.PublicKey(d.TOKEN_PROGRAM_ID),s=new A.PublicKey(d.CCTP_CORE_PROGRAM_ID),r=new A.PublicKey(d.CCTP_TOKEN_PROGRAM_ID),u=new A.PublicKey(d.MCTP_PROGRAM_ID),p=new A.PublicKey(a),m=new A.PublicKey(n),c=v(m,e,!0),l=it(m,t),f=A.Keypair.generate(),[y]=A.PublicKey.findProgramAddressSync([te.Buffer.from("ORDER_SOLANA_SOURCE"),e.toBuffer()],u),b;i&&i>BigInt(0)?b=v(m,p,!1):b=new A.PublicKey(d.MCTP_PROGRAM_ID);let g=[{pubkey:e,isWritable:!1,isSigner:!1},{pubkey:c,isWritable:!0,isSigner:!1},{pubkey:p,isWritable:!0,isSigner:!0},{pubkey:b,isWritable:!0,isSigner:!1},{pubkey:m,isWritable:!0,isSigner:!1},{pubkey:y,isWritable:!0,isSigner:!1},{pubkey:l.senderAuthority,isWritable:!1,isSigner:!1},{pubkey:l.tokenMessenger,isWritable:!1,isSigner:!1},{pubkey:l.remoteTokenMessengerKey,isWritable:!1,isSigner:!1},{pubkey:l.tokenMinter,isWritable:!1,isSigner:!1},{pubkey:l.localToken,isWritable:!0,isSigner:!1},{pubkey:l.eventAuthToken,isWritable:!1,isSigner:!1},{pubkey:l.messageTransmitter,isWritable:!0,isSigner:!1},{pubkey:f.publicKey,isWritable:!0,isSigner:!0},{pubkey:r,isWritable:!1,isSigner:!1},{pubkey:s,isWritable:!1,isSigner:!1},{pubkey:new A.PublicKey(d.FEE_MANAGER_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:o,isWritable:!1,isSigner:!1},{pubkey:A.SystemProgram.programId,isWritable:!1,isSigner:!1}],h=te.Buffer.alloc(Bn.span);return Bn.encode({instruction:ee("create_order")},h),{instruction:new A.TransactionInstruction({keys:g,data:h,programId:u}),signer:f}}var Wn=(0,D.struct)([(0,D.blob)(8,"instruction"),(0,D.blob)(32,"destAddress"),(0,D.blob)(8,"amountInMin"),(0,D.blob)(8,"gasDrop"),(0,D.blob)(8,"feeRedeem"),(0,D.blob)(8,"feeSolana"),(0,D.u16)("destinationChain"),(0,D.blob)(32,"keyRnd"),(0,D.u8)("mode")]);function Ke(e){if(e.mode!=="WITH_FEE"&&e.mode!=="LOCK_FEE")throw new Error("Invalid mode: "+e.mode);let t=new A.PublicKey(e.swapperAddress),n=new A.PublicKey(e.mintAddress),a=v(n,e.ledger,!0),i=P(e.toChain),o=te.Buffer.from(L(I(e.destinationAddress,i))),s=B(e.amountInMin64),r=B(T(e.gasDrop,Math.min(W(e.toChain),8))),u=B(T(e.feeRedeem,x)),p=B(e.feeSolana),m=e.referrerAddress?te.Buffer.from(L(I(e.referrerAddress,i))):A.SystemProgram.programId.toBuffer(),c=[{pubkey:t,isWritable:!0,isSigner:!0},{pubkey:e.ledger,isWritable:!0,isSigner:!1},{pubkey:a,isWritable:!1,isSigner:!1},{pubkey:e.customPayload||new A.PublicKey(d.MCTP_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:A.SystemProgram.programId,isWritable:!1,isSigner:!1},{pubkey:new A.PublicKey(m),isWritable:!1,isSigner:!1}],l=te.Buffer.alloc(Wn.span);return Wn.encode({instruction:ee("init_bridge_ledger"),destAddress:o,amountInMin:s,gasDrop:r,feeRedeem:u,feeSolana:p,destinationChain:i,keyRnd:e.randomKey.toBuffer(),mode:e.mode==="WITH_FEE"?1:2},l),new A.TransactionInstruction({keys:c,data:l,programId:new A.PublicKey(d.MCTP_PROGRAM_ID)})}var Un=(0,D.struct)([(0,D.blob)(8,"instruction"),(0,D.blob)(32,"destAddress"),(0,D.blob)(8,"amountInMin"),(0,D.blob)(8,"gasDrop"),(0,D.blob)(8,"feeRedeem"),(0,D.blob)(8,"feeSolana"),(0,D.u16)("destinationChain"),(0,D.blob)(32,"keyRnd"),(0,D.u8)("mode"),(0,D.blob)(32,"tokenOut"),(0,D.blob)(8,"amountOutMin"),(0,D.blob)(8,"deadline"),(0,D.blob)(32,"refAddress"),(0,D.u8)("feeRateRef")]);function Ln(e){let t=new A.PublicKey(e.swapperAddress),n=new A.PublicKey(e.mintAddress),a=v(n,e.ledger,!0),i=P(e.toChain),o=te.Buffer.from(L(I(e.destinationAddress,i))),s=B(e.amountInMin64),r=B(T(e.gasDrop,Math.min(W(e.toChain),8))),u=B(T(e.feeRedeem,x)),p=B(e.feeSolana),m=te.Buffer.from(L(I(e.tokenOut,i))),c=e.referrerAddress?te.Buffer.from(L(I(e.referrerAddress,i))):A.SystemProgram.programId.toBuffer(),l=B(T(e.amountOutMin,Math.min(8,e.tokenOutDecimals))),f=B(e.deadline),y=[{pubkey:t,isWritable:!0,isSigner:!0},{pubkey:e.ledger,isWritable:!0,isSigner:!1},{pubkey:a,isWritable:!1,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:A.SystemProgram.programId,isWritable:!1,isSigner:!1}],b=te.Buffer.alloc(Un.span);return Un.encode({instruction:ee("init_order_ledger"),destAddress:o,amountInMin:s,gasDrop:r,feeRedeem:u,feeSolana:p,destinationChain:i,keyRnd:e.randomKey.toBuffer(),mode:3,tokenOut:m,refAddress:c,amountOutMin:l,deadline:f,feeRateRef:e.feeRateRef},b),new A.TransactionInstruction({keys:y,data:b,programId:new A.PublicKey(d.MCTP_PROGRAM_ID)})}async function Ht(e,t,n,a,i,o={}){let s=o?.forceSkipCctpInstructions||!1,r=o?.allowSwapperOffCurve||!1;if(e.toChain==="solana")throw new Error("Unsupported destination chain: "+e.toChain);let u=[],p=[],m=[],c=[],l=[],f=[],y=[],b=A.Keypair.generate(),g=null;u.push(d.LOOKUP_TABLE);let h=new A.PublicKey(d.MCTP_PROGRAM_ID),w=new A.PublicKey(t),_=A.Keypair.generate(),O=e.deadline64?BigInt(e.deadline64):BigInt(0);if(e.hasAuction&&!Number(e.deadline64))throw new Error("Swap mode requires a timeout");let k=e.hasAuction?"LEDGER_ORDER":"LEDGER_BRIDGE",[M]=A.PublicKey.findProgramAddressSync([te.Buffer.from(k),w.toBytes(),_.publicKey.toBytes()],h),E=v(new A.PublicKey(e.mctpInputContract),M,!0),N=e.cheaperChain==="solana"?"LOCK_FEE":"WITH_FEE",G=e.toChain==="sui"?e.toToken.verifiedAddress:e.toToken.contract;if(e.fromToken.contract===e.mctpInputContract){let S=BigInt(s?e.solanaRelayerFee64:0);if(e.suggestedPriorityFee>0&&p.push(A.ComputeBudgetProgram.setComputeUnitPrice({microLamports:e.suggestedPriorityFee})),p.push($(w,E,M,new A.PublicKey(e.mctpInputContract))),p.push(Ae(v(new A.PublicKey(e.mctpInputContract),w,r),E,w,BigInt(e.effectiveAmountIn64))),e.hasAuction){if(p.push(Ln({ledger:M,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:_.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:S,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:BigInt(e.effectiveAmountIn64),tokenOut:G,tokenOutDecimals:e.toToken.decimals,referrerAddress:a,amountOutMin:e.minAmountOut,deadline:O,feeRateRef:e.referrerBps})),!s){let{instruction:F,signer:j}=Nn(M,e.toChain,e.mctpInputContract,t,S);p.push(F),m.push(j)}}else if(p.push(Ke({ledger:M,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:_.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:S,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:BigInt(e.effectiveAmountIn64),mode:N,referrerAddress:a})),!s)if(N==="WITH_FEE"){let{instruction:F,signers:j}=Le(M,e.toChain,e.mctpInputContract,t,S);p.push(F),m.push(...j)}else{let{instructions:F,signer:j}=xn(M,e.toChain,e.mctpInputContract,t,S);p.push(...F),m.push(j)}}else{let S=await Ie({minMiddleAmount:e.minMiddleAmount,middleToken:e.mctpInputContract,userWallet:t,userLedger:M.toString(),slippageBps:e.slippageBps,fromToken:e.fromToken.contract,amountIn64:e.effectiveAmountIn64,depositMode:e.hasAuction?"SWAP":N,fillMaxAccounts:o?.separateSwapTx||!1,tpmTokenAccount:o?.separateSwapTx?b.publicKey.toString():null}),F=Ce(S,i);o?.separateSwapTx&&S.maxAccountsFilled?(fe(F,b.publicKey,w),y=await ke(i,w,new A.PublicKey(e.mctpInputContract),w,b),f.push(...F.computeBudgetInstructions),F.setupInstructions&&f.push(...F.setupInstructions),f.push(F.swapInstruction),F.cleanupInstruction&&f.push(F.cleanupInstruction),l.push(...F.addressLookupTableAddresses),p.push($(w,E,M,new A.PublicKey(e.mctpInputContract))),p.push(Fe(w,new A.PublicKey(e.mctpInputContract),b.publicKey,E,w))):(fe(F,E,w),p.push(...F.computeBudgetInstructions),F.setupInstructions&&p.push(...F.setupInstructions),p.push(F.swapInstruction),F.cleanupInstruction&&p.push(F.cleanupInstruction),u.push(...F.addressLookupTableAddresses));let j=f.length>0?BigInt(0):BigInt(e.solanaRelayerFee64);if(e.hasAuction){if(p.push(Ln({ledger:M,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:_.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:j,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:T(e.minMiddleAmount,x),tokenOut:G,tokenOutDecimals:e.toToken.decimals,referrerAddress:a,amountOutMin:e.minAmountOut,deadline:O,feeRateRef:e.referrerBps})),f.length>0){let{instruction:pe,signer:Z}=Nn(M,e.toChain,e.mctpInputContract,t,j);p.push(pe),m.push(Z)}}else if(p.push(Ke({ledger:M,swapperAddress:t,mintAddress:e.mctpInputContract,randomKey:_.publicKey,toChain:e.toChain,destinationAddress:n,feeSolana:j,feeRedeem:e.redeemRelayerFee,gasDrop:e.gasDrop,amountInMin64:T(e.minMiddleAmount,x),mode:N,referrerAddress:a})),f.length>0)if(N==="WITH_FEE"){let{instruction:pe,signers:Z}=Le(M,e.toChain,e.mctpInputContract,t,j);p.push(pe),m.push(...Z)}else{let{instructions:pe,signer:Z}=xn(M,e.toChain,e.mctpInputContract,t,j);p.push(...pe),m.push(Z)}}let U=await De(u.concat(l),i);if(c=U.slice(0,u.length),f.length>0){let S=U.slice(u.length);g={messageV0:{payerKey:w,instructions:f,addressLookupTableAccounts:S},createTmpTokenAccountIxs:y,tmpTokenAccount:b}}return{instructions:p,signers:m,lookupTables:c,swapMessageV0Params:g}}var K=require("@solana/web3.js"),H=require("@solana/buffer-layout");var ne=require("buffer");var Se=require("ethers");function ct(e,t,n,a,i){let s=ne.Buffer.alloc(239),r=0,u=P(e.fromChain),p=ne.Buffer.from(L(I(t,u)));s.set(p,0),r+=32,s.writeUInt16BE(u,r),r+=2;let m=e.swiftInputContract===Se.ZeroAddress?I(K.SystemProgram.programId.toString(),P("solana")):I(e.swiftInputContract,u),c=ne.Buffer.from(L(m));s.set(c,r),r+=32;let l=P(e.toChain),f=ne.Buffer.from(L(I(n,l)));s.set(f,r),r+=32,s.writeUInt16BE(l,r),r+=2;let y=e.toToken.contract===Se.ZeroAddress?I(K.SystemProgram.programId.toString(),P("solana")):I(e.toToken.contract,l),b=ne.Buffer.from(L(y));s.set(b,r),r+=32,s.writeBigUInt64BE(T(e.minAmountOut,Math.min(e.toToken.decimals,8)),r),r+=8,s.writeBigUInt64BE(T(e.gasDrop,Math.min(W(e.toChain),8)),r),r+=8,s.writeBigUInt64BE(BigInt(e.cancelRelayerFee64),r),r+=8,s.writeBigUInt64BE(BigInt(e.refundRelayerFee64),r),r+=8,s.writeBigUInt64BE(BigInt(e.deadline64),r),r+=8;let g=a?ne.Buffer.from(L(I(a,l))):K.SystemProgram.programId.toBuffer();s.set(g,r),r+=32,s.writeUInt8(e.referrerBps,r),r+=1;let h=e.protocolBps;s.writeUInt8(h,r),r+=1,s.writeUInt8(e.swiftAuctionMode,r),r+=1;let w=ne.Buffer.from(L(i));if(s.set(w,r),r+=32,r!==239)throw new Error(`Invalid order data size: ${r}`);let _=Se.ethers.keccak256(s);return ne.Buffer.from(L(_))}var Kn=(0,H.struct)([(0,H.blob)(8,"instruction"),(0,H.blob)(8,"amountInMin"),(0,H.u8)("nativeInput"),(0,H.blob)(8,"feeSubmit"),(0,H.blob)(32,"destAddress"),(0,H.u16)("destinationChain"),(0,H.blob)(32,"tokenOut"),(0,H.blob)(8,"amountOutMin"),(0,H.blob)(8,"gasDrop"),(0,H.blob)(8,"feeCancel"),(0,H.blob)(8,"feeRefund"),(0,H.blob)(8,"deadline"),(0,H.blob)(32,"refAddress"),(0,H.u8)("feeRateRef"),(0,H.u8)("feeRateMayan"),(0,H.u8)("auctionMode"),(0,H.blob)(32,"randomKey")]);function ja(e){let{quote:t}=e,n=t.swiftInputContract===Se.ZeroAddress?ue:new K.PublicKey(t.swiftInputContract),a=P(t.toChain);if(a!==t.toToken.wChainId)throw new Error(`Destination chain ID mismatch: ${a} != ${t.toToken.wChainId}`);let i=[{pubkey:e.trader,isWritable:!1,isSigner:!0},{pubkey:e.relayer,isWritable:!0,isSigner:!0},{pubkey:e.state,isWritable:!0,isSigner:!1},{pubkey:e.stateAccount,isWritable:!0,isSigner:!1},{pubkey:e.relayerAccount,isWritable:!0,isSigner:!1},{pubkey:n,isWritable:!1,isSigner:!1},{pubkey:new K.PublicKey(d.FEE_MANAGER_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:new K.PublicKey(d.TOKEN_PROGRAM_ID),isWritable:!1,isSigner:!1},{pubkey:K.SystemProgram.programId,isWritable:!1,isSigner:!1}],o=ne.Buffer.alloc(Kn.span),s=e.referrerAddress?ne.Buffer.from(L(I(e.referrerAddress,a))):K.SystemProgram.programId.toBuffer(),r=t.fromToken.contract===t.swiftInputContract?BigInt(t.effectiveAmountIn64):T(t.minMiddleAmount,t.swiftInputDecimals);return Kn.encode({instruction:ee("init_order"),amountInMin:B(r),nativeInput:t.swiftInputContract===Se.ZeroAddress?1:0,feeSubmit:B(BigInt(t.submitRelayerFee64)),destAddress:ne.Buffer.from(L(I(e.destinationAddress,a))),destinationChain:a,tokenOut:ne.Buffer.from(L(I(t.toToken.contract,a))),amountOutMin:B(T(t.minAmountOut,Math.min(t.toToken.decimals,8))),gasDrop:B(T(t.gasDrop,Math.min(W(t.toChain),8))),feeCancel:B(BigInt(t.cancelRelayerFee64)),feeRefund:B(BigInt(t.refundRelayerFee64)),deadline:B(e.deadline),refAddress:s,feeRateRef:t.referrerBps,feeRateMayan:t.protocolBps,auctionMode:t.swiftAuctionMode,randomKey:e.randomKey.toBuffer()},o),new K.TransactionInstruction({keys:i,data:o,programId:new K.PublicKey(d.SWIFT_PROGRAM_ID)})}async function Vt(e,t,n,a,i,o={}){if(e.type!=="SWIFT")throw new Error("Unsupported quote type for Swift: "+e.type);if(e.toChain==="solana")throw new Error("Unsupported destination chain: "+e.toChain);let s=o.allowSwapperOffCurve||!1,r=[],u=[],p=[];p.push(d.LOOKUP_TABLE);let m=[],c=[],l=[],f=K.Keypair.generate(),y=null,b=new K.PublicKey(d.SWIFT_PROGRAM_ID),g=new K.PublicKey(t),h=K.Keypair.generate();if(!Number(e.deadline64))throw new Error("Swift mode requires a timeout");let w=BigInt(e.deadline64),_=ct(e,t,n,a,h.publicKey.toBuffer().toString("hex")),[O]=K.PublicKey.findProgramAddressSync([ne.Buffer.from("STATE_SOURCE"),_],b),k=e.swiftInputContract===Se.ZeroAddress?ue:new K.PublicKey(e.swiftInputContract),M=v(k,O,!0),E=e.gasless?new K.PublicKey(e.relayer):g,N=v(k,E,!1);if(e.fromToken.contract===e.swiftInputContract)e.suggestedPriorityFee>0&&r.push(K.ComputeBudgetProgram.setComputeUnitPrice({microLamports:e.suggestedPriorityFee})),r.push($(E,M,O,k)),e.swiftInputContract===Se.ZeroAddress?r.push(K.SystemProgram.transfer({fromPubkey:g,toPubkey:M,lamports:BigInt(e.effectiveAmountIn64)}),Ue(M)):r.push(Ae(v(k,g,s),M,g,BigInt(e.effectiveAmountIn64)));else{let U=await Ie({minMiddleAmount:e.minMiddleAmount,middleToken:e.swiftInputContract,userWallet:t,slippageBps:e.slippageBps,fromToken:e.fromToken.contract,amountIn64:e.effectiveAmountIn64,depositMode:e.gasless?"SWIFT_GASLESS":"SWIFT",orderHash:`0x${_.toString("hex")}`,fillMaxAccounts:o?.separateSwapTx||!1,tpmTokenAccount:o?.separateSwapTx?f.publicKey.toString():null}),S=Ce(U,i);o?.separateSwapTx&&U.maxAccountsFilled?(fe(S,f.publicKey,g),l=await ke(i,E,k,g,f),c.push(...S.computeBudgetInstructions),S.setupInstructions&&c.push(...S.setupInstructions),c.push(S.swapInstruction),S.cleanupInstruction&&c.push(S.cleanupInstruction),m.push(...S.addressLookupTableAddresses),r.push($(E,M,O,k)),r.push(Fe(g,k,f.publicKey,M,E))):(r.push(...S.computeBudgetInstructions),S.setupInstructions&&r.push(...S.setupInstructions),r.push(S.swapInstruction),S.cleanupInstruction&&r.push(S.cleanupInstruction),p.push(...S.addressLookupTableAddresses))}r.push(ja({quote:e,state:O,trader:g,stateAccount:M,randomKey:h.publicKey,relayerAccount:N,relayer:E,destinationAddress:n,deadline:w,referrerAddress:a}));let G=await De(p.concat(m),i);if(u=G.slice(0,p.length),c.length>0){let U=G.slice(p.length);y={messageV0:{payerKey:E,instructions:c,addressLookupTableAccounts:U},createTmpTokenAccountIxs:l,tmpTokenAccount:f}}return{instructions:r,signers:[],lookupTables:u,swapMessageV0Params:y}}var Yt=rt(require("bs58"));var se=require("@solana/web3.js");var mt=require("buffer");async function Qt(e,t,n,a,i,o={}){if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase()||e.type!=="MCTP")throw new Error("Unsupported quote type for USDC deposit: "+e.type);if(!o?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(!Number(e.deadline64))throw new Error("HyperCore deposit requires timeout");let s=o.allowSwapperOffCurve||!1,r=[],u=[],p=[],m=[];m.push(d.LOOKUP_TABLE);let c=[],l=[],f=[],y=se.Keypair.generate(),b=null,g=new se.PublicKey(t),h=new se.PublicKey(e.hyperCoreParams.initiateTokenContract),w=Math.floor(Math.random()*65e3),[_]=se.PublicKey.findProgramAddressSync([mt.Buffer.from("PAYLOAD"),g.toBuffer(),(()=>{let U=mt.Buffer.alloc(2);return U.writeUInt16LE(w,0),U})()],new se.PublicKey(d.PAYLOAD_WRITER_PROGRAM_ID)),O=ze(e,n,o.usdcPermitSignature),k=se.Keypair.generate(),M=new se.PublicKey(d.MCTP_PROGRAM_ID),[E]=se.PublicKey.findProgramAddressSync([mt.Buffer.from("LEDGER_BRIDGE"),g.toBytes(),k.publicKey.toBytes()],M),N=v(h,E,!0);if(e.fromToken.contract===e.hyperCoreParams.initiateTokenContract){e.suggestedPriorityFee>0&&r.push(se.ComputeBudgetProgram.setComputeUnitPrice({microLamports:e.suggestedPriorityFee})),r.push($(g,N,E,h)),r.push(Ae(v(h,g,s),N,g,BigInt(e.hyperCoreParams.bridgeAmountUSDC64))),r.push(pt(g,_,O,w)),r.push(Ke({ledger:E,randomKey:k.publicKey,swapperAddress:g.toString(),mintAddress:h.toString(),mode:"WITH_FEE",feeSolana:BigInt(0),amountInMin64:BigInt(e.hyperCoreParams.bridgeAmountUSDC64),customPayload:_,destinationAddress:d.HC_ARBITRUM_DEPOSIT_PROCESSOR,referrerAddress:a,feeRedeem:0,gasDrop:e.hyperCoreParams.failureGasDrop,toChain:"arbitrum"}));let{instruction:U,signers:S}=Le(E,"arbitrum",e.hyperCoreParams.initiateTokenContract,g.toString(),BigInt(0));r.push(U),u.push(...S),r.push(ut(g,_,w))}else{let U=await Ie({minMiddleAmount:e.minMiddleAmount,middleToken:e.hyperCoreParams.initiateTokenContract,userWallet:g.toString(),slippageBps:e.slippageBps,fromToken:e.fromToken.contract,amountIn64:e.effectiveAmountIn64,depositMode:"HC_USDC",fillMaxAccounts:o?.separateSwapTx||!1,tpmTokenAccount:y.publicKey.toString()}),S=Ce(U,i);if(o?.separateSwapTx&&U.maxAccountsFilled)fe(S,y.publicKey,g),f=await ke(i,g,h,g,y),l.push(...S.computeBudgetInstructions),S.setupInstructions&&l.push(...S.setupInstructions),l.push(S.swapInstruction),S.cleanupInstruction&&l.push(S.cleanupInstruction),c.push(...S.addressLookupTableAddresses);else{fe(S,y.publicKey,g),r.push(...S.computeBudgetInstructions);let Qe=await ke(i,g,h,g,y);r.push(...Qe),u.push(y),S.setupInstructions&&r.push(...S.setupInstructions),r.push(S.swapInstruction),S.cleanupInstruction&&r.push(S.cleanupInstruction),m.push(...S.addressLookupTableAddresses)}let F=l.length>0?BigInt(0):BigInt(e.solanaRelayerFee64),j=BigInt(e.hyperCoreParams.bridgeAmountUSDC64);l.length>0&&(j=j-BigInt(e.solanaRelayerFee64)),r.push($(g,N,E,new se.PublicKey(e.mctpInputContract))),r.push(Ae(y.publicKey,N,g,j));let pe=v(h,g,s),Z=await i.getAccountInfo(pe);if((!Z||!Z.data)&&r.push($(g,pe,g,h)),r.push(Fe(g,h,y.publicKey,pe,g)),r.push(pt(g,_,O,w)),r.push(Ke({ledger:E,swapperAddress:g.toString(),mintAddress:h.toString(),randomKey:k.publicKey,mode:"WITH_FEE",feeSolana:F,amountInMin64:j,customPayload:_,destinationAddress:d.HC_ARBITRUM_DEPOSIT_PROCESSOR,referrerAddress:a,feeRedeem:0,gasDrop:e.hyperCoreParams.failureGasDrop,toChain:"arbitrum"})),r.push(ut(g,_,w)),l.length>0){let{instruction:Qe,signers:je}=Le(E,"arbitrum",e.hyperCoreParams.initiateTokenContract,g.toString(),BigInt(0));r.push(Qe),u.push(...je)}}let G=await De(m.concat(c),i);if(p=G.slice(0,m.length),l.length>0){let U=G.slice(m.length);b={messageV0:{payerKey:g,instructions:l,addressLookupTableAccounts:U},createTmpTokenAccountIxs:f,tmpTokenAccount:y}}return{instructions:r,signers:u,lookupTables:p,swapMessageV0Params:b}}var xe=require("@solana/web3.js");var Gn=require("ethers");async function jt(e,t,n,a,i,o={}){if(e.type!=="MONO_CHAIN")throw new Error("Unsupported quote type for mono chain: "+e.type);if(e.fromChain!=="solana")throw new Error("Unsupported destination chain for mono chain: "+e.fromChain);if(e.toChain!=="solana")throw new Error("Unsupported destination chain for mono chain: "+e.toChain);if(e.fromToken.contract===e.toToken.contract)throw new Error("From token and to token are the same: "+e.fromToken.contract);if(n.startsWith("0x"))throw new Error("Destination address should not be EVM address");try{new xe.PublicKey(n)}catch{throw new Error("Invalid destination address: "+n)}let s=[],r=[],u=[],p=new xe.PublicKey(t),m=new xe.PublicKey(n),c=e.toToken.contract===Gn.ZeroAddress?ue:new xe.PublicKey(e.toToken.contract),l=v(c,m,!0,e.toToken.standard==="spl2022"?new xe.PublicKey(d.TOKEN_2022_PROGRAM_ID):new xe.PublicKey(d.TOKEN_PROGRAM_ID)),f=T(e.expectedAmountOut,e.toToken.decimals),y=await Ie({userWallet:t,destinationWallet:n,slippageBps:e.slippageBps,fromToken:e.fromToken.contract,middleToken:e.toToken.contract,amountIn64:e.effectiveAmountIn64,expectedAmountOut64:String(f),depositMode:"MONO_CHAIN",referrerAddress:a,referrerBps:e.referrerBps}),b=Ce(y,i);return fe(b,l,p,m,p.equals(m)),Gt(b.swapInstruction,e),s.push(...b.computeBudgetInstructions),b.setupInstructions&&s.push(...b.setupInstructions),s.push(b.swapInstruction),b.cleanupInstruction&&s.push(b.cleanupInstruction),u.push(...b.addressLookupTableAddresses),{instructions:s,signers:[],lookupTables:r,swapMessageV0Params:null}}var Ya=420,Hn=(0,Q.struct)([(0,Q.u8)("instruction"),(0,Q.u8)("stateNonce"),(0,Q.blob)(8,"amount"),(0,Q.blob)(8,"minAmountOut"),(0,Q.blob)(8,"deadline"),(0,Q.blob)(8,"feeSwap"),(0,Q.blob)(8,"feeReturn"),(0,Q.blob)(8,"feeCancel"),(0,Q.blob)(8,"gasDrop"),(0,Q.u16)("destinationChain"),(0,Q.blob)(32,"destinationAddress"),(0,Q.u8)("unwrapRedeem"),(0,Q.u8)("unwrapRefund"),(0,Q.u8)("mayanFeeNonce"),(0,Q.u8)("referrerFeeNonce")]);async function Vn(e,t,n,a,i,o={}){let s=Me(e,a);if(e.fromChain==="hypercore")throw new Error("HyperCore as source chain is not supported in Solana");if(e.toChain==="hypercore")return Qt(e,t,n,s,i,o);if(e.type==="MCTP")return Ht(e,t,n,s,i,o);if(e.type==="SWIFT")return Vt(e,t,n,s,i,o);if(e.type==="MONO_CHAIN")return jt(e,t,n,s,i,o);let r=[],u=i??new R.Connection("https://rpc.ankr.com/solana"),p=new R.PublicKey(d.MAYAN_PROGRAM_ID),m=new R.PublicKey(d.TOKEN_PROGRAM_ID),c=new R.PublicKey(t),l=new R.PublicKey(d.AUCTION_PROGRAM_ID);e.suggestedPriorityFee>0&&r.push(R.ComputeBudgetProgram.setComputeUnitPrice({microLamports:e.suggestedPriorityFee}));let f;s?f=new R.PublicKey(s):f=R.SystemProgram.programId;let[y,b]=R.PublicKey.findProgramAddressSync([_e.Buffer.from("MAYANFEE")],p),[g,h]=R.PublicKey.findProgramAddressSync([_e.Buffer.from("REFERRERFEE"),f.toBuffer()],p),w=R.Keypair.generate(),_=R.Keypair.generate(),[O,k]=R.PublicKey.findProgramAddressSync([_e.Buffer.from("V2STATE"),_e.Buffer.from(w.publicKey.toBytes()),_e.Buffer.from(_.publicKey.toBytes())],p),M=new R.PublicKey(e.fromToken.mint),E=new R.PublicKey(e.toToken.mint),N=v(M,c),G=v(M,O,!0),[[U,S],F,j]=await Promise.all([u.getMultipleAccountsInfo([N,G],"finalized"),u.getMinimumBalanceForRentExemption(Ya),Wt()]);(!U||U.data.length===0)&&r.push($(c,N,c,M)),(!S||S.data.length===0)&&r.push($(c,G,O,M)),e.fromToken.contract===dt.ZeroAddress&&(r.push(R.SystemProgram.transfer({fromPubkey:c,toPubkey:N,lamports:BigInt(e.effectiveAmountIn64)})),r.push(Ue(N)));let pe=BigInt(e.effectiveAmountIn64),Z=R.Keypair.generate();r.push(Nt(N,Z.publicKey,c,pe)),r.push(R.SystemProgram.transfer({fromPubkey:c,toPubkey:Z.publicKey,lamports:F}));let Qe=[{pubkey:Z.publicKey,isWritable:!1,isSigner:!0},{pubkey:w.publicKey,isWritable:!1,isSigner:!0},{pubkey:_.publicKey,isWritable:!1,isSigner:!0},{pubkey:O,isWritable:!0,isSigner:!1},{pubkey:N,isWritable:!0,isSigner:!1},{pubkey:c,isWritable:!1,isSigner:!1},{pubkey:G,isWritable:!0,isSigner:!1},{pubkey:M,isWritable:!1,isSigner:!1},{pubkey:E,isWritable:!1,isSigner:!1},{pubkey:l,isWritable:!1,isSigner:!1},{pubkey:f,isWritable:!1,isSigner:!1},{pubkey:y,isWritable:!1,isSigner:!1},{pubkey:g,isWritable:!1,isSigner:!1},{pubkey:Z.publicKey,isWritable:!0,isSigner:!0},{pubkey:j,isWritable:!1,isSigner:!1},{pubkey:R.SYSVAR_CLOCK_PUBKEY,isWritable:!1,isSigner:!1},{pubkey:R.SYSVAR_RENT_PUBKEY,isWritable:!1,isSigner:!1},{pubkey:m,isWritable:!1,isSigner:!1},{pubkey:R.SystemProgram.programId,isWritable:!1,isSigner:!1}],je=P(e.toChain);if(je===1){let wt=await u.getAccountInfo(new R.PublicKey(n));if(wt&&wt.owner&&wt.owner.equals(m))throw new Error("Destination address is not about token account. It should be a owner address")}let sa=_e.Buffer.from(L(I(n,je))),oa=T(e.minAmountOut,e.mintDecimals.to),pa=T(e.swapRelayerFee,e.mintDecimals.from),ua=T(e.redeemRelayerFee,e.mintDecimals.to),ca=T(e.refundRelayerFee,e.mintDecimals.from),ma=T(e.gasDrop,_t(e.toChain)),da=e.toToken.contract===dt.ZeroAddress,la=e.fromToken.contract===dt.ZeroAddress;if(!Number(e.deadline64))throw new Error("Deadline is not valid");let ya=BigInt(e.deadline64),pn=_e.Buffer.alloc(Hn.span),fa={instruction:101,stateNonce:k,amount:B(pe),minAmountOut:B(oa),deadline:B(ya),feeSwap:B(pa),feeReturn:B(ua),feeCancel:B(ca),gasDrop:B(ma),destinationChain:je,destinationAddress:sa,unwrapRedeem:da?1:0,unwrapRefund:la?1:0,mayanFeeNonce:b,referrerFeeNonce:h};Hn.encode(fa,pn);let ba=new R.TransactionInstruction({keys:Qe,data:pn,programId:p});return r.push(ba),{instructions:r,signers:[Z,w,_],lookupTables:[],swapMessageV0Params:null}}async function $a(e,t,n,a,i,o,s,r,u,p){let m=o??new R.Connection("https://rpc.ankr.com/solana"),c=!!(!e.gasless&&u&&u.tipLamports>0&&u.signAllTransactions),{instructions:l,signers:f,lookupTables:y,swapMessageV0Params:b}=await Vn(e,t,n,a,o,{allowSwapperOffCurve:p?.allowSwapperOffCurve,forceSkipCctpInstructions:p?.forceSkipCctpInstructions,separateSwapTx:c&&u?.separateSwapTx,usdcPermitSignature:p?.usdcPermitSignature}),g=new R.PublicKey(t),h=e.gasless?new R.PublicKey(e.relayer):g,{blockhash:w,lastValidBlockHeight:_}=await o.getLatestBlockhash(),O=R.MessageV0.compile({instructions:l,payerKey:h,recentBlockhash:w,addressLookupTableAccounts:y}),k=new R.VersionedTransaction(O);k.sign(f);let M;if(c){let E=[];if(b){let S=new R.Transaction({feePayer:g,blockhash:w,lastValidBlockHeight:_}).add(...b.createTmpTokenAccountIxs);S.partialSign(b.tmpTokenAccount),E.push(S);let F=R.MessageV0.compile({...b.messageV0,recentBlockhash:w});E.push(new R.VersionedTransaction(F))}let N=Ut(t,w,_,u);E.push(k),E.push(N);let G=await u.signAllTransactions(E);M=G[G.length-2];let U=null;if(M instanceof R.Transaction&&M?.signatures[0]?.publicKey?U=Yt.default.encode(Uint8Array.from(M.signatures[0].signature)):M instanceof R.VersionedTransaction&&M?.signatures[0]&&(U=Yt.default.encode(Uint8Array.from(M.signatures[0]))),U===null)throw new Error("Failed to get mayan tx hash");if(b){let S=await ot(G,u,!0);return await Lt(S,u,_,U,o),Kt(S),{signature:U,serializedTrx:null}}else ot(G,u).then(()=>{console.log("Jito bundle sent")}).catch(()=>{})}else M=await i(k);if(e.gasless){let E=_e.Buffer.from(M.serialize()).toString("base64"),{orderHash:N}=await Ft(E);return{signature:N,serializedTrx:null}}return await et({trx:M.serialize(),connection:m,extraRpcs:s??[],errorChance:2,options:r})}function $t(e,t,n,a,i){let o=Y(Number(i)),s=P(e.fromChain),r=P(e.toChain);if(s!==o)throw new Error(`Signer chain id(${Number(i)}) and quote from chain are not same! ${s} !== ${o}`);if(!e.swiftMayanContract)throw new Error("SWIFT contract address is missing");if(e.toToken.wChainId!==r)throw new Error(`Destination chain ID mismatch: ${r} != ${e.toToken.wChainId}`);let u=e.swiftMayanContract;if(!Number(e.deadline64))throw new Error("Swift order requires timeout");let p=BigInt(e.deadline64),m=e.swiftInputContract,c=BigInt(e.effectiveAmountIn64),l;a?l=I(a,r):l=I(nt.SystemProgram.programId.toString(),1);let f=I(nt.Keypair.generate().publicKey.toString(),1),y=e.toToken.contract===oe.ZeroAddress?I(nt.SystemProgram.programId.toString(),1):I(e.toToken.contract,r),b=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),g=T(e.gasDrop,Math.min(8,W(e.toChain))),h=I(n,r),w={trader:I(t,s),tokenOut:y,minAmountOut:b,gasDrop:g,cancelFee:BigInt(e.cancelRelayerFee64),refundFee:BigInt(e.refundRelayerFee64),deadline:p,destAddr:h,destChainId:r,referrerAddr:l,referrerBps:e.referrerBps||0,auctionMode:e.swiftAuctionMode,random:f};return{contractAddress:u,tokenIn:m,amountIn:c,order:w}}function Jt(e,t,n,a,i,o){if(e.type!=="SWIFT")throw new Error("Quote type is not SWIFT");if(!Number.isFinite(Number(i)))throw new Error("Invalid signer chain id");if(!Number(e.deadline64))throw new Error("Swift order requires timeout");i=Number(i);let s=o||z,r=new oe.Contract(d.MAYAN_FORWARDER_CONTRACT,q.abi),{tokenIn:u,amountIn:p,order:m,contractAddress:c}=$t(e,t,n,a,i),l,f=new oe.Contract(c,hn.abi);e.swiftInputContract===oe.ZeroAddress?l=f.interface.encodeFunctionData("createOrderWithEth",[m]):l=f.interface.encodeFunctionData("createOrderWithToken",[u,p,m]);let y,b,g;if(e.fromToken.contract===e.swiftInputContract)e.fromToken.contract===oe.ZeroAddress?(y="forwardEth",b=[c,l],g=(0,oe.toBeHex)(p)):(y="forwardERC20",b=[u,p,s,c,l],g=(0,oe.toBeHex)(0));else{let{evmSwapRouterAddress:w,evmSwapRouterCalldata:_}=e;if(!e.minMiddleAmount||!w||!_)throw new Error("Swift swap requires middle amount, router address and calldata");let O=e.fromToken.contract,k=T(e.minMiddleAmount,e.swiftInputDecimals);e.fromToken.contract===oe.ZeroAddress?(y="swapAndForwardEth",b=[p,w,_,e.swiftInputContract,k,c,l],g=(0,oe.toBeHex)(p)):(y="swapAndForwardERC20",b=[O,p,s,w,_,e.swiftInputContract,k,c,l],g=(0,oe.toBeHex)(0))}return{data:r.interface.encodeFunctionData(y,b),to:d.MAYAN_FORWARDER_CONTRACT,value:g,chainId:i,_forwarder:{method:y,params:b}}}function Qn(e,t,n){if(!Number.isFinite(Number(n)))throw new Error("Invalid signer chain id");let a=BigInt(e.effectiveAmountIn64),i=BigInt(e.submitRelayerFee64);return{domain:{name:"Mayan Swift",chainId:Number(n),verifyingContract:e.swiftMayanContract},types:{CreateOrder:[{name:"OrderId",type:"bytes32"},{name:"InputAmount",type:"uint256"},{name:"SubmissionFee",type:"uint256"}]},value:{OrderId:t,InputAmount:a-i,SubmissionFee:i}}}function zt(e,t,n,a,i,o){if(e.type!=="SWIFT")throw new Error("Quote type is not SWIFT");if(!e.gasless)throw new Error("Quote does not support gasless");if(!Number.isFinite(Number(i)))throw new Error("Invalid signer chain id");if(!Number(e.deadline64))throw new Error("Swift order requires timeout");if(e.fromToken.contract!==e.swiftInputContract)throw new Error("Swift gasless order creation does not support source swap");let{tokenIn:s,amountIn:r,order:u}=$t(e,t,n,a,Number(i)),p=P(e.fromChain),c=`0x${ct(e,t,n,a,u.random).toString("hex")}`,l=Qn(e,c,i);return{permitParams:o,orderParams:{...u,sourceChainId:p,amountIn:r,tokenIn:s,submissionFee:BigInt(e.submitRelayerFee64)},orderHash:c,orderTypedData:l}}var we=require("ethers");var ce=require("buffer");var jn={abi:[{type:"function",name:"batchMaxApprove",inputs:[{name:"approvals",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"initiate",inputs:[{name:"recipient",type:"bytes32",internalType:"bytes32"},{name:"overrideAmountIn",type:"uint256",internalType:"uint256"},{name:"targetChain",type:"uint16",internalType:"uint16"},{name:"params",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes",internalType:"bytes"}],stateMutability:"payable"},{type:"error",name:"ChainNotSupported",inputs:[{name:"chain",type:"uint16",internalType:"uint16"}]},{type:"error",name:"DeadlineExpired",inputs:[{name:"blocktime",type:"uint256",internalType:"uint256"},{name:"deadline",type:"uint256",internalType:"uint256"}]},{type:"error",name:"EthTransferFailed",inputs:[]},{type:"error",name:"ExceedsMaxGasDropoff",inputs:[{name:"requested",type:"uint256",internalType:"uint256"},{name:"maximum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"ExceedsMaxRelayingFee",inputs:[{name:"fee",type:"uint256",internalType:"uint256"},{name:"maximum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InsufficientInputAmount",inputs:[{name:"input",type:"uint256",internalType:"uint256"},{name:"minimum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidAddress",inputs:[{name:"addr",type:"bytes32",internalType:"bytes32"}]},{type:"error",name:"InvalidBoolVal",inputs:[{name:"val",type:"uint8",internalType:"uint8"}]},{type:"error",name:"InvalidOverrideAmount",inputs:[{name:"received",type:"uint256",internalType:"uint256"},{name:"maximum",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidSwapType",inputs:[{name:"swapType",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidSwapTypeForChain",inputs:[{name:"chain",type:"uint16",internalType:"uint16"},{name:"swapType",type:"uint256",internalType:"uint256"}]},{type:"error",name:"LengthMismatch",inputs:[{name:"encodedLength",type:"uint256",internalType:"uint256"},{name:"expectedLength",type:"uint256",internalType:"uint256"}]},{type:"error",name:"RelayingDisabledForChain",inputs:[]}]};var Re={FAST_MODE_FLAG:1,RELAY_REDEEM_MODE:2,EXACT_IN_FLAG:1,USDC_INPUT_TOKEN_TYPE:0,PRE_APPROVED_ACQUIRE_MODE:0,OUTPUT_USDC_MODE:0,OUTPUT_NATIVE_MODE:1,OUTPUT_OTHER_MODE:2};function Ja(e){let t=(1n<<128n)-1n;if(e<0n||e>t)throw new RangeError("Value must fit in an unsigned 128-bit integer (0 <= value < 2^128)");let n=ce.Buffer.alloc(16);for(let a=15;a>=0;a--)n[a]=Number(e&0xFFn),e>>=8n;return n}function za(e,t,n){let{shuttleParams:a}=e;if(!a)throw new Error("Swap layer params are missing in quote response");let i=Y(Number(n)),o=P(e.fromChain),s=P(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(n)}) and quote from chain are not same! ${o} !== ${i}`);let r=[];r.push(Re.FAST_MODE_FLAG);let u=ce.Buffer.alloc(8);u.writeBigUInt64BE(BigInt(a.maxLLFee));let p=u.subarray(2);r.push(...p);let m=ce.Buffer.alloc(4);m.writeUInt32BE(a.fastTransferDeadline),r.push(...m),r.push(Re.RELAY_REDEEM_MODE);let c=T(e.gasDrop,Math.min(6,W(e.toChain))),l=ce.Buffer.alloc(8);l.writeBigUInt64BE(c);let f=l.subarray(4);r.push(...f);let y=ce.Buffer.alloc(8);y.writeBigUInt64BE(BigInt(a.maxRelayingFee));let b=y.subarray(2);r.push(...b),r.push(Re.EXACT_IN_FLAG),r.push(Re.USDC_INPUT_TOKEN_TYPE);let g=BigInt(e.effectiveAmountIn64);if(e.fromToken.contract===e.shuttleInputContract){r.push(...Array(8).fill(0));let w=ce.Buffer.alloc(8);w.writeBigUInt64BE(g),r.push(...w)}else r.push(...Array(16).fill(0));if(r.push(Re.PRE_APPROVED_ACQUIRE_MODE),a.hasDestSwap){if(e.toToken.contract===we.ZeroAddress)r.push(Re.OUTPUT_NATIVE_MODE);else{r.push(Re.OUTPUT_OTHER_MODE);let k=ce.Buffer.from(I(e.toToken.contract,s).slice(2),"hex");r.push(...k)}let w=ce.Buffer.alloc(4);w.writeUInt32BE(Number(BigInt(e.deadline64))),r.push(...w);let _=T(e.minAmountOut,e.toToken.decimals);if(e.toChain==="solana"){r.push(...Array(8).fill(0));let k=ce.Buffer.alloc(8);k.writeBigUInt64BE(_),r.push(...k)}else{let k=Ja(_);r.push(...k)}let O=ce.Buffer.from(a.path.slice(2),"hex");r.push(...O)}else r.push(Re.OUTPUT_USDC_MODE);return{destAddr:I(t,s),destChainId:s,serializedParams:`0x${ce.Buffer.from(r).toString("hex")}`,contractAddress:e.shuttleContract,amountIn:g,bridgeFee:T(e.bridgeFee,W(e.fromChain))}}function Yn(e,t,n,a){if(e.type!=="SHUTTLE")throw new Error("Quote type is not SHUTTLE");if(!Number.isFinite(Number(n)))throw new Error("Invalid signer chain id");n=Number(n);let i=a||z,o=new we.Contract(d.MAYAN_FORWARDER_CONTRACT,q.abi),{destAddr:s,destChainId:r,serializedParams:u,contractAddress:p,amountIn:m,bridgeFee:c}=za(e,t,n),l;l=new we.Contract(p,jn.abi).interface.encodeFunctionData("initiate",[s,m,r,u]);let y,b,g;if(e.fromToken.contract===e.shuttleInputContract)y="forwardERC20",b=[e.shuttleInputContract,m,i,p,l],g=(0,we.toBeHex)(c);else{let{evmSwapRouterAddress:w,evmSwapRouterCalldata:_}=e;if(!e.minMiddleAmount||!w||!_)throw new Error("Shuttle source chain swap requires middle amount, router address and calldata");let O=e.fromToken.contract,k=T(e.minMiddleAmount,e.shuttleInputDecimals);e.fromToken.contract===we.ZeroAddress?(y="swapAndForwardEth",b=[m,w,_,e.shuttleInputContract,k,p,l],g=(0,we.toBeHex)(m)):(y="swapAndForwardERC20",b=[O,m,i,w,_,e.shuttleInputContract,k,p,l],g=(0,we.toBeHex)(c))}return{data:o.interface.encodeFunctionData(y,b),to:d.MAYAN_FORWARDER_CONTRACT,value:g,chainId:n,_forwarder:{method:y,params:b}}}var J=require("ethers"),lt=require("@solana/web3.js");var Zt={abi:[{type:"constructor",inputs:[{name:"_cctpTokenMessengerV2",type:"address",internalType:"address"},{name:"_feeManager",type:"address",internalType:"address"}],stateMutability:"nonpayable"},{type:"receive",stateMutability:"payable"},{type:"function",name:"bridge",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"redeemFee",type:"uint64",internalType:"uint64"},{name:"circleMaxFee",type:"uint256",internalType:"uint256"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"destAddr",type:"bytes32",internalType:"bytes32"},{name:"destDomain",type:"uint32",internalType:"uint32"},{name:"referrerAddress",type:"bytes32",internalType:"bytes32"},{name:"referrerBps",type:"uint8",internalType:"uint8"},{name:"payloadType",type:"uint8",internalType:"uint8"},{name:"minFinalityThreshold",type:"uint32",internalType:"uint32"},{name:"customPayload",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"cctpTokenMessengerV2",inputs:[],outputs:[{name:"",type:"address",internalType:"contract ITokenMessengerV2"}],stateMutability:"view"},{type:"function",name:"changeGuardian",inputs:[{name:"newGuardian",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"claimGuardian",inputs:[],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"createOrder",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"circleMaxFee",type:"uint256",internalType:"uint256"},{name:"destDomain",type:"uint32",internalType:"uint32"},{name:"minFinalityThreshold",type:"uint32",internalType:"uint32"},{name:"orderPayload",type:"tuple",internalType:"struct FastMCTP.OrderPayload",components:[{name:"payloadType",type:"uint8",internalType:"uint8"},{name:"destAddr",type:"bytes32",internalType:"bytes32"},{name:"tokenOut",type:"bytes32",internalType:"bytes32"},{name:"amountOutMin",type:"uint64",internalType:"uint64"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"redeemFee",type:"uint64",internalType:"uint64"},{name:"refundFee",type:"uint64",internalType:"uint64"},{name:"deadline",type:"uint64",internalType:"uint64"},{name:"referrerAddr",type:"bytes32",internalType:"bytes32"},{name:"referrerBps",type:"uint8",internalType:"uint8"}]}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"domainToCaller",inputs:[{name:"",type:"uint32",internalType:"uint32"}],outputs:[{name:"",type:"bytes32",internalType:"bytes32"}],stateMutability:"view"},{type:"function",name:"feeManager",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"fulfillOrder",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"},{name:"swapProtocol",type:"address",internalType:"address"},{name:"swapData",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"guardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"keyToMintRecipient",inputs:[{name:"",type:"bytes32",internalType:"bytes32"}],outputs:[{name:"",type:"bytes32",internalType:"bytes32"}],stateMutability:"view"},{type:"function",name:"nextGuardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"paused",inputs:[],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"redeem",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"refund",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"rescueEth",inputs:[{name:"amount",type:"uint256",internalType:"uint256"},{name:"to",type:"address",internalType:"address payable"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"rescueRedeem",inputs:[{name:"cctpMsg",type:"bytes",internalType:"bytes"},{name:"cctpSigs",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"rescueToken",inputs:[{name:"token",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"},{name:"to",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setDomainCallers",inputs:[{name:"domain",type:"uint32",internalType:"uint32"},{name:"caller",type:"bytes32",internalType:"bytes32"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setFeeManager",inputs:[{name:"_feeManager",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setMintRecipient",inputs:[{name:"destDomain",type:"uint32",internalType:"uint32"},{name:"tokenIn",type:"address",internalType:"address"},{name:"mintRecipient",type:"bytes32",internalType:"bytes32"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setPause",inputs:[{name:"_pause",type:"bool",internalType:"bool"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setWhitelistedMsgSenders",inputs:[{name:"sender",type:"address",internalType:"address"},{name:"isWhitelisted",type:"bool",internalType:"bool"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setWhitelistedSwapProtocols",inputs:[{name:"protocol",type:"address",internalType:"address"},{name:"isWhitelisted",type:"bool",internalType:"bool"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"whitelistedMsgSenders",inputs:[{name:"",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"whitelistedSwapProtocols",inputs:[{name:"",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"event",name:"OrderFulfilled",inputs:[{name:"sourceDomain",type:"uint32",indexed:!1,internalType:"uint32"},{name:"sourceNonce",type:"bytes32",indexed:!1,internalType:"bytes32"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"event",name:"OrderRefunded",inputs:[{name:"sourceDomain",type:"uint32",indexed:!1,internalType:"uint32"},{name:"sourceNonce",type:"bytes32",indexed:!1,internalType:"bytes32"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"error",name:"AlreadySet",inputs:[]},{type:"error",name:"CallerNotSet",inputs:[]},{type:"error",name:"CctpReceiveFailed",inputs:[]},{type:"error",name:"DeadlineViolation",inputs:[]},{type:"error",name:"EthTransferFailed",inputs:[]},{type:"error",name:"InvalidAddress",inputs:[]},{type:"error",name:"InvalidAmountOut",inputs:[]},{type:"error",name:"InvalidGasDrop",inputs:[]},{type:"error",name:"InvalidMintRecipient",inputs:[]},{type:"error",name:"InvalidPayload",inputs:[]},{type:"error",name:"InvalidPayloadType",inputs:[]},{type:"error",name:"InvalidRedeemFee",inputs:[]},{type:"error",name:"InvalidRefundFee",inputs:[]},{type:"error",name:"MintRecipientNotSet",inputs:[]},{type:"error",name:"Paused",inputs:[]},{type:"error",name:"Unauthorized",inputs:[]},{type:"error",name:"UnauthorizedMsgSender",inputs:[]},{type:"error",name:"UnauthorizedSwapProtocol",inputs:[]}]};var zn=require("buffer");function Za(e,t,n,a,i){let o=Y(Number(a)),s=P(e.fromChain),r=P(e.toChain);if(s!==o)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${s} !== ${o}`);let u=I(t,r),p=T(e.redeemRelayerFee,x),m=T(e.gasDrop,Math.min(W(e.toChain),8)),c=BigInt(e.circleMaxFee64),l=BigInt(e.effectiveAmountIn64),f=ge(e.toChain),y;if(n?y=I(n,r):y=I(lt.SystemProgram.programId.toString(),P("solana")),!e.fastMctpMayanContract)throw new Error("FastMctp contract address is missing");let b=e.fastMctpMayanContract;return{tokenIn:e.fastMctpInputContract,amountIn:l,redeemFee:p,gasDrop:m,destAddr:u,destDomain:f,referrerAddr:y,referrerBps:e.referrerBps,payloadType:i?kt:Mt,customPayload:i?`0x${zn.Buffer.from(i).toString("hex")}`:"0x",minFinalityThreshold:Number(e.fastMctpMinFinality),circleMaxFee:c,contractAddress:b}}function $n(e,t,n,a,i){let o=Za(e,t,n,a,i),{contractAddress:s,tokenIn:r,amountIn:u,destAddr:p,redeemFee:m,gasDrop:c,circleMaxFee:l,referrerAddr:f,referrerBps:y,destDomain:b,customPayload:g,minFinalityThreshold:h,payloadType:w}=o,_=new J.Contract(s,Zt.abi),O,k;return O=_.interface.encodeFunctionData("bridge",[r,u,m,l,c,p,b,f,y,w,h,g]),k=(0,J.toBeHex)(0),{to:s,data:O,value:k,_params:o}}function Xa(e,t,n,a){let i=Y(Number(a)),o=P(e.fromChain),s=P(e.toChain);if(o!==i)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${o} !== ${i}`);if(!e.fastMctpMayanContract)throw new Error("MCTP contract address is missing");let r=e.fastMctpMayanContract,u=I(t,s),p;n?p=I(n,s):p=I(lt.SystemProgram.programId.toString(),P("solana"));let m=T(e.redeemRelayerFee,x),c=BigInt(e.refundRelayerFee64),l=BigInt(e.circleMaxFee64),f=T(e.gasDrop,Math.min(W(e.toChain),8)),y=ge(e.toChain),b=BigInt(e.effectiveAmountIn64),g=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),h=BigInt(e.deadline64),w=e.toToken.contract===J.ZeroAddress?I(lt.SystemProgram.programId.toString(),P("solana")):I(e.toChain==="sui"?e.toToken.verifiedAddress:e.toToken.contract,e.toToken.wChainId);return{tokenIn:e.fastMctpInputContract,amountIn:b,circleMaxFee:l,destDomain:y,minFinalityThreshold:Number(e.fastMctpMinFinality),orderPayload:{payloadType:Rt,destAddr:u,tokenOut:w,amountOutMin:g,gasDrop:f,redeemFee:m,refundFee:c,deadline:h,referrerAddr:p,referrerBps:e.referrerBps||0},contractAddress:r}}function Jn(e,t,n,a){let i=Xa(e,t,n,a),{contractAddress:o,orderPayload:s,tokenIn:r,amountIn:u,circleMaxFee:p,destDomain:m,minFinalityThreshold:c}=i,f=new J.Contract(o,Zt.abi).interface.encodeFunctionData("createOrder",[r,u,p,m,c,s]),y=(0,J.toBeHex)(0);return{to:o,data:f,value:y,_params:i}}function Xt(e,t,n,a,i,o){if(e.type!=="FAST_MCTP")throw new Error("Quote type is not FAST_MCTP");if(!Number.isFinite(Number(a)))throw new Error("Invalid signer chain id");a=Number(a);let s=i||z,r=new J.Contract(d.MAYAN_FORWARDER_CONTRACT,q.abi);if(e.fromToken.contract===e.fastMctpInputContract)if(e.hasAuction){if(!Number(e.deadline64))throw new Error("Fast Mctp order requires timeout");let u=Jn(e,t,n,a),p="forwardERC20",m=[e.fromToken.contract,u._params.amountIn,s,u._params.contractAddress,u.data];return{data:r.interface.encodeFunctionData(p,m),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,J.toBeHex)(0),chainId:a,_forwarder:{method:p,params:m}}}else{let u=$n(e,t,n,a,o),p="forwardERC20",m=[e.fromToken.contract,u._params.amountIn,s,u._params.contractAddress,u.data];return{data:r.interface.encodeFunctionData(p,m),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,J.toBeHex)(0),chainId:a,_forwarder:{method:p,params:m}}}else{let{minMiddleAmount:u,evmSwapRouterAddress:p,evmSwapRouterCalldata:m}=e;if(!u||!p||!m)throw new Error("Fast Mctp swap requires middle amount, router address and calldata");if(e.hasAuction){if(!Number(e.deadline64))throw new Error("Fast Mctp order requires timeout");let c=Jn(e,t,n,a),l=T(e.minMiddleAmount,x);if(e.fromToken.contract===J.ZeroAddress){let f="swapAndForwardEth",y=[c._params.amountIn,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,J.toBeHex)(c._params.amountIn),chainId:a,_forwarder:{method:f,params:y}}}else{let f="swapAndForwardERC20",y=[e.fromToken.contract,c._params.amountIn,s,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,J.toBeHex)(0),chainId:a,_forwarder:{method:f,params:y}}}}else{let c=$n(e,t,n,a,o),l=T(e.minMiddleAmount,x);if(e.fromToken.contract===J.ZeroAddress){let f="swapAndForwardEth",y=[c._params.amountIn,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,J.toBeHex)(c._params.amountIn),chainId:a,_forwarder:{method:f,params:y}}}else{let f="swapAndForwardERC20",y=[e.fromToken.contract,c._params.amountIn,s,p,m,e.fastMctpInputContract,l,c._params.contractAddress,c.data];return{data:r.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,J.toBeHex)(0),chainId:a,_forwarder:{method:f,params:y}}}}}}var me=require("ethers"),Zn=require("@solana/web3.js");var qt={abi:[{type:"constructor",inputs:[{name:"_hcProcessor",type:"address",internalType:"address"},{name:"_usdc",type:"address",internalType:"address"}],stateMutability:"nonpayable"},{type:"function",name:"changeGuardian",inputs:[{name:"newGuardian",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"claimGuardian",inputs:[],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"deposit",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"trader",type:"address",internalType:"address"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"bridgeAmount",type:"uint256",internalType:"uint256"},{name:"depositPayload",type:"tuple",internalType:"struct HCDepositInitiator.DepositPayload",components:[{name:"relayerFee",type:"uint64",internalType:"uint64"},{name:"permit",type:"tuple",internalType:"struct IHCBridge.DepositWithPermit",components:[{name:"user",type:"address",internalType:"address"},{name:"usd",type:"uint64",internalType:"uint64"},{name:"deadline",type:"uint64",internalType:"uint64"},{name:"signature",type:"tuple",internalType:"struct IHCBridge.Signature",components:[{name:"r",type:"uint256",internalType:"uint256"},{name:"s",type:"uint256",internalType:"uint256"},{name:"v",type:"uint8",internalType:"uint8"}]}]}]}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"fastDeposit",inputs:[{name:"tokenIn",type:"address",internalType:"address"},{name:"amountIn",type:"uint256",internalType:"uint256"},{name:"trader",type:"address",internalType:"address"},{name:"circleMaxFee",type:"uint256",internalType:"uint256"},{name:"gasDrop",type:"uint64",internalType:"uint64"},{name:"referrerAddress",type:"bytes32",internalType:"bytes32"},{name:"referrerBps",type:"uint8",internalType:"uint8"},{name:"minFinalityThreshold",type:"uint32",internalType:"uint32"},{name:"bridgeAmount",type:"uint256",internalType:"uint256"},{name:"depositPayload",type:"tuple",internalType:"struct HCDepositInitiator.DepositPayload",components:[{name:"relayerFee",type:"uint64",internalType:"uint64"},{name:"permit",type:"tuple",internalType:"struct IHCBridge.DepositWithPermit",components:[{name:"user",type:"address",internalType:"address"},{name:"usd",type:"uint64",internalType:"uint64"},{name:"deadline",type:"uint64",internalType:"uint64"},{name:"signature",type:"tuple",internalType:"struct IHCBridge.Signature",components:[{name:"r",type:"uint256",internalType:"uint256"},{name:"s",type:"uint256",internalType:"uint256"},{name:"v",type:"uint8",internalType:"uint8"}]}]}]}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"fastMCTP",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"guardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"mayanCircle",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"nextGuardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"setFastMCTP",inputs:[{name:"_fastMCTP",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"setMayanCircle",inputs:[{name:"_mayanCircle",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"error",name:"AlreadySet",inputs:[]},{type:"error",name:"InsufficientAmount",inputs:[]},{type:"error",name:"Unauthorized",inputs:[]}]};var en=require("buffer");function qa(e,t,n,a){if(!e.hyperCoreParams.initiateContractAddress)throw new Error("HyperCore initiate contract address is missing");if(e.type!=="MCTP")throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);let i=new me.Contract(e.hyperCoreParams.initiateContractAddress,qt.abi),o=en.Buffer.from(L(a));if(o.length!==65)throw new Error("Invalid USDC permit signature length");let s="0x"+o.subarray(0,32).toString("hex"),r="0x"+o.subarray(32,64).toString("hex"),u=o[64],p,m;return p=i.interface.encodeFunctionData("deposit",[e.hyperCoreParams.initiateTokenContract,BigInt(e.hyperCoreParams.bridgeAmountUSDC64),t,T(e.hyperCoreParams.failureGasDrop,Math.min(W("arbitrum"),8)),BigInt(e.hyperCoreParams.bridgeAmountUSDC64),{relayerFee:T(e.redeemRelayerFee,x),permit:{user:n,usd:BigInt(e.hyperCoreParams.depositAmountUSDC64),deadline:BigInt(e.deadline64),signature:{r:s,s:r,v:u}}}]),m=(0,me.toBeHex)(0),{to:e.hyperCoreParams.initiateContractAddress,data:p,value:m,_params:{amountIn:BigInt(e.hyperCoreParams.bridgeAmountUSDC64),contractAddress:e.hyperCoreParams.initiateContractAddress}}}function er(e,t,n,a,i){let o=P("arbitrum");if(!e.hyperCoreParams.initiateContractAddress)throw new Error("HyperCore initiate contract address is missing");if(e.type!=="FAST_MCTP")throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);let s=new me.Contract(e.hyperCoreParams.initiateContractAddress,qt.abi),r=en.Buffer.from(L(i));if(r.length!==65)throw new Error("Invalid USDC permit signature length");let u="0x"+r.subarray(0,32).toString("hex"),p="0x"+r.subarray(32,64).toString("hex"),m=r[64],c;a?c=I(a,o):c=I(Zn.SystemProgram.programId.toString(),P("solana"));let l,f;return l=s.interface.encodeFunctionData("fastDeposit",[e.hyperCoreParams.initiateTokenContract,BigInt(e.hyperCoreParams.bridgeAmountUSDC64),t,BigInt(e.circleMaxFee64),T(e.hyperCoreParams.failureGasDrop,Math.min(W("arbitrum"),8)),c,e.referrerBps,Number(e.fastMctpMinFinality),BigInt(e.hyperCoreParams.bridgeAmountUSDC64),{relayerFee:T(e.redeemRelayerFee,x),permit:{user:n,usd:BigInt(e.hyperCoreParams.depositAmountUSDC64),deadline:BigInt(e.deadline64),signature:{r:u,s:p,v:m}}}]),f=(0,me.toBeHex)(0),{to:e.hyperCoreParams.initiateContractAddress,data:l,value:f,_params:{amountIn:BigInt(e.hyperCoreParams.bridgeAmountUSDC64),contractAddress:e.hyperCoreParams.initiateContractAddress}}}function tn(e,t,n,a,i,o,s,r={}){if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase()||e.type!=="MCTP"&&e.type!=="FAST_MCTP")throw new Error("Unsupported quote type for USDC deposit: "+e.type);if(!r?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(s)throw new Error("HyperCore deposit does not support payload");if(!Number.isFinite(Number(i)))throw new Error("Invalid signer chain id");let u=Y(Number(i)),p=P(e.fromChain);if(p!==u)throw new Error(`Signer chain id(${Number(i)}) and quote from chain are not same! ${p} !== ${u}`);let m=o||z,c=new me.Contract(d.MAYAN_FORWARDER_CONTRACT,q.abi),l;if(!Number(e.deadline64))throw new Error("HyperCore deposit requires timeout");if(e.type==="MCTP")l=qa(e,t,n,r.usdcPermitSignature);else if(e.type==="FAST_MCTP")l=er(e,t,n,a,r.usdcPermitSignature);else throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);if(e.fromToken.contract.toLowerCase()===e.hyperCoreParams.initiateTokenContract.toLowerCase()){let f="forwardERC20",y=[e.fromToken.contract,BigInt(e.effectiveAmountIn64),m,l._params.contractAddress,l.data];return{data:c.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,me.toBeHex)(0),chainId:i,_forwarder:{method:f,params:y}}}else{let{evmSwapRouterAddress:f,evmSwapRouterCalldata:y}=e;if(!e.minMiddleAmount||!f||!y)throw new Error("Fast Mctp swap requires middle amount, router address and calldata");let b=T(e.minMiddleAmount,x);if(e.fromToken.contract===me.ZeroAddress){let g="swapAndForwardEth",h=[BigInt(e.effectiveAmountIn64),f,y,e.hyperCoreParams.initiateTokenContract,b,l._params.contractAddress,l.data];return{data:c.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,me.toBeHex)(BigInt(e.effectiveAmountIn64)),chainId:i,_forwarder:{method:g,params:h}}}else{let g="swapAndForwardERC20",h=[e.fromToken.contract,BigInt(e.effectiveAmountIn64),m,f,y,e.hyperCoreParams.initiateTokenContract,b,l._params.contractAddress,l.data];return{data:c.interface.encodeFunctionData(g,h),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,me.toBeHex)(0),chainId:i,_forwarder:{method:g,params:h}}}}}var ae=require("ethers");var Xn={abi:[{type:"constructor",inputs:[{name:"_forwarderAddress",type:"address",internalType:"address"}],stateMutability:"nonpayable"},{type:"receive",stateMutability:"payable"},{type:"function",name:"ForwarderAddress",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"MAX_REFERRER_BPS",inputs:[],outputs:[{name:"",type:"uint8",internalType:"uint8"}],stateMutability:"view"},{type:"function",name:"changeGuardian",inputs:[{name:"newGuardian",type:"address",internalType:"address"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"claimGuardian",inputs:[],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"guardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"nextGuardian",inputs:[],outputs:[{name:"",type:"address",internalType:"address"}],stateMutability:"view"},{type:"function",name:"rescueETH",inputs:[{name:"to",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"rescueToken",inputs:[{name:"token",type:"address",internalType:"address"},{name:"to",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"transferEth",inputs:[{name:"to",type:"address",internalType:"address"},{name:"referrerAddr",type:"address",internalType:"address"},{name:"referrerBps",type:"uint8",internalType:"uint8"}],outputs:[],stateMutability:"payable"},{type:"function",name:"transferToken",inputs:[{name:"token",type:"address",internalType:"address"},{name:"amount",type:"uint256",internalType:"uint256"},{name:"to",type:"address",internalType:"address"},{name:"referrerAddr",type:"address",internalType:"address"},{name:"referrerBps",type:"uint8",internalType:"uint8"}],outputs:[],stateMutability:"nonpayable"},{type:"event",name:"EthTransferred",inputs:[{name:"to",type:"address",indexed:!1,internalType:"address"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"event",name:"TokenTransferred",inputs:[{name:"token",type:"address",indexed:!1,internalType:"address"},{name:"to",type:"address",indexed:!1,internalType:"address"},{name:"amount",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"error",name:"InvalidReferrerBps",inputs:[]},{type:"error",name:"Unauthorized",inputs:[]}]};function tr(e,t,n){let a=T(e.expectedAmountOut,e.toToken.decimals),i=new ae.Contract(e.monoChainMayanContract,Xn.abi),o=n&&e.referrerBps||0,s,r;return e.toToken.contract===ae.ZeroAddress?s=i.interface.encodeFunctionData("transferEth",[t,n||ae.ZeroAddress,o]):s=i.interface.encodeFunctionData("transferToken",[e.toToken.contract,a,t,n||ae.ZeroAddress,o]),e.fromToken.contract===ae.ZeroAddress?r=(0,ae.toBeHex)(e.effectiveAmountIn64):r=(0,ae.toBeHex)(0),{to:e.monoChainMayanContract,data:s,value:r,_params:{amountIn:BigInt(e.effectiveAmountIn64),tokenIn:e.fromToken.contract}}}function nn(e,t,n,a,i){if(e.type!=="MONO_CHAIN")throw new Error("Quote type is not MONO_CHAIN");if(e.fromChain!==e.toChain)throw new Error("Quote chains are not equal");if(e.fromToken.contract.toLowerCase()===e.toToken.contract.toLowerCase())throw new Error(`From token and to token are the same: ${e.fromToken.contract}`);if(!Number.isFinite(Number(a)))throw new Error("Invalid signer chain id");let o=Y(Number(a)),s=P(e.fromChain);if(s!==o)throw new Error(`Signer chain id(${Number(a)}) and quote from chain are not same! ${s} !== ${o}`);a=Number(a);let r=i||z,u=new ae.Contract(d.MAYAN_FORWARDER_CONTRACT,q.abi),{evmSwapRouterAddress:p,evmSwapRouterCalldata:m}=e;if(!p||!m)throw new Error("Mono chain swap requires router address and calldata");let c=tr(e,t,n),l=T(e.minAmountOut,e.toToken.decimals);if(e.fromToken.contract===ae.ZeroAddress){let f="swapAndForwardEth",y=[c._params.amountIn,p,m,e.toToken.contract,l,e.monoChainMayanContract,c.data];return{data:u.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,ae.toBeHex)(c._params.amountIn),chainId:a,_forwarder:{method:f,params:y}}}else{let f="swapAndForwardERC20",y=[e.fromToken.contract,c._params.amountIn,r,p,m,e.toToken.contract,l,e.monoChainMayanContract,c.data];return{data:u.interface.encodeFunctionData(f,y),to:d.MAYAN_FORWARDER_CONTRACT,value:(0,ae.toBeHex)(0),chainId:a,_forwarder:{method:f,params:y}}}}function nr(e,t,n,a,i,o){let s=new Ge.PublicKey(d.MAYAN_PROGRAM_ID),[r]=Ge.PublicKey.findProgramAddressSync([an.Buffer.from("MAIN")],s),u=v(new Ge.PublicKey(e.fromToken.mint),r,!0),p=BigInt(e.effectiveAmountIn64),m=I(u.toString(),1),c=I(d.AUCTION_PROGRAM_ID,1),l;n?l=I(n,1):l=I(Ge.SystemProgram.programId.toString(),1);let f=Y(Number(i)),y=P(e.fromChain),b=P(e.toChain);if(y!==f)throw new Error(`Signer chain id(${Number(i)}) and quote from chain are not same! ${y} !== ${f}`);let g=e.whMayanContract,h={mayanAddr:m,mayanChainId:1,destAddr:I(t,b),destChainId:b,auctionAddr:c,referrer:l,refundAddr:I(a,f)},w=e.toToken.contract===Pe.ZeroAddress,_={transferDeadline:BigInt(e.deadline64),swapDeadline:BigInt(e.deadline64),amountOutMin:T(e.minAmountOut,Math.min(8,e.toToken.decimals)),gasDrop:T(e.gasDrop,Math.min(8,W(e.toChain))),unwrap:w,customPayload:o?`0x${an.Buffer.from(o).toString("hex")}`:"0x"},O={swapFee:T(e.swapRelayerFee,Math.min(8,e.fromToken.decimals)),redeemFee:T(e.redeemRelayerFee,Math.min(8,e.toToken.decimals)),refundFee:T(e.refundRelayerFee,Math.min(8,e.fromToken.decimals))},k=I(e.toToken.realOriginContractAddress,e.toToken.realOriginChainId),M=T(e.bridgeFee,18);return{amountIn:p,tokenIn:e.fromToken.contract,tokenOut:k,tokenOutWChainId:e.toToken.realOriginChainId,criteria:_,recipient:h,relayerFees:O,contractAddress:g,bridgeFee:M}}function yt(e,t,n,a,i,o,s,r,u){let p=Y(Number(o)),m=P(e.fromChain);if(m!==p)throw new Error(`Signer chain id(${Number(o)}) and quote from chain are not same! ${m} !== ${p}`);let c=Me(e,a);if(e.toChain==="hypercore")return tn(e,t,n,c,o,r,s,u);if(e.type==="MCTP")return Bt(e,n,c,o,r,s);if(e.type==="SWIFT")return Jt(e,t,n,c,o,r);if(e.type==="SHUTTLE")return Yn(e,n,o,r);if(e.type==="FAST_MCTP")return Xt(e,n,c,o,r,s);if(e.type==="MONO_CHAIN")return nn(e,n,c,o,r);if(e.type!="WH")throw new Error("Unsupported quote type");if(!Number(e.deadline64))throw new Error("WH mode requires a timeout");let{relayerFees:l,recipient:f,tokenOut:y,tokenOutWChainId:b,criteria:g,tokenIn:h,amountIn:w,contractAddress:_,bridgeFee:O}=nr(e,n,c,i,o,s),k=new Pe.Contract(d.MAYAN_FORWARDER_CONTRACT,q.abi),M=new Pe.Contract(_,bn.abi),E,N,G,U=r||z;if(h===Pe.ZeroAddress){let F=M.interface.encodeFunctionData("wrapAndSwapETH",[l,f,y,b,g]);E="forwardEth",N=[_,F],G=(0,Pe.toBeHex)(w)}else{let F=M.interface.encodeFunctionData("swap",[l,f,y,b,g,h,w]);E="forwardERC20",N=[h,w,U,_,F],G=(0,Pe.toBeHex)(O)}let S=k.interface.encodeFunctionData(E,N);return{to:d.MAYAN_FORWARDER_CONTRACT,data:S,value:G,chainId:o,_forwarder:{method:E,params:N}}}async function ar(e,t,n,a,i,o,s,r,u){if(!i.provider)throw new Error("No provider found for signer");let p=await i.getAddress();if(p.toLowerCase()!==t.toLowerCase())throw new Error("Signer address does not match swapper address");let m=Number((await i.provider.getNetwork()).chainId);if(e.type==="SWIFT"&&e.gasless&&e.toChain!=="hypercore"){let l=Me(e,a),f=zt(e,t,n,l,m,o),y=await i.signTypedData(f.orderTypedData.domain,f.orderTypedData.types,f.orderTypedData.value);return await Dt(f,y),f.orderHash}let c=yt(e,t,n,a,p,m,r,o,u);if(delete c._forwarder,s?.gasPrice&&(c.gasPrice=s.gasPrice),s?.maxFeePerGas&&(c.maxFeePerGas=s.maxFeePerGas),s?.maxPriorityFeePerGas&&(c.maxPriorityFeePerGas=s.maxPriorityFeePerGas),s?.gasLimit)c.gasLimit=s.gasLimit;else{let l=await i.estimateGas(c);c.gasLimit=String(BigInt(String(l))*BigInt(110)/BigInt(100))}return c.chainId=Ct(e.fromChain),i.sendTransaction(c)}async function rr(e,t,n,a,i){let o=await n.getAddress(),s=e.toChain==="solana"?"ENsytooJVSZyNHbxvueUeX8Am8gcNqPivVVE8USCBiy5":"0x1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a",r=Number((await n.provider.getNetwork()).chainId);if(e.type==="SWIFT"&&e.gasless)return BigInt(0);let u=yt(e,t,s,null,o,r,i,a);delete u._forwarder;let p=await n.estimateGas(u);return p=BigInt(String(p)),e.type==="MCTP"||e.type==="SWIFT"?p*BigInt(110)/BigInt(100):p}async function ir(e,t,n,a){let i="0x1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a",o=e.toChain==="solana"?"ENsytooJVSZyNHbxvueUeX8Am8gcNqPivVVE8USCBiy5":"0x1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a",s=e?.fromToken?.chainId;if(e.type==="SWIFT"&&e.gasless)return BigInt(0);let r=yt(e,i,o,null,i,s,a,n);return delete r._forwarder,t.estimateGas(r)}async function rn(e,t){let n;try{n=await t.getMoveFunctionArgTypes({package:e.package,module:e.module,function:e.function})}catch{throw new Error(`Failed to fetch ${e.package}::${e.module}::${e.function} ArgTypes`)}if(n){if(n[e.argumentIndex]!=="Pure"&&n[e.argumentIndex]?.Object!=="ByImmutableReference")throw new Error(`Argument ${e.argumentIndex} of ${e.module}::${e.function} is not immutable`)}else throw new Error(`Failed to fetch package::${e.module}::${e.function} ArgTypes`)}async function ft(e,t){let n=[],a=BigInt(0),i;do{let o=await t.getCoins({...e,owner:e.walletAddress,cursor:i}),s=o.data.filter(r=>BigInt(r.balance)>BigInt(0));if(n=[...n,...s],s.forEach(r=>{a+=BigInt(r.balance)}),o.data.length===0||!o.hasNextPage||!o.nextCursor||a>=e.coinAmount)return{coins:n.sort((r,u)=>Number(BigInt(r.coinObjectId)-BigInt(u.coinObjectId))),sum:a};i=o.nextCursor}while(!0)}async function He(e,t){let n;try{n=await t.getObject({id:e,options:{showContent:!0}})}catch(a){throw new Error(`Failed to fetch Mayan Sui package ID: 

 ${a}`)}if(n.data?.content?.fields?.latest_package_id)return n.data.content.fields.latest_package_id;throw new Error("latest_package_id not found in Mayan Sui state object")}async function Ee(e,t,n,a,i,o){let s;if(o?.result)s=o.result;else if(o?.objectId)s=i.object(o.objectId);else{let{coins:r,sum:u}=await ft({walletAddress:t,coinType:n,coinAmount:e},a);if(u<e)throw new Error(`Insufficient funds to create Coin ${n} with amount ${e}`);r.length>1&&i.mergeCoins(r[0].coinObjectId,r.slice(1).map(m=>m.coinObjectId));let[p]=i.splitCoins(r[0].coinObjectId,[e]);s=p}return s}var Ve=require("@mysten/sui/transactions"),gt=require("@mysten/sui/utils");var bt=require("@solana/web3.js");var qn=require("ethers");async function sn(e,t,n,a,i,o,s){let[r,u]=await Promise.all([He(d.SUI_MCTP_STATE,o),e.hasAuction?He(d.SUI_MCTP_FEE_MANAGER_STATE,o):null]),p=T(e.minMiddleAmount,x),m,c,l;if(e.fromToken.contract===e.mctpInputContract)m=s?.builtTransaction??new Ve.Transaction,c=await Ee(p,t,e.mctpInputContract,o,m,s?.inputCoin);else{let{tx:b,outCoin:g,whFeeCoin:h}=await Ze({amountIn64:e.effectiveAmountIn64,inputCoinType:e.fromToken.contract,middleCoinType:e.mctpInputContract,userWallet:t,withWhFee:e.hasAuction||e.cheaperChain!=="sui",referrerAddress:a,inputCoin:s?.inputCoin,transaction:s?.builtTransaction?await s.builtTransaction.toJSON():void 0});m=Ve.Transaction.from(b),c=g,l=h?{result:h}:null}e.hasAuction?await na(e,t,n,a,r,u,o,{inputCoin:{result:c},whFeeCoin:l,builtTransaction:m}):e.cheaperChain==="sui"?await ta(e,t,n,r,o,{inputCoin:{result:c},whFeeCoin:l,builtTransaction:m}):await ea(e,t,n,r,i,o,{inputCoin:{result:c},whFeeCoin:l,builtTransaction:m});let f=BigInt(e.effectiveAmountIn64),y=i?Uint8Array.from(i):Uint8Array.from([]);m.moveCall({package:r,module:"init_order",function:"log_initialize_mctp",typeArguments:[e.fromToken.contract],arguments:[m.pure.u64(f),m.object(e.fromToken.verifiedAddress),m.pure.vector("u8",y)]});try{let b;a?b=I(a,P(e.toChain)):b=I(bt.SystemProgram.programId.toString(),P("solana")),m.moveCall({package:d.SUI_LOGGER_PACKAGE_ID,module:"referrer_logger",function:"log_referrer",arguments:[m.pure.address(b),m.pure.u8(e.referrerBps||0)]})}catch(b){console.error("Failed to log referrer",b)}return m}async function ea(e,t,n,a,i,o,s){return Tt({swapperAddress:t,destinationAddress:n,toChain:e.toChain,minMiddleAmount:e.minMiddleAmount,mctpPackageId:a,mctpInputContract:e.mctpInputContract,gasDrop:e.gasDrop,redeemRelayerFee:e.redeemRelayerFee,mctpVerifiedInputAddress:e.mctpVerifiedInputAddress,mctpInputTreasury:e.mctpInputTreasury,bridgeFee:e.bridgeFee,payload:i,suiClient:o,options:s})}async function ta(e,t,n,a,i,o){let s=P(e.toChain),r=o?.builtTransaction??new Ve.Transaction,u=T(e.minMiddleAmount,x),p=await Ee(u,t,e.mctpInputContract,i,r,o?.inputCoin),m=I(n,s),c=ge(e.toChain),l=T(e.gasDrop,Math.min(W(e.toChain),8)),f=T(e.redeemRelayerFee,x),[y]=r.moveCall({package:a,module:"bridge_locked_fee",function:"prepare_bridge_locked_fee",typeArguments:[e.mctpInputContract],arguments:[p,r.pure.u64(u),r.pure.address(m),r.pure.u32(c),r.pure.u64(l),r.pure.u64(f)]}),[b,g]=r.moveCall({package:a,module:"bridge_locked_fee",function:"bridge_locked_fee",typeArguments:[e.mctpInputContract],arguments:[r.object(d.SUI_MCTP_STATE),r.object(d.SUI_CCTP_CORE_STATE),r.object(e.mctpVerifiedInputAddress),y]}),[h,w]=r.moveCall({package:d.SUI_CCTP_TOKEN_PACKAGE_ID,module:"deposit_for_burn",function:"deposit_for_burn_with_caller_with_package_auth",typeArguments:[e.mctpInputContract,`${a}::bridge_locked_fee::CircleAuth`],arguments:[g,r.object(d.SUI_CCTP_TOKEN_STATE),r.object(d.SUI_CCTP_CORE_STATE),r.object("0x403"),r.object(e.mctpInputTreasury)]});return r.moveCall({package:a,module:"bridge_locked_fee",function:"store_bridge_locked_fee",typeArguments:[e.mctpInputContract],arguments:[r.object(d.SUI_MCTP_STATE),r.object(e.mctpVerifiedInputAddress),b,w]}),r}async function na(e,t,n,a,i,o,s,r){let u=P(e.toChain),p=r?.builtTransaction??new Ve.Transaction,m=T(e.minMiddleAmount,x),[c]=await Promise.all([Ee(m,t,e.mctpInputContract,s,p,r?.inputCoin),rn({package:o,module:"calculate_mctp_fee",function:"prepare_calc_mctp_fee",argumentIndex:3},s)]),l=e.toToken.contract===qn.ZeroAddress?I(bt.SystemProgram.programId.toString(),P("solana")):I(e.toToken.contract,e.toToken.wChainId),f=T(e.minAmountOut,Math.min(8,e.toToken.decimals)),y=I(n,u),b=ge(e.toChain),g=T(e.gasDrop,Math.min(W(e.toChain),8)),h=T(e.redeemRelayerFee,x),w=BigInt(e.deadline64),_;a?_=I(a,u):_=I(bt.SystemProgram.programId.toString(),P("solana"));let O=[p.object(e.mctpVerifiedInputAddress),p.pure.u8(Pt),p.pure.address(t),c,p.pure.address(y),p.pure.u16(u),p.pure.address(l),p.pure.u64(f),p.pure.u64(g),p.pure.u64(h),p.pure.u64(w),p.pure.address(_),p.pure.u8(e.referrerBps)],[k]=p.moveCall({package:o,module:"calculate_mctp_fee",function:"prepare_calc_mctp_fee",typeArguments:[e.mctpInputContract],arguments:O}),[M]=p.moveCall({package:o,module:"calculate_mctp_fee",function:"calculate_mctp_fee",arguments:[p.object(d.SUI_MCTP_FEE_MANAGER_STATE),k]}),[E]=p.moveCall({package:i,module:"init_order",function:"prepare_initialize_order",typeArguments:[e.mctpInputContract],arguments:[...O.slice(1),p.pure.u32(b),p.pure.u64(m)]}),[N,G]=p.moveCall({package:i,module:"init_order",function:"initialize_order",typeArguments:[e.mctpInputContract],arguments:[p.object(d.SUI_MCTP_STATE),p.object(d.SUI_CCTP_CORE_STATE),p.object(e.mctpVerifiedInputAddress),E,M]}),[U,S]=p.moveCall({package:d.SUI_CCTP_TOKEN_PACKAGE_ID,module:"deposit_for_burn",function:"deposit_for_burn_with_caller_with_package_auth",typeArguments:[e.mctpInputContract,`${i}::init_order::CircleAuth`],arguments:[G,p.object(d.SUI_CCTP_TOKEN_STATE),p.object(d.SUI_CCTP_CORE_STATE),p.object("0x403"),p.object(e.mctpInputTreasury)]}),[F]=p.moveCall({package:i,module:"init_order",function:"publish_init_order",arguments:[p.object(d.SUI_MCTP_STATE),N,S]});return await aa(p,F,s,BigInt(e.bridgeFee),t,r?.whFeeCoin),p}async function aa(e,t,n,a,i,o){let s;if(o?.result)s=o.result;else if(o?.objectId)s=e.object(o.objectId);else if(a>BigInt(0)){let{coins:r,sum:u}=await ft({walletAddress:i,coinType:gt.SUI_TYPE_ARG,coinAmount:a},n);if(u<a)throw new Error("Insufficient funds to pay Wormhole message fee");r.length>1&&e.mergeCoins(r[0].coinObjectId,r.slice(1).map(m=>m.coinObjectId));let[p]=e.splitCoins(r[0].coinObjectId,[a]);s=p}else{let[r]=e.splitCoins(e.gas,[e.pure.u64(0)]);s=r}return e.moveCall({package:d.SUI_WORMHOLE_PACKAGE_ID,module:"publish_message",function:"publish_message",arguments:[e.object(d.SUI_WORMHOLE_STATE),s,t,e.object(gt.SUI_CLOCK_OBJECT_ID)]}),e}async function Tt(e){let{swapperAddress:t,destinationAddress:n,mctpPackageId:a,payload:i,suiClient:o,options:s}=e,r=P(e.toChain),u=s?.builtTransaction??new Ve.Transaction,p=T(e.minMiddleAmount,x),m=await Ee(p,t,e.mctpInputContract,o,u,s?.inputCoin),c=i?Je:$e,l=I(n,r),f=ge(e.toChain),y=T(e.gasDrop,Math.min(W(e.toChain),8)),b=T(e.redeemRelayerFee,x),g=i?Uint8Array.from(i):Uint8Array.from([]),[h]=u.moveCall({package:a,module:"bridge_with_fee",function:"prepare_bridge_with_fee",typeArguments:[e.mctpInputContract],arguments:[u.pure.u8(c),m,u.pure.u64(p),u.pure.address(l),u.pure.u32(f),u.pure.u64(y),u.pure.u64(b),u.pure.vector("u8",g)]}),[w,_]=u.moveCall({package:a,module:"bridge_with_fee",function:"bridge_with_fee",typeArguments:[e.mctpInputContract],arguments:[u.object(d.SUI_MCTP_STATE),u.object(d.SUI_CCTP_CORE_STATE),u.object(e.mctpVerifiedInputAddress),h]}),[O,k]=u.moveCall({package:d.SUI_CCTP_TOKEN_PACKAGE_ID,module:"deposit_for_burn",function:"deposit_for_burn_with_caller_with_package_auth",typeArguments:[e.mctpInputContract,`${a}::bridge_with_fee::CircleAuth`],arguments:[_,u.object(d.SUI_CCTP_TOKEN_STATE),u.object(d.SUI_CCTP_CORE_STATE),u.object("0x403"),u.object(e.mctpInputTreasury)]}),[M]=u.moveCall({package:a,module:"bridge_with_fee",function:"publish_bridge_with_fee",arguments:[u.object(d.SUI_MCTP_STATE),w,k]});return await aa(u,M,o,BigInt(e.bridgeFee),t,s?.whFeeCoin),u}var on=require("@mysten/sui/transactions");var ra=require("@solana/web3.js");async function ia(e,t,n,a,i,o){if(e.toToken.contract.toLowerCase()!==d.ARBITRUM_USDC_CONTRACT.toLowerCase()||e.type!=="MCTP")throw new Error("Unsupported quote type for USDC deposit: "+e.type);if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(!o?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(!Number(e.deadline64))throw new Error("HyperCore deposit requires timeout");let[s]=await Promise.all([He(d.SUI_MCTP_STATE,i)]),r=T(e.minMiddleAmount,x),u,p,m;if(e.fromToken.contract===e.hyperCoreParams.initiateTokenContract)u=o?.builtTransaction??new on.Transaction,p=await Ee(BigInt(e.hyperCoreParams.bridgeAmountUSDC64),t,e.mctpInputContract,i,u,o?.inputCoin);else{let{tx:y,outCoin:b,whFeeCoin:g}=await Ze({amountIn64:e.effectiveAmountIn64,inputCoinType:e.fromToken.contract,middleCoinType:e.hyperCoreParams.initiateTokenContract,userWallet:t,withWhFee:!0,referrerAddress:a,inputCoin:o?.inputCoin,transaction:o?.builtTransaction?await o.builtTransaction.toJSON():void 0});u=on.Transaction.from(y);let[h]=u.splitCoins(b,[BigInt(e.hyperCoreParams.bridgeAmountUSDC64)]);u.transferObjects([b],u.pure.address(t)),p=h,m=g?{result:g}:null}let c=ze(e,n,o.usdcPermitSignature);await Tt({swapperAddress:t,destinationAddress:d.HC_ARBITRUM_DEPOSIT_PROCESSOR,mctpPackageId:s,toChain:"arbitrum",minMiddleAmount:At(e.hyperCoreParams.bridgeAmountUSDC64,x),bridgeFee:e.bridgeFee,gasDrop:e.hyperCoreParams.failureGasDrop,mctpInputContract:e.mctpInputContract,mctpInputTreasury:e.mctpInputTreasury,mctpVerifiedInputAddress:e.mctpVerifiedInputAddress,redeemRelayerFee:0,payload:c,suiClient:i,options:{inputCoin:{result:p},whFeeCoin:m,builtTransaction:u}});let l=BigInt(e.effectiveAmountIn64),f=Uint8Array.from(c);u.moveCall({package:s,module:"init_order",function:"log_initialize_mctp",typeArguments:[e.fromToken.contract],arguments:[u.pure.u64(l),u.object(e.fromToken.verifiedAddress),u.pure.vector("u8",f)]});try{let y;a?y=I(a,P(e.toChain)):y=I(ra.SystemProgram.programId.toString(),P("solana")),u.moveCall({package:d.SUI_LOGGER_PACKAGE_ID,module:"referrer_logger",function:"log_referrer",arguments:[u.pure.address(y),u.pure.u8(e.referrerBps||0)]})}catch(y){console.error("Failed to log referrer",y)}return u}async function sr(e,t,n,a,i,o,s){let r=Me(e,a);if(e.toChain==="hypercore"){if(!e.hyperCoreParams)throw new Error("HyperCore parameters are required for this quote");if(!s?.usdcPermitSignature)throw new Error("USDC permit signature is required for this quote");if(e.type!=="MCTP")throw new Error("Unsupported quote type for HyperCore deposit: "+e.type);if(i)throw new Error("Payload is not supported for HyperCore deposit quotes");return ia(e,t,n,r,o,s)}if(e.type==="MCTP")return sn(e,t,n,r,i,o,s);throw new Error("Unsupported quote type from Sui chain")}0&&(module.exports={FAST_MCTP_PAYLOAD_TYPE_CUSTOM_PAYLOAD,FAST_MCTP_PAYLOAD_TYPE_DEFAULT,FAST_MCTP_PAYLOAD_TYPE_ORDER,MCTP_INIT_ORDER_PAYLOAD_ID,MCTP_PAYLOAD_TYPE_CUSTOM_PAYLOAD,MCTP_PAYLOAD_TYPE_DEFAULT,PermitTypes,ZeroPermit,addBridgeLockedFeeMoveCalls,addBridgeWithFeeMoveCalls,addBridgeWithFeeMoveCalls2,addInitOrderMoveCalls,addresses,assertArgumentIsImmutable,broadcastJitoBundleId,checkHyperCoreDeposit,checkSdkVersionSupport,confirmJitoBundleId,createApproveInstruction,createAssociatedTokenAccountInstruction,createCloseAccountInstruction,createHyperCoreDepositFromSolanaInstructions,createInitializeRandomTokenAccountInstructions,createMctpBridgeLedgerInstruction,createMctpBridgeWithFeeInstruction,createMctpFromSolanaInstructions,createMctpFromSuiMoveCalls,createMonoChainFromSolanaInstructions,createPayloadWriterCloseInstruction,createPayloadWriterCreateInstruction,createSplTransferInstruction,createSwapFromSolanaInstructions,createSwapFromSuiMoveCalls,createSwiftFromSolanaInstructions,createSwiftOrderHash,createSyncNativeInstruction,createTransferAllAndCloseInstruction,decentralizeClientSwapInstructions,decideRelayer,deserializeInstructionInfo,estimateQuoteRequiredGas,estimateQuoteRequiredGasAprox,fetchAllCoins,fetchAllTokenList,fetchMayanSuiPackageId,fetchQuote,fetchTokenList,generateFetchQuoteUrl,getAddressLookupTableAccounts,getAmountOfFractionalAmount,getAnchorInstructionData,getAssociatedTokenAddress,getCurrentChainTime,getDisplayAmount,getEvmChainIdByName,getEvmSwiftParams,getFastMctpFromEvmTxPayload,getGasDecimal,getGasDecimalsInSolana,getHyperCoreDepositFromEvmTxPayload,getHyperCoreUSDCDepositCustomPayload,getHyperCoreUSDCDepositPermitParams,getJitoTipTransfer,getMctpFromEvmTxPayload,getMonoChainFromEvmTxPayload,getPermitDomain,getPermitParams,getQuoteSuitableReferrerAddress,getSafeU64Blob,getSdkVersion,getSuggestedRelayer,getSwapFromEvmTxPayload,getSwapSolana,getSwapSui,getSwiftFromEvmGasLessParams,getSwiftFromEvmTxPayload,getSwiftOrderTypeData,getWormholeChainIdById,getWormholeChainIdByName,hexToUint8Array,isValidAptosType,nativeAddressToHexString,resolveInputCoin,sendJitoBundle,solMint,submitSwiftEvmSwap,submitSwiftSolanaSwap,submitTransactionWithRetry,swapFromEvm,swapFromSolana,unwrapSol,validateJupSwap,validateJupSwapInstructionData,wait,wrapSol});
