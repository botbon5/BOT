"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const schema_1 = require("@sprucelabs/schema");
const choice_builder_1 = __importDefault(require("./choice.builder"));
const link_builder_1 = __importDefault(require("./link.builder"));
const feedItemTargetSchema = (0, schema_1.buildSchema)({
    id: 'feedItemTarget',
    fields: {
        personId: { type: 'id' },
        casualName: { type: 'text', isRequired: true },
        avatar: {
            type: 'image',
            options: { requiredSizes: ['*'] },
        },
        skillId: { type: 'id' },
        isMe: { type: 'boolean', isRequired: true },
        isSprucebot: { type: 'boolean', isRequired: true },
    },
});
const feedItemSchema = (0, schema_1.buildSchema)({
    id: 'feedItem',
    fields: {
        id: {
            type: 'id',
            isRequired: true,
        },
        message: {
            type: 'text',
            isRequired: true,
        },
        dateCreated: {
            type: 'dateTime',
            isRequired: true,
        },
        note: {
            type: 'text',
        },
        source: {
            type: 'schema',
            isRequired: true,
            options: {
                schema: feedItemTargetSchema,
            },
        },
        target: {
            type: 'schema',
            isRequired: true,
            options: {
                schema: feedItemTargetSchema,
            },
        },
        choices: {
            type: 'schema',
            isArray: true,
            options: {
                schemaId: choice_builder_1.default,
            },
        },
        links: {
            type: 'schema',
            isArray: true,
            minArrayLength: 0,
            options: {
                schema: link_builder_1.default,
            },
        },
        context: {
            type: 'raw',
            options: {
                valueType: 'Record<string, any>',
            },
        },
    },
});
exports.default = (0, schema_1.buildSchema)({
    id: 'feed',
    fields: {
        items: {
            type: 'schema',
            isArray: true,
            isRequired: true,
            minArrayLength: 0,
            options: {
                schema: feedItemSchema,
            },
        },
    },
});
