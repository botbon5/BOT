"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("../constants");
const splitCache = {};
const eventNameUtil = {
    split(name) {
        if (!splitCache[name]) {
            const versionParts = name.split('::');
            const fullyQualifiedEventName = versionParts[0];
            const version = versionParts[1];
            const parts = fullyQualifiedEventName.split('.');
            const eventNamespace = parts[1] ? parts[0] : undefined;
            const eventName = parts[1] || parts[0];
            const e = {
                eventName,
            };
            if (eventNamespace) {
                e.eventNamespace = eventNamespace;
            }
            if (version) {
                e.version = version;
            }
            splitCache[name] = e;
        }
        return splitCache[name];
    },
    join(options) {
        const { eventName: eventNameOptions, eventNamespace: eventNamespaceOptions, version: versionOptions, } = options;
        let { eventName, eventNamespace, version } = this.split(eventNameOptions);
        eventNamespace = eventNamespaceOptions ?? eventNamespace;
        version = versionOptions ?? version;
        function optionallyAttachversion(name) {
            if (version) {
                return name + constants_1.EVENT_VERSION_DIVIDER + version;
            }
            return name;
        }
        if (!eventNamespace) {
            return optionallyAttachversion(eventName);
        }
        let fullyQualifiedEventName = !eventNamespace
            ? eventName
            : `${eventNamespace}.${eventName.replace(eventNamespace + '.', '')}`;
        fullyQualifiedEventName = optionallyAttachversion(fullyQualifiedEventName);
        return fullyQualifiedEventName;
    },
    generateResponseEventName(fullyQualifiedEventName) {
        const { eventName, eventNamespace, version } = this.split(fullyQualifiedEventName);
        let name = `${this.join({
            eventNamespace,
            eventName,
            version: '',
        })}:response`;
        if (version) {
            name += '::' + version;
        }
        return name;
    },
};
exports.default = eventNameUtil;
