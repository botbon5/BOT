import { EventContract, EventName } from '@sprucelabs/mercury-types';
import { NamedEventSignature } from '../types/event.types';
declare const eventContractUtil: {
    getEventNames(contract: EventContract, namespace?: string): string[];
    getNamedEventSignatures(contract: EventContract): NamedEventSignature[];
    unifyContracts<Contract extends EventContract = import("@sprucelabs/mercury-types").SpruceSchemas.Mercury.v2020_12_25.EventContract>(contracts: Contract[], options?: {
        shouldUpsert?: boolean;
    }): Contract | undefined;
    resolveToLatestEventName<Contract extends EventContract>(contract: Contract, fullyQualifiedEventName: string): string | undefined;
    getSignatureByName<Contract extends EventContract>(contract: Contract, fullyQualifiedEventName: EventName<Contract>): import("@sprucelabs/mercury-types").SpruceSchemas.Mercury.v2020_12_25.EventSignature;
};
export default eventContractUtil;
