"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const schema_1 = require("@sprucelabs/schema");
const statusFlags_schema_1 = __importDefault(require("./statusFlags.schema"));
const permissionDefaultsSchema = {
    id: 'permissionDefaults',
    version: 'v2020_12_25',
    namespace: 'Mercury',
    name: '',
    moduleToImportFromWhenRemote: '@sprucelabs/mercury-types',
    fields: {
        /** . */
        'skill': {
            type: 'boolean',
            options: undefined
        },
        /** Owner. */
        'owner': {
            label: 'Owner',
            type: 'schema',
            options: { schema: statusFlags_schema_1.default, }
        },
        /** Group manager. */
        'groupManager': {
            label: 'Group manager',
            type: 'schema',
            options: { schema: statusFlags_schema_1.default, }
        },
        /** Manager. */
        'manager': {
            label: 'Manager',
            type: 'schema',
            options: { schema: statusFlags_schema_1.default, }
        },
        /** Teammate. */
        'teammate': {
            label: 'Teammate',
            type: 'schema',
            options: { schema: statusFlags_schema_1.default, }
        },
        /** Anonymous. */
        'anonymous': {
            label: 'Anonymous',
            type: 'schema',
            options: { schema: statusFlags_schema_1.default, }
        },
        /** Logged in. */
        'loggedIn': {
            label: 'Logged in',
            type: 'schema',
            options: { schema: statusFlags_schema_1.default, }
        },
        /** Guest. */
        'guest': {
            label: 'Guest',
            type: 'schema',
            options: { schema: statusFlags_schema_1.default, }
        },
    }
};
schema_1.SchemaRegistry.getInstance().trackSchema(permissionDefaultsSchema);
exports.default = permissionDefaultsSchema;
