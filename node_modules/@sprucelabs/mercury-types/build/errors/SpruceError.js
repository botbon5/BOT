"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const error_1 = __importDefault(require("@sprucelabs/error"));
const schema_1 = require("@sprucelabs/schema");
class SpruceError extends error_1.default {
    /** An easy to understand version of the errors */
    friendlyMessage() {
        const { options } = this;
        let message;
        switch (options?.code) {
            case 'INVALID_EVENT_CONTRACT': {
                message = `Yikes! This event contract is not valid!`;
                const { originalError } = options ?? {};
                if (originalError instanceof schema_1.SchemaError &&
                    originalError.options.code === 'VALIDATION_FAILED') {
                    message = '\n\n' + originalError.message;
                }
                else {
                    message += ` I'm not sure exactly why, though.`;
                }
                break;
            }
            default:
                message = super.friendlyMessage();
        }
        const fullMessage = options.friendlyMessage
            ? options.friendlyMessage
            : message;
        return fullMessage;
    }
}
exports.default = SpruceError;
