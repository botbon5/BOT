import { FIRST_MESSAGES } from './constants/FIRST_MESSAGES.js';
import { GREETINGS } from './constants/GREETINGS.js';
import { promptTemplate } from './generateSamples.js';
export function randomizedTopics(topics) {
    return [...topics].sort(() => Math.random() - 0.5);
}
export function generateOffTheRails(off, topics) {
    const greeting = random(GREETINGS);
    const renderedTopics = renderTopics(randomizedTopics(topics));
    const messages = renderMessages([off.messages[0]], renderedTopics);
    return {
        prompt: render(promptTemplate, {
            greeting,
            topics: renderedTopics,
            messages,
            firstMessage: random(FIRST_MESSAGES),
        }),
        completion: render(random(off.messages[1].text), { topics }),
    };
}
export function generateCompletion(ts, c) {
    const completion = `{{#${c + 1}}}`;
    const greeting = random(GREETINGS);
    const topic = ts[c];
    const { topics, messages } = renderMessagesAndTopics(ts, topic.conversations);
    return {
        prompt: render(promptTemplate, {
            firstMessage: random(FIRST_MESSAGES),
            topics,
            greeting,
            messages,
        }),
        completion,
    };
}
function renderMessagesAndTopics(ts, conversations) {
    const conversation = random(conversations);
    const topics = renderTopics(ts);
    const rendered = renderMessages(conversation.messages, topics);
    return { topics, messages: rendered };
}
function renderMessages(messages, topics) {
    return render(messages.map((m) => `__${m.from}__: ${random(m.text)}`).join('\n') +
        '\n__You__:', { topics });
}
function renderTopics(topics) {
    return topics.map((t, idx) => `${idx + 1}. ${random(t.name)}`).join('\n');
}
export function random(values) {
    return values[Math.floor(Math.random() * values.length)];
}
export function render(message, context) {
    let prompt = message;
    for (const key in context) {
        const value = context[key];
        const regex = new RegExp(`{{${key}}}`, 'g'); // use regex to match all occurrences
        prompt = prompt.replace(regex, value);
    }
    return prompt;
}
