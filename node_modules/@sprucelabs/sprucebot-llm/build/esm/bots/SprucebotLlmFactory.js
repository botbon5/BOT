import { assertOptions } from '@sprucelabs/schema';
import SpruceError from '../errors/SpruceError.js';
import SprucebotLlmBotImpl from './SprucebotLlmBotImpl.js';
import SprucebotLlmSkillImpl from './SprucebotLlmSkillImpl.js';
export default class SprucebotLlmFactory {
    constructor(adapter) {
        this.adapter = adapter;
    }
    Bot(options) {
        var _a;
        assertOptions(options, ['youAre']);
        const { Class } = options;
        return new ((_a = Class !== null && Class !== void 0 ? Class : SprucebotLlmFactory.BotClass) !== null && _a !== void 0 ? _a : SprucebotLlmBotImpl)(Object.assign(Object.assign({}, options), { adapter: this.adapter }));
    }
    Skill(options) {
        var _a;
        assertOptions(options, ['yourJobIfYouChooseToAcceptItIs']);
        return new ((_a = SprucebotLlmFactory.SkillClass) !== null && _a !== void 0 ? _a : SprucebotLlmSkillImpl)(Object.assign({}, options));
    }
    getBotInstance() {
        if (!this.instance) {
            throw new SpruceError({
                code: 'NO_BOT_INSTANCE_SET',
            });
        }
        return this.instance;
    }
    setBotInstance(bot) {
        this.instance = bot;
    }
    static Factory(adapter) {
        var _a;
        assertOptions({ adapter }, ['adapter']);
        return new ((_a = this.FactoryClass) !== null && _a !== void 0 ? _a : this)(adapter);
    }
    static reset() {
        this.BotClass = undefined;
        this.FactoryClass = undefined;
        this.SkillClass = undefined;
    }
}
