var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
export default function buildCallbackSkill(bots) {
    return bots.Skill({
        yourJobIfYouChooseToAcceptItIs: "to be the best appointment taker on the planet. You have a many years of experience. You are going to ask me only 2 questions for this practice run. First, you'll ask me to pick an available time. Then, you'll ask me to pick my favorite color (make sure to call the api to see what times and colors i can choose from). After all is said and done, make sure to actually book the appointment!:",
        weAreDoneWhen: 'the appointment is booked!',
        pleaseKeepInMindThat: [],
        callbacks: {
            availableTimes: {
                cb: () => __awaiter(this, void 0, void 0, function* () {
                    return [
                        '9am',
                        '10am',
                        '11am',
                        '1pm',
                        '4pm',
                        '5pm',
                        '12am.',
                    ].join('\n');
                }),
                useThisWhenever: 'your are showing what times i can pick from.',
            },
            favoriteColor: {
                cb: () => __awaiter(this, void 0, void 0, function* () {
                    return ['red', 'blue', 'green', 'purple'].join('\n');
                }),
                useThisWhenever: 'your are showing what colors i can pick from.',
            },
            book: {
                cb: (options) => __awaiter(this, void 0, void 0, function* () {
                    console.log('BOOKING OPTIONS', options);
                    return 'Appointment booked!';
                }),
                useThisWhenever: 'You are ready to book an appointment!',
                parameters: [
                    {
                        name: 'time',
                        isRequired: true,
                        type: 'string',
                    },
                    {
                        name: 'color',
                        isRequired: true,
                        type: 'string',
                    },
                ],
            },
        },
    });
}
