"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MESSAGE_RESPONSE_ERROR_MESSAGE = void 0;
const schema_1 = require("@sprucelabs/schema");
const openai_1 = __importDefault(require("openai"));
const OpenAiMessageBuilder_1 = __importDefault(require("./OpenAiMessageBuilder"));
class OpenAiAdapter {
    // private log = buildLog('SprucebotLLM::OpenAiAdapter')
    constructor(apiKey) {
        (0, schema_1.assertOptions)({ apiKey }, ['apiKey']);
        this.api = new OpenAiAdapter.OpenAI({ apiKey });
    }
    static Adapter(apiKey) {
        return new this(apiKey);
    }
    async sendMessage(bot, options) {
        const messageBuilder = OpenAiMessageBuilder_1.default.Builder(bot);
        const messages = messageBuilder.buildMessages();
        // this.log.info(
        //     'Sending message to OpenAI',
        //     JSON.stringify(messages, null, 2)
        // )
        const response = await this.api.chat.completions.create({
            messages,
            model: options?.model ?? 'gpt-4o',
        });
        const message = response.choices?.[0]?.message?.content?.trim() ??
            exports.MESSAGE_RESPONSE_ERROR_MESSAGE;
        // this.log.info('Received response from OpenAI', message)
        return message;
    }
}
OpenAiAdapter.OpenAI = openai_1.default;
exports.default = OpenAiAdapter;
exports.MESSAGE_RESPONSE_ERROR_MESSAGE = "Oh no! Something went wrong and I can't talk right now!";
