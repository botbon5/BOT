"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const schema_1 = require("@sprucelabs/schema");
const SpruceError_1 = __importDefault(require("../errors/SpruceError"));
const SprucebotLlmBotImpl_1 = __importDefault(require("./SprucebotLlmBotImpl"));
const SprucebotLlmSkillImpl_1 = __importDefault(require("./SprucebotLlmSkillImpl"));
class SprucebotLlmFactory {
    constructor(adapter) {
        this.adapter = adapter;
    }
    Bot(options) {
        (0, schema_1.assertOptions)(options, ['youAre']);
        const { Class } = options;
        return new (Class ??
            SprucebotLlmFactory.BotClass ??
            SprucebotLlmBotImpl_1.default)({ ...options, adapter: this.adapter });
    }
    Skill(options) {
        (0, schema_1.assertOptions)(options, ['yourJobIfYouChooseToAcceptItIs']);
        return new (SprucebotLlmFactory.SkillClass ?? SprucebotLlmSkillImpl_1.default)({
            ...options,
        });
    }
    getBotInstance() {
        if (!this.instance) {
            throw new SpruceError_1.default({
                code: 'NO_BOT_INSTANCE_SET',
            });
        }
        return this.instance;
    }
    setBotInstance(bot) {
        this.instance = bot;
    }
    static Factory(adapter) {
        (0, schema_1.assertOptions)({ adapter }, ['adapter']);
        return new (this.FactoryClass ?? this)(adapter);
    }
    static reset() {
        this.BotClass = undefined;
        this.FactoryClass = undefined;
        this.SkillClass = undefined;
    }
}
exports.default = SprucebotLlmFactory;
