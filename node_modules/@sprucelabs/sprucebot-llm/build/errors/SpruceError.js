"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const error_1 = __importDefault(require("@sprucelabs/error"));
class SpruceError extends error_1.default {
    /** an easy to understand version of the errors */
    friendlyMessage() {
        const { options } = this;
        let message;
        switch (options?.code) {
            case 'NO_BOT_INSTANCE_SET':
                message = `You must create a bot and set it using 'SprucebotLlmFactory.setInstance(bot)' before you can get an instance of it.`;
                break;
            case 'INVALID_CALLBACK':
                message = `The callback you tried to invoke (${options.matchedCallback}) is not valid. Valid callbacks are:\n${options.validCallbacks.map((name, idx) => `${idx + 1}: ${name}`).join('\n')}`;
                break;
            case 'CALLBACK_ERROR':
                message = 'A Callback error just happened!';
                break;
            default:
                message = super.friendlyMessage();
        }
        const fullMessage = options.friendlyMessage
            ? options.friendlyMessage
            : message;
        return fullMessage;
    }
}
exports.default = SpruceError;
