import { default as SchemaEntity } from '@sprucelabs/schema';
import * as SpruceSchema from '@sprucelabs/schema';
export declare namespace SpruceErrors.SprucebotLlm {
    interface NoBotInstanceSet {
    }
    interface NoBotInstanceSetSchema extends SpruceSchema.Schema {
        id: 'noBotInstanceSet';
        namespace: 'SprucebotLlm';
        name: 'No bot instance set';
        fields: {};
    }
    type NoBotInstanceSetEntity = SchemaEntity<SpruceErrors.SprucebotLlm.NoBotInstanceSetSchema>;
}
export declare namespace SpruceErrors.SprucebotLlm {
    interface InvalidCallback {
        'validCallbacks': string[];
        'matchedCallback': string;
    }
    interface InvalidCallbackSchema extends SpruceSchema.Schema {
        id: 'invalidCallback';
        namespace: 'SprucebotLlm';
        name: 'Invalid callback';
        fields: {
            /** . */
            'validCallbacks': {
                type: 'text';
                isRequired: true;
                isArray: true;
                minArrayLength: 0;
                options: undefined;
            };
            /** . */
            'matchedCallback': {
                type: 'text';
                isRequired: true;
                options: undefined;
            };
        };
    }
    type InvalidCallbackEntity = SchemaEntity<SpruceErrors.SprucebotLlm.InvalidCallbackSchema>;
}
export declare namespace SpruceErrors.SprucebotLlm {
    interface CallbackError {
    }
    interface CallbackErrorSchema extends SpruceSchema.Schema {
        id: 'callbackError';
        namespace: 'SprucebotLlm';
        name: 'Callback error';
        fields: {};
    }
    type CallbackErrorEntity = SchemaEntity<SpruceErrors.SprucebotLlm.CallbackErrorSchema>;
}
