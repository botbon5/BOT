import { FieldError } from '../errors/options.types';
import { FieldTemplateDetailOptions, FieldTemplateDetails } from '../types/template.types';
import AbstractField from './AbstractField';
import { DateTimeFieldDefinition } from './DateTimeField.types';
import { ValidateOptions } from './field.static.types';
export default class DateTimeField extends AbstractField<DateTimeFieldDefinition> {
    static readonly description = "Date and time support.";
    static generateTemplateDetails(options: FieldTemplateDetailOptions<DateTimeFieldDefinition>): FieldTemplateDetails;
    validate(value: any, options?: ValidateOptions<DateTimeFieldDefinition>): FieldError[];
    toValueType(value: any): any;
}
