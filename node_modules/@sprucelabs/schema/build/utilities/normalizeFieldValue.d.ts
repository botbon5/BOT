import { Fields, FieldDefinitionMap } from './../.spruce/schemas/fields/fields.types';
import { FieldDefinitionValueType } from '../fields';
import { SchemasById } from '../fields/field.static.types';
import { SchemaNormalizeFieldValueOptions } from '../schemas.static.types';
export default function normalizeFieldValue<F extends Fields, CreateEntityInstances extends boolean>(schemaId: string, schemaName: string | undefined, schemasById: SchemasById, field: F, value: any, options: SchemaNormalizeFieldValueOptions<CreateEntityInstances> & Partial<FieldDefinitionMap[F['type']]['options']>): any;
export declare function normalizeValueToArray<F extends Fields, CreateEntityInstances extends boolean>(value: any): any[] | FieldDefinitionValueType<F, CreateEntityInstances>;
