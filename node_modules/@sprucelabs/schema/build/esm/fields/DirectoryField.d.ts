import { FieldTemplateDetailOptions, FieldTemplateDetails } from '../types/template.types';
import AbstractField from './AbstractField';
import { DirectoryFieldDefinition, DirectoryFieldValue } from './DirectoryField.types';
import { ToValueTypeOptions } from './field.static.types';
export default class DirectoryField extends AbstractField<DirectoryFieldDefinition> {
    static readonly description = "A way to select entire directories once!";
    static generateTemplateDetails(options: FieldTemplateDetailOptions<DirectoryFieldDefinition>): FieldTemplateDetails;
    toValueType<C extends boolean>(value: any, options?: ToValueTypeOptions<DirectoryFieldDefinition, C>): DirectoryFieldValue;
}
