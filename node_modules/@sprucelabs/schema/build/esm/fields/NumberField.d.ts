import { FieldError } from '../errors/options.types';
import { FieldTemplateDetailOptions, FieldTemplateDetails } from '../types/template.types';
import AbstractField from './AbstractField';
import { NumberFieldDefinition } from './NumberField.types';
export default class NumberField extends AbstractField<NumberFieldDefinition> {
    static readonly description = "Handles all types of numbers with min/max and clamp support";
    static generateTemplateDetails(options: FieldTemplateDetailOptions<NumberFieldDefinition>): FieldTemplateDetails;
    toValueType(value: any): number;
    private buildNaNError;
    validate(value: any, options: any): FieldError[];
    private isNumber;
}
