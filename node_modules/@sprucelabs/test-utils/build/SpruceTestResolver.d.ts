export default class SpruceTestResolver {
    static ActiveTestClass?: any;
    private static __activeTest;
    static resolveTestClass(target: any): any;
    static getActiveTest(): any;
    static reset(): void;
    static onWillCallBeforeAll(cb: TestLifecycleListener): void;
    static onDidCallBeforeAll(cb: TestLifecycleListener): void;
    static onWillCallBeforeEach(cb: TestLifecycleListener): void;
    static onDidCallBeforeEach(cb: TestLifecycleListener): void;
    static onWillCallAfterEach(cb: TestLifecycleListener): void;
    static onDidCallAfterEach(cb: TestLifecycleListener): void;
    static onWillCallAfterAll(cb: TestLifecycleListener): void;
    static onDidCallAfterAll(cb: TestLifecycleListener): void;
}
type TestLifecycleListener = (Test: any) => any | Promise<any>;
export declare class TestLifecycleListeners {
    static willBeforeAllListeners: TestLifecycleListener[];
    static didBeforeAllListeners: TestLifecycleListener[];
    static willBeforeEachListeners: TestLifecycleListener[];
    static didBeforeEachListeners: TestLifecycleListener[];
    static willAfterEachListeners: TestLifecycleListener[];
    static didAfterEachListeners: TestLifecycleListener[];
    static willAfterAllListeners: TestLifecycleListener[];
    static didAfterAllListeners: TestLifecycleListener[];
    static emitWillRunBeforeAll(): Promise<void>;
    static emitDidRunBeforeAll(): Promise<void>;
    static emitWillRunBeforeEach(): Promise<void>;
    static emitDidRunBeforeEach(): Promise<void>;
    static emitWillRunAfterEach(): Promise<void>;
    static emitDidRunAfterEach(): Promise<void>;
    static emitWillRunAfterAll(): Promise<void>;
    static emitDidRunAfterAll(): Promise<void>;
}
export {};
