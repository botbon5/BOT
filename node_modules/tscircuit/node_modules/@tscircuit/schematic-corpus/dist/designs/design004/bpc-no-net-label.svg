<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0.12295810448080197" data-y="-0.045204957975968095" cx="49.4120521122239" cy="272.0983433399903" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
gnd
unnamedsubcircuit83_connectivity_net3" data-x="0.722958104480802" data-y="-0.3452049579759681" cx="162.35667745891035" cy="328.5706560133335" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit83_connectivity_net1" data-x="0.722958104480802" data-y="-0.045204957975968095" cx="162.35667745891035" cy="272.0983433399903" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
vcc
unnamedsubcircuit83_connectivity_net2" data-x="0.722958104480802" data-y="0.25479504202403197" cx="162.35667745891035" cy="215.62603066664707" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="2.9975939099066515" data-y="-0.2360076117178601" cx="590.5364921988786" cy="308.0152337433762" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
vcc
unnamedsubcircuit83_connectivity_net2" data-x="2.997320559906651" data-y="0.2572566882821399" cx="590.4850365099809" cy="215.16264780938363" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
gnd
unnamedsubcircuit83_connectivity_net3" data-x="2.997867259906652" data-y="-0.7292719117178601" cx="590.5879478877762" cy="400.86781967736874" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="1.8047692924586682" data-y="-0.30531546479810595" cx="365.9979429956001" cy="321.0618162429288" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
normal
unnamedsubcircuit83_connectivity_net1" data-x="1.804496042458669" data-y="-0.8566061647981063" cx="365.94650613080694" cy="424.83735219061634" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6
vcc
unnamedsubcircuit83_connectivity_net2" data-x="1.8050425424586676" data-y="0.2459752352018943" cx="366.04937986039334" cy="217.28628029524123" r="3" fill="orange" />
  </g>
  <g>
    <polyline data-points="0.722958104480802,-0.3452049579759681 2.997867259906652,-0.7292719117178601" data-type="line" data-label="" points="162.35667745891035,328.5706560133335 590.5879478877762,400.86781967736874" fill="none" stroke="hsl(60, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.722958104480802,-0.045204957975968095 1.804496042458669,-0.8566061647981063" data-type="line" data-label="" points="162.35667745891035,272.0983433399903 365.94650613080694,424.83735219061634" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.722958104480802,0.25479504202403197 2.997320559906651,0.2572566882821399" data-type="line" data-label="" points="162.35667745891035,215.62603066664707 590.4850365099809,215.16264780938363" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.722958104480802,0.25479504202403197 1.8050425424586676,0.2459752352018943" data-type="line" data-label="" points="162.35667745891035,215.62603066664707 366.04937986039334,217.28628029524123" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="2.997320559906651,0.2572566882821399 1.8050425424586676,0.2459752352018943" data-type="line" data-label="" points="590.4850365099809,215.16264780938363 366.04937986039334,217.28628029524123" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.42295810448080196" data-y="-0.045204957975968074" x="40.000000000000014" y="206.21397855442322" width="131.7687295711342" height="131.76872957113417" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005312337777546161" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="2.9975939099066515" data-y="-0.2360076117178601" x="581.0729843977571" y="205.75059569715975" width="18.927015602242932" height="204.52927609243292" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005312337777546161" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="1.8047692924586682" data-y="-0.305315464798106" x="356.53445401858306" y="207.87422818301735" width="18.926977954034157" height="226.37517611982292" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005312337777546161" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 188.2410422444774,
        "c": 0,
        "e": 26.266290372352387,
        "b": 0,
        "d": -188.2410422444774,
        "f": 263.5889149359763
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>