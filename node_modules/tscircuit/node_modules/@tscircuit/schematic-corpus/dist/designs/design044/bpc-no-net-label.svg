<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="156.39186524933842" cy="320.0257019806181" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
vcc
unnamedsubcircuit1855_connectivity_net0" data-x="0.6000000000000001" data-y="1.2999999999999998" cx="280.824886591286" cy="50.42082240639854" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
vcc
unnamedsubcircuit1855_connectivity_net0" data-x="0.6000000000000001" data-y="0.10000000000000009" cx="280.824886591286" cy="299.28686509029353" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
gnd
unnamedsubcircuit1855_connectivity_net1" data-x="0.6000000000000001" data-y="-1.0999999999999999" cx="280.824886591286" cy="548.1529077741885" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
gnd
unnamedsubcircuit1855_connectivity_net1" data-x="0.6000000000000001" data-y="-1.2999999999999998" cx="280.824886591286" cy="589.6305815548377" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="1.5775213509843227" data-y="0.7490385632794502" cx="483.55144514002194" cy="164.68381609646224" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
gnd
unnamedsubcircuit1855_connectivity_net1" data-x="1.5777947009843223" data-y="0.19782926327944994" cx="483.6081347506616" cy="278.9982137477622" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
vcc
unnamedsubcircuit1855_connectivity_net0" data-x="1.577248000984323" data-y="1.3002478632794503" cx="483.4947555293823" cy="50.369418445162296" r="3" fill="orange" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,1.2999999999999998 0.6000000000000001,0.10000000000000009" data-type="line" data-label="" points="280.824886591286,50.42082240639854 280.824886591286,299.28686509029353" fill="none" stroke="hsl(90, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,1.2999999999999998 1.577248000984323,1.3002478632794503" data-type="line" data-label="" points="280.824886591286,50.42082240639854 483.4947555293823,50.369418445162296" fill="none" stroke="hsl(90, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,0.10000000000000009 1.577248000984323,1.3002478632794503" data-type="line" data-label="" points="280.824886591286,299.28686509029353 483.4947555293823,50.369418445162296" fill="none" stroke="hsl(90, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-1.0999999999999999 0.6000000000000001,-1.2999999999999998" data-type="line" data-label="" points="280.824886591286,548.1529077741885 280.824886591286,589.6305815548377" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-1.0999999999999999 1.5777947009843223,0.19782926327944994" data-type="line" data-label="" points="280.824886591286,548.1529077741885 483.6081347506616,278.9982137477622" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-1.2999999999999998 1.5777947009843223,0.19782926327944994" data-type="line" data-label="" points="280.824886591286,589.6305815548377 483.6081347506616,278.9982137477622" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="146.02244680417613" y="40.05140396123625" width="145.17185823227214" height="559.9485960387638" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.00482187118442759" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="1.5775213509843227" data-y="0.7490385632794501" x="473.12533708422" y="40" width="20.852216111603866" height="249.36763219292453" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.00482187118442759" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 207.38836890324586,
        "c": 0,
        "e": 156.39186524933842,
        "b": 0,
        "d": -207.38836890324586,
        "f": 320.0257019806181
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>