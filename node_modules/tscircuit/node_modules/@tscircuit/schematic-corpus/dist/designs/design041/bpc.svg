<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="212.40121441152925" cy="320" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
normal
unnamedsubcircuit1738_connectivity_net0" data-x="-0.5512907000000002" data-y="0.0002732499999993365" cx="113.53082465972777" cy="319.95099439551655" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit1738_connectivity_net1" data-x="0.5512907000000002" data-y="-0.0002732499999993365" cx="311.2716041633307" cy="320.04900560448345" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="1.2" data-y="0" cx="427.6133841473179" cy="320" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
normal
unnamedsubcircuit1738_connectivity_net1" data-x="0.6487906999999997" data-y="-0.00027334999999961695" cx="328.7575929543635" cy="320.049023538831" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
normal
unnamedsubcircuit1738_connectivity_net2" data-x="1.7512093000000002" data-y="0.00027334999999961695" cx="526.4691753402723" cy="319.950976461169" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_pin
normal
unnamedsubcircuit1738_connectivity_net0" data-x="-0.5512907000000002" data-y="0.0002732499999993365" cx="113.53082465972777" cy="319.95099439551655" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_center
netlabel_center
schematic_net_label_0_center" data-x="-0.9112907000000002" data-y="0.0002732499999993365" cx="48.96717373899119" cy="319.95099439551655" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_pin
normal
unnamedsubcircuit1738_connectivity_net2" data-x="1.7512093000000002" data-y="0.00027334999999961695" cx="526.4691753402723" cy="319.950976461169" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_center
netlabel_center
schematic_net_label_1_center" data-x="2.1112093" data-y="0.00027334999999961695" cx="591.0328262610088" cy="319.950976461169" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <polyline data-points="-0.5512907000000002,0.0002732499999993365 -0.5512907000000002,0.0002732499999993365" data-type="line" data-label="" points="113.53082465972777,319.95099439551655 113.53082465972777,319.95099439551655" fill="none" stroke="hsl(51.42857142857143, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.5512907000000002,-0.0002732499999993365 0.6487906999999997,-0.00027334999999961695" data-type="line" data-label="" points="311.2716041633307,320.04900560448345 328.7575929543635,320.049023538831" fill="none" stroke="hsl(102.85714285714286, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.7512093000000002,0.00027334999999961695 1.7512093000000002,0.00027334999999961695" data-type="line" data-label="" points="526.4691753402723,319.950976461169 526.4691753402723,319.950976461169" fill="none" stroke="hsl(205.71428571428572, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0" data-y="0" x="104.56365092073658" y="310.9838206565253" width="215.67512698158538" height="18.03235868694935" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005575892857142857" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="1.2" data-y="0" x="319.79041921537225" y="310.9838027221778" width="215.64592986389118" height="18.032394555644373" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005575892857142857" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_0" data-x="-0.7312907000000002" data-y="0.0002732499999993365" x="40" y="310.9838206565253" width="82.49799839871898" height="17.934347477982385" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005575892857142857" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_1" data-x="1.9312093000000001" data-y="0.00027334999999961695" x="517.5020016012811" y="310.9838027221778" width="82.49799839871889" height="17.934347477982385" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005575892857142857" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 179.34347477982385,
        "c": 0,
        "e": 212.40121441152925,
        "b": 0,
        "d": -179.34347477982385,
        "f": 320
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>