<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="144.91687358215253" cy="460.17325825215477" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
normal
unnamedsubcircuit285_connectivity_net0" data-x="0.6000000000000001" data-y="0.5" cx="297.45513730707466" cy="333.05803848138635" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit285_connectivity_net2" data-x="0.6000000000000001" data-y="0.30000000000000004" cx="297.45513730707466" cy="383.9041263896937" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
normal
unnamedsubcircuit285_connectivity_net3" data-x="0.6000000000000001" data-y="0.10000000000000009" cx="297.45513730707466" cy="434.7502142980011" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
normal
unnamedsubcircuit285_connectivity_net4" data-x="0.6000000000000001" data-y="-0.09999999999999998" cx="297.45513730707466" cy="485.59630220630845" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
vcc
unnamedsubcircuit285_connectivity_net1" data-x="0.6000000000000001" data-y="-0.3" cx="297.45513730707466" cy="536.4423901146158" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
vcc
unnamedsubcircuit285_connectivity_net1" data-x="0.6000000000000001" data-y="-0.5" cx="297.45513730707466" cy="587.2884780229232" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="1.37708444747778" data-y="1.0514353032664412" cx="495.0136579502429" cy="192.8663989532384" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6
normal
unnamedsubcircuit285_connectivity_net0" data-x="1.3768111974777806" data-y="0.5001446032664408" cx="494.9441894826383" cy="333.02127592939996" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_7
vcc
unnamedsubcircuit285_connectivity_net1" data-x="1.3773576974777793" data-y="1.6027260032664414" cx="495.08312641784744" cy="52.71152197707687" r="3" fill="orange" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,0.5 1.3768111974777806,0.5001446032664408" data-type="line" data-label="" points="297.45513730707466,333.05803848138635 494.9441894826383,333.02127592939996" fill="none" stroke="hsl(51.42857142857143, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.3 0.6000000000000001,-0.5" data-type="line" data-label="" points="297.45513730707466,536.4423901146158 297.45513730707466,587.2884780229232" fill="none" stroke="hsl(257.14285714285717, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.3 1.3773576974777793,1.6027260032664414" data-type="line" data-label="" points="297.45513730707466,536.4423901146158 495.08312641784744,52.71152197707687" fill="none" stroke="hsl(257.14285714285717, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.5 1.3773576974777793,1.6027260032664414" data-type="line" data-label="" points="297.45513730707466,587.2884780229232 495.08312641784744,52.71152197707687" fill="none" stroke="hsl(257.14285714285717, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="132.2053516050757" y="320.34651650430953" width="177.9613076790758" height="279.65348349569047" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.003933439291547217" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="1.37708444747778" data-y="1.0514353032664412" x="482.2326675055615" y="40" width="25.561980889362758" height="305.7327979064768" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.003933439291547217" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 254.23043954153678,
        "c": 0,
        "e": 144.91687358215253,
        "b": 0,
        "d": -254.23043954153678,
        "f": 460.17325825215477
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>