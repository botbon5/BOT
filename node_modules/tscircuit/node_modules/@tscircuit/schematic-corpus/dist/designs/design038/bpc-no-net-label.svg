<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="127.2007126459313" cy="343.83534312265806" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
vcc
unnamedsubcircuit1639_connectivity_net3" data-x="0.6000000000000001" data-y="0.45" cx="267.5090680091863" cy="238.60407660021684" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit1639_connectivity_net0" data-x="0.6000000000000001" data-y="0.14999999999999997" cx="267.5090680091863" cy="308.7582542818443" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
normal
unnamedsubcircuit1639_connectivity_net1" data-x="0.6000000000000001" data-y="-0.14999999999999997" cx="267.5090680091863" cy="378.9124319634718" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
gnd
unnamedsubcircuit1639_connectivity_net2" data-x="0.6000000000000001" data-y="-0.45" cx="267.5090680091863" cy="449.0666096450993" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="1.2903698145600535" data-y="0.6979990351096542" cx="428.95015679811365" cy="180.6101820203673" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
normal
unnamedsubcircuit1639_connectivity_net0" data-x="1.2900965645600542" data-y="0.14670833510965386" cx="428.8862580346088" cy="309.5280010937967" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
vcc
unnamedsubcircuit1639_connectivity_net3" data-x="1.2906430645600528" data-y="1.2492897351096546" cx="429.01405556161853" cy="51.69236294693792" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="1.6488712810168582" data-y="-0.5996349901814374" cx="512.7847420545627" cy="484.05834194035646" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6
gnd
unnamedsubcircuit1639_connectivity_net2" data-x="1.648809081016858" data-y="-1.0454357901814375" cx="512.7701967550566" cy="588.3076370530621" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_7
normal
unnamedsubcircuit1639_connectivity_net1" data-x="1.6489334810168583" data-y="-0.1538341901814374" cx="512.7992873540687" cy="379.80904682765083" r="3" fill="blue" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,0.45 1.2906430645600528,1.2492897351096546" data-type="line" data-label="" points="267.5090680091863,238.60407660021684 429.01405556161853,51.69236294693792" fill="none" stroke="hsl(51.42857142857143, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,0.14999999999999997 1.2900965645600542,0.14670833510965386" data-type="line" data-label="" points="267.5090680091863,308.7582542818443 428.8862580346088,309.5280010937967" fill="none" stroke="hsl(102.85714285714286, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.14999999999999997 1.6489334810168583,-0.1538341901814374" data-type="line" data-label="" points="267.5090680091863,378.9124319634718 512.7992873540687,379.80904682765083" fill="none" stroke="hsl(154.28571428571428, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.45 1.648809081016858,-1.0454357901814375" data-type="line" data-label="" points="267.5090680091863,449.0666096450993 512.7701967550566,588.3076370530621" fill="none" stroke="hsl(205.71428571428572, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="115.50834969899338" y="226.91171365327892" width="163.69308125713084" height="233.84725893875827" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.00427629558087695" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="1.2903698145600535" data-y="0.6979990351096542" x="417.19389508767085" y="40" width="23.5125234208856" height="281.22036404073464" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.00427629558087695" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="1.6488712810168582" data-y="-0.5996349901814375" x="501.0778338081187" y="368.1166838807129" width="23.413816492887918" height="231.8833161192871" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.00427629558087695" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 233.8472589387583,
        "c": 0,
        "e": 127.2007126459313,
        "b": 0,
        "d": -233.8472589387583,
        "f": 343.83534312265806
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>