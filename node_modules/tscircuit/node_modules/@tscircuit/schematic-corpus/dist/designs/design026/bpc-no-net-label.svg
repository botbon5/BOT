<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0.5" data-y="0.147" cx="50.77807185614486" cy="222.61745161199642" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
not_connected
disconnected-0" data-x="1.1" data-y="-0.05300000000000002" cx="180.11493412988298" cy="265.7297390365758" r="3" fill="rgba(0, 0, 0, 0.2)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
vcc
unnamedsubcircuit1031_connectivity_net1" data-x="1.1" data-y="0.24700000000000003" cx="180.11493412988298" cy="201.06130789970672" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="2.9975939099066515" data-y="-0.30531546479810595" cx="589.1630044250176" cy="320.1192232367872" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
gnd
unnamedsubcircuit1031_connectivity_net2" data-x="2.997867259906652" data-y="-0.7985797647981059" cx="589.2219281438552" cy="426.4479846262069" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
vcc
unnamedsubcircuit1031_connectivity_net1" data-x="2.997320559906651" data-y="0.18794883520189404" cx="589.10408070618" cy="213.79046184736748" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="1.8047692924586682" data-y="-0.30531546479810595" cx="332.0360156523607" cy="320.1192232367872" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
gnd
unnamedsubcircuit1031_connectivity_net2" data-x="1.8050426424586679" data-y="-0.8565247647981062" cx="332.09493937119817" cy="438.9386921002932" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
vcc
unnamedsubcircuit1031_connectivity_net1" data-x="1.8044959424586686" data-y="0.24589383520189428" cx="331.97709193352324" cy="201.29975437328116" r="3" fill="orange" />
  </g>
  <g>
    <polyline data-points="1.1,0.24700000000000003 2.997320559906651,0.18794883520189404" data-type="line" data-label="" points="180.11493412988298,201.06130789970672 589.10408070618,213.79046184736748" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.1,0.24700000000000003 1.8044959424586686,0.24589383520189428" data-type="line" data-label="" points="180.11493412988298,201.06130789970672 331.97709193352324,201.29975437328116" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="2.997320559906651,0.18794883520189404 1.8044959424586686,0.24589383520189428" data-type="line" data-label="" points="589.10408070618,213.79046184736748 331.97709193352324,201.29975437328116" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="2.997867259906652,-0.7985797647981059 1.8050426424586679,-0.8565247647981062" data-type="line" data-label="" points="589.2219281438552,426.4479846262069 332.09493937119817,438.9386921002932" fill="none" stroke="hsl(240, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.8" data-y="0.097" x="40.00000000000003" y="190.28323604356189" width="150.89300598602782" height="86.22457484915873" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004639048678404735" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="2.9975939099066515" data-y="-0.3053154647981059" x="578.3260088500351" y="203.01238999122262" width="21.673991149964877" height="234.21366649112912" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004639048678404735" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="1.8047692924586682" data-y="-0.305315464798106" x="321.19902007737835" y="190.52168251713633" width="21.67399114996465" height="259.1950814393017" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004639048678404735" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 215.56143712289685,
        "c": 0,
        "e": -57.00264670530356,
        "b": 0,
        "d": -215.56143712289685,
        "f": 254.30498286906226
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>