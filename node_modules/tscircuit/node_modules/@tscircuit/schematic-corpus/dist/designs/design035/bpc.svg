<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="182.7450980392157" cy="322.7450980392157" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
vcc
unnamedsubcircuit1508_connectivity_net2" data-x="0.6000000000000001" data-y="0.45" cx="347.4509803921569" cy="199.2156862745098" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
vcc
unnamedsubcircuit1508_connectivity_net2" data-x="0.6000000000000001" data-y="0.14999999999999997" cx="347.4509803921569" cy="281.5686274509804" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
vcc
unnamedsubcircuit1508_connectivity_net0" data-x="0.6000000000000001" data-y="-0.14999999999999997" cx="347.4509803921569" cy="363.921568627451" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
vcc
unnamedsubcircuit1508_connectivity_net0" data-x="0.6000000000000001" data-y="-0.45" cx="347.4509803921569" cy="446.27450980392155" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_pin
gnd
unnamedsubcircuit1508_connectivity_net0" data-x="1" data-y="-0.78" cx="457.2549019607843" cy="536.8627450980392" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_center
netlabel_center
schematic_net_label_0_center" data-x="1" data-y="-0.96" cx="457.2549019607843" cy="586.2745098039215" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_pin
vcc
unnamedsubcircuit1508_connectivity_net2" data-x="1" data-y="0.8" cx="457.2549019607843" cy="103.13725490196077" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_center
netlabel_center
schematic_net_label_1_center" data-x="1" data-y="0.98" cx="457.2549019607843" cy="53.725490196078454" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,0.45 0.6000000000000001,0.14999999999999997" data-type="line" data-label="" points="347.4509803921569,199.2156862745098 347.4509803921569,281.5686274509804" fill="none" stroke="hsl(72, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,0.45 1,0.8" data-type="line" data-label="" points="347.4509803921569,199.2156862745098 457.2549019607843,103.13725490196077" fill="none" stroke="hsl(72, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,0.14999999999999997 1,0.8" data-type="line" data-label="" points="347.4509803921569,281.5686274509804 457.2549019607843,103.13725490196077" fill="none" stroke="hsl(72, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.14999999999999997 0.6000000000000001,-0.45" data-type="line" data-label="" points="347.4509803921569,363.921568627451 347.4509803921569,446.27450980392155" fill="none" stroke="hsl(144, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.14999999999999997 1,-0.78" data-type="line" data-label="" points="347.4509803921569,363.921568627451 457.2549019607843,536.8627450980392" fill="none" stroke="hsl(144, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6000000000000001,-0.45 1,-0.78" data-type="line" data-label="" points="347.4509803921569,446.27450980392155 457.2549019607843,536.8627450980392" fill="none" stroke="hsl(144, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="169.01960784313727" y="185.49019607843138" width="192.1568627450981" height="274.5098039215686" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.003642857142857143" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_0" data-x="1" data-y="-0.87" x="443.52941176470586" y="523.1372549019608" width="27.450980392156907" height="76.86274509803923" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.003642857142857143" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_1" data-x="1" data-y="0.89" x="443.52941176470586" y="40" width="27.450980392156907" height="76.86274509803923" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.003642857142857143" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 274.5098039215686,
        "c": 0,
        "e": 182.7450980392157,
        "b": 0,
        "d": -274.5098039215686,
        "f": 322.7450980392157
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>