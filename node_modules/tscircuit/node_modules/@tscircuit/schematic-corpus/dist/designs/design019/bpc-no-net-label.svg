<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="265.80645161290323" cy="320" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
normal
unnamedsubcircuit719_connectivity_net12" data-x="0.6000000000000001" data-y="-1.5000000000000002" cx="374.19354838709677" cy="590.9677419354839" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit719_connectivity_net11" data-x="0.6000000000000001" data-y="-1.3000000000000003" cx="374.19354838709677" cy="554.8387096774194" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
normal
unnamedsubcircuit719_connectivity_net10" data-x="0.6000000000000001" data-y="-1.1" cx="374.19354838709677" cy="518.7096774193549" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
normal
unnamedsubcircuit719_connectivity_net9" data-x="0.6000000000000001" data-y="-0.9000000000000001" cx="374.19354838709677" cy="482.58064516129036" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
normal
unnamedsubcircuit719_connectivity_net8" data-x="0.6000000000000001" data-y="-0.7000000000000002" cx="374.19354838709677" cy="446.45161290322585" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
normal
unnamedsubcircuit719_connectivity_net7" data-x="0.6000000000000001" data-y="-0.5000000000000002" cx="374.19354838709677" cy="410.32258064516134" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6
normal
unnamedsubcircuit719_connectivity_net6" data-x="0.6000000000000001" data-y="-0.30000000000000027" cx="374.19354838709677" cy="374.1935483870968" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_7
not_connected
disconnected-0" data-x="0.6000000000000001" data-y="-0.10000000000000031" cx="374.19354838709677" cy="338.0645161290323" r="3" fill="rgba(0, 0, 0, 0.2)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_8
normal
unnamedsubcircuit719_connectivity_net4" data-x="0.6000000000000001" data-y="0.09999999999999964" cx="374.19354838709677" cy="301.9354838709678" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_9
normal
unnamedsubcircuit719_connectivity_net5" data-x="0.6000000000000001" data-y="0.2999999999999996" cx="374.19354838709677" cy="265.8064516129033" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_10
normal
unnamedsubcircuit719_connectivity_net13" data-x="0.6000000000000001" data-y="0.49999999999999956" cx="374.19354838709677" cy="229.6774193548388" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_11
normal
unnamedsubcircuit719_connectivity_net3" data-x="0.6000000000000001" data-y="0.6999999999999995" cx="374.19354838709677" cy="193.5483870967743" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_12
gnd
unnamedsubcircuit719_connectivity_net1" data-x="0.6000000000000001" data-y="0.8999999999999997" cx="374.19354838709677" cy="157.41935483870975" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_13
not_connected
disconnected-1" data-x="0.6000000000000001" data-y="1.0999999999999999" cx="374.19354838709677" cy="121.29032258064521" r="3" fill="rgba(0, 0, 0, 0.2)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_14
vcc
unnamedsubcircuit719_connectivity_net0" data-x="0.6000000000000001" data-y="1.3" cx="374.19354838709677" cy="85.16129032258067" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_15
normal
unnamedsubcircuit719_connectivity_net2" data-x="0.6000000000000001" data-y="1.5000000000000002" cx="374.19354838709677" cy="49.0322580645161" r="3" fill="blue" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="256.77419354838713" y="40" width="126.4516129032258" height="560" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005535714285714286" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 180.64516129032256,
        "c": 0,
        "e": 265.80645161290323,
        "b": 0,
        "d": -180.64516129032256,
        "f": 320
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>