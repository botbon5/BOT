// src/grid.ts
function grid({
  rows,
  cols,
  xSpacing,
  ySpacing,
  width,
  height,
  offsetX = 0,
  offsetY = 0,
  yDirection = "cartesian",
  centered = true
}) {
  const effectiveXSpacing = xSpacing ?? 1;
  const effectiveYSpacing = ySpacing ?? 1;
  const totalWidth = width ?? cols * effectiveXSpacing;
  const totalHeight = height ?? rows * effectiveYSpacing;
  const centeringOffsetX = centered ? -totalWidth / 2 : 0;
  const centeringOffsetY = centered ? -totalHeight / 2 : 0;
  const cellWidth = width ? width / cols : effectiveXSpacing;
  const cellHeight = height ? height / rows : effectiveYSpacing;
  const cells = [];
  for (let row = 0; row < rows; row++) {
    for (let col = 0; col < cols; col++) {
      const index = row * cols + col;
      const centerX = offsetX + centeringOffsetX + col * cellWidth + cellWidth / 2;
      const rawCenterY = offsetY + row * cellHeight + cellHeight / 2;
      const centerY = yDirection === "cartesian" ? offsetY + centeringOffsetY + (rows - 1 - row) * cellHeight + cellHeight / 2 : offsetY + centeringOffsetY + row * cellHeight + cellHeight / 2;
      cells.push({
        index,
        center: { x: centerX, y: centerY },
        topLeft: {
          x: centerX - cellWidth / 2,
          y: centerY + cellHeight / 2
        },
        bottomRight: {
          x: centerX + cellWidth / 2,
          y: centerY - cellHeight / 2
        },
        row,
        col
      });
    }
  }
  return cells;
}

export {
  grid
};
//# sourceMappingURL=chunk-U45EKA3R.js.map