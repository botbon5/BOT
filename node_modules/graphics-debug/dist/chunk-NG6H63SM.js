// lib/getGraphicsObjectsFromLogString.ts
function getGraphicsObjectsFromLogString(logString) {
  const results = [];
  const graphicsRegex = /(?:\{[\s]*(?:"graphics"|graphics)[\s]*:[\s]*\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\}[\s]*\})|(?::graphics\s+\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})/g;
  const matches = logString.match(graphicsRegex);
  if (!matches) return results;
  for (const match of matches) {
    try {
      const jsonPart = match.includes(":graphics") ? match.substring(match.indexOf("{")) : match;
      const parsed = JSON.parse(jsonPart);
      if (parsed.graphics) {
        results.push(parsed.graphics);
      } else {
        results.push(parsed);
      }
    } catch (e) {
      try {
        const fixed = match.replace(/(\b\w+)(?=\s*:)/g, '"$1"').replace(/,(\s*[}\]])/g, "$1").replace(/:\s*'([^']*)'/g, ':"$1"');
        const parsed = JSON.parse(fixed);
        if (parsed.graphics) {
          results.push(parsed.graphics);
        } else {
          results.push(parsed);
        }
      } catch (e2) {
        console.warn("Failed to parse graphics object:", match, e2);
      }
    }
  }
  return results;
}

export {
  getGraphicsObjectsFromLogString
};
//# sourceMappingURL=chunk-NG6H63SM.js.map