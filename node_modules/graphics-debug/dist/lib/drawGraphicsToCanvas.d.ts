import { Matrix } from 'transformation-matrix';
import { Viewbox, CenterViewbox, GraphicsObject, TransformOptions } from './types.js';

/**
 * Computes a transformation matrix based on a provided viewbox
 * Handles both min/max style viewboxes and center/width/height style viewboxes
 */
declare function computeTransformFromViewbox(viewbox: Viewbox | CenterViewbox, canvasWidth: number, canvasHeight: number, options?: {
    padding?: number;
    yFlip?: boolean;
}): Matrix;
/**
 * Computes bounds for a graphics object
 */
declare function getBounds(graphics: GraphicsObject): Viewbox;
/**
 * Draws a graphics object onto a canvas or context
 * @param graphics - The graphics object to draw
 * @param target - The canvas element or 2D context to draw on
 * @param options - Options for controlling the transform and rendering
 */
declare function drawGraphicsToCanvas(graphics: GraphicsObject, target: HTMLCanvasElement | CanvasRenderingContext2D, options?: TransformOptions): void;

export { computeTransformFromViewbox, drawGraphicsToCanvas, getBounds };
