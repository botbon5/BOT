import * as react from 'react';
import { Matrix } from 'transformation-matrix';

type Point = {
    x: number;
    y: number;
};
interface Props {
    canvasElm?: HTMLElement;
    transform?: Matrix;
    initialTransform?: Matrix;
    onSetTransform?: (transform: Matrix) => any;
    enabled?: boolean;
    shouldDrag?: (e: MouseEvent | TouchEvent | WheelEvent) => boolean;
}
declare const useMouseMatrixTransform: (props?: Props) => {
    ref: react.MutableRefObject<any>;
    transform: Matrix;
    applyTransformToPoint: (obj: Point | [number, number]) => PointObjectNotation | PointArrayNotation;
    setTransform: (newTransform: Matrix) => void;
    cancelDrag: () => void;
};

export { useMouseMatrixTransform as default, useMouseMatrixTransform };
