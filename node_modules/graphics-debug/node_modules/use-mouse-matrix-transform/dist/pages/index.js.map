{"version":3,"sources":["../../src/pages/index.tsx"],"sourcesContent":["\"use client\"\n// Example Usage\nimport React, { useState } from \"react\"\nimport { useMouseMatrixTransform } from \"../index\"\nexport default () => {\n  const { ref, applyTransformToPoint, transform, cancelDrag } =\n    useMouseMatrixTransform()\n  const [offCenter, setOffCenter] = useState(false)\n\n  // console.log(transform)\n\n  const gridSize = 10\n  const spacing = 50\n  const squareSize = 25\n\n  const gridElements = []\n  for (let row = 0; row < gridSize; row++) {\n    for (let col = 0; col < gridSize; col++) {\n      const originalX = 100 + col * spacing\n      const originalY = 100 + row * spacing\n      const { x: left, y: top } = applyTransformToPoint({\n        x: originalX,\n        y: originalY,\n      }) as any\n      const currentSize = squareSize * transform.d\n\n      gridElements.push(\n        <div\n          key={`${row}-${col}`}\n          style={{\n            position: \"absolute\",\n            left,\n            top,\n            width: currentSize,\n            height: currentSize,\n            backgroundColor: `hsl(${(row * 360) / gridSize}, 70%, 60%)`,\n            border: `${1 * transform.d}px solid black`, // Scale border too\n            boxSizing: \"border-box\",\n          }}\n        />,\n      )\n    }\n  }\n\n  // Calculate position for the cancelDrag button based on one of the grid points\n  const { x: cancelLeft, y: cancelTop } = applyTransformToPoint({\n    x: 100 + (gridSize - 1) * spacing + 100, // Position relative to the grid\n    y: 100,\n  }) as any\n\n  return (\n    <div style={{ height: 2000 }}>\n      <div\n        ref={ref}\n        style={{\n          marginTop: offCenter ? 400 : 0,\n          marginLeft: offCenter ? 400 : 0,\n          position: \"relative\",\n          backgroundColor: \"#eee\",\n          height: 600,\n          width: 600,\n          overflow: \"hidden\",\n          border: \"1px solid #ccc\", // Add border to visualize canvas area\n        }}\n      >\n        {gridElements}\n        <div\n          style={{\n            position: \"absolute\",\n            left: cancelLeft,\n            top: cancelTop,\n            padding: `${8 * transform.d}px`, // Scale padding\n            fontSize: `${12 * transform.d}px`, // Scale font size\n            color: \"white\",\n            cursor: \"pointer\",\n            backgroundColor: \"blue\",\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\", // Prevent text wrapping when scaled down\n          }}\n          onMouseDown={(e) => {\n            // Prevent triggering drag on the canvas when clicking the button\n            e.stopPropagation()\n            cancelDrag()\n          }}\n          onTouchStart={(e) => {\n            // Prevent triggering touch events on the canvas\n            e.stopPropagation()\n          }}\n        >\n          cancelDrag\n        </div>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={offCenter} // Use checked for controlled component\n          onChange={() => setOffCenter(!offCenter)} // Use onChange\n        />{\" \"}\n        off\n        center\n      </div>\n      <div style={{ marginTop: 20 }}>Try dragging the canvas above around</div>\n    </div>\n  )\n}\n"],"mappings":";;;;;;AAEA,SAAgB,gBAAgB;AAFhC;AAIA,IAAO,gBAAQ,MAAM;AACnB,QAAM,EAAE,KAAK,uBAAuB,WAAW,WAAW,IACxD,wBAAwB;AAC1B,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,KAAK;AAIhD,QAAM,WAAW;AACjB,QAAM,UAAU;AAChB,QAAM,aAAa;AAEnB,QAAM,eAAe,CAAC;AACtB,WAAS,MAAM,GAAG,MAAM,UAAU,OAAO;AACvC,aAAS,MAAM,GAAG,MAAM,UAAU,OAAO;AACvC,YAAM,YAAY,MAAM,MAAM;AAC9B,YAAM,YAAY,MAAM,MAAM;AAC9B,YAAM,EAAE,GAAG,MAAM,GAAG,IAAI,IAAI,sBAAsB;AAAA,QAChD,GAAG;AAAA,QACH,GAAG;AAAA,MACL,CAAC;AACD,YAAM,cAAc,aAAa,UAAU;AAE3C,mBAAa;AAAA,QACX,CAAC;AAAA,UACC,KAAK,GAAG,OAAO;AAAA,UACf,OAAO;AAAA,YACL,UAAU;AAAA,YACV;AAAA,YACA;AAAA,YACA,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,iBAAiB,OAAQ,MAAM,MAAO;AAAA,YACtC,QAAQ,GAAG,IAAI,UAAU;AAAA,YACzB,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,QAAM,EAAE,GAAG,YAAY,GAAG,UAAU,IAAI,sBAAsB;AAAA,IAC5D,GAAG,OAAO,WAAW,KAAK,UAAU;AAAA,IACpC,GAAG;AAAA,EACL,CAAC;AAED,SACE,CAAC,IAAI,OAAO,EAAE,QAAQ,IAAK;AAAA,IACzB,CAAC;AAAA,MACC,KAAK;AAAA,MACL,OAAO;AAAA,QACL,WAAW,YAAY,MAAM;AAAA,QAC7B,YAAY,YAAY,MAAM;AAAA,QAC9B,UAAU;AAAA,QACV,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA,QACV,QAAQ;AAAA,MACV;AAAA;AAAA,OAEC;AAAA,MACD,CAAC;AAAA,QACC,OAAO;AAAA,UACL,UAAU;AAAA,UACV,MAAM;AAAA,UACN,KAAK;AAAA,UACL,SAAS,GAAG,IAAI,UAAU;AAAA,UAC1B,UAAU,GAAG,KAAK,UAAU;AAAA,UAC5B,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,iBAAiB;AAAA,UACjB,YAAY;AAAA,UACZ,YAAY;AAAA,QACd;AAAA,QACA,aAAa,CAAC,MAAM;AAElB,YAAE,gBAAgB;AAClB,qBAAW;AAAA,QACb;AAAA,QACA,cAAc,CAAC,MAAM;AAEnB,YAAE,gBAAgB;AAAA,QACpB;AAAA,OACD,UAED,EAxBC;AAAA,IAyBH,EAvCC;AAAA,IAwCD,CAAC;AAAA,MACC,CAAC;AAAA,QACC,KAAK;AAAA,QACL,SAAS;AAAA,QACT,UAAU,MAAM,aAAa,CAAC,SAAS;AAAA,MACzC;AAAA,OAAG;AAAA,OAAI;AAAA,IAGT,EARC;AAAA,IASD,CAAC,IAAI,OAAO,EAAE,WAAW,GAAG,GAAG,oCAAoC,EAAlE;AAAA,EACH,EAnDC;AAqDL;","names":[]}