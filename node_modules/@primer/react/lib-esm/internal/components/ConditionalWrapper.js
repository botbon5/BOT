import { c } from 'react-compiler-runtime';
import Box from '../../Box/Box.js';
import { jsx, Fragment } from 'react/jsx-runtime';

const ConditionalWrapper = props => {
  const $ = c(8);
  let condition;
  let rest;
  if ($[0] !== props) {
    ({
      if: condition,
      ...rest
    } = props);
    $[0] = props;
    $[1] = condition;
    $[2] = rest;
  } else {
    condition = $[1];
    rest = $[2];
  }
  if (condition) {
    let t0;
    if ($[3] !== props.children || $[4] !== rest) {
      t0 = /*#__PURE__*/jsx(Box, {
        ...rest,
        children: props.children
      });
      $[3] = props.children;
      $[4] = rest;
      $[5] = t0;
    } else {
      t0 = $[5];
    }
    return t0;
  } else {
    let t0;
    if ($[6] !== props.children) {
      t0 = /*#__PURE__*/jsx(Fragment, {
        children: props.children
      });
      $[6] = props.children;
      $[7] = t0;
    } else {
      t0 = $[7];
    }
    return t0;
  }
};

export { ConditionalWrapper };
