'use strict';

var reactCompilerRuntime = require('react-compiler-runtime');
var React = require('react');
var ButtonGroup_module = require('./ButtonGroup.module.css.js');
var clsx = require('clsx');
var useFocusZone = require('../hooks/useFocusZone.js');
var BoxWithFallback = require('../internal/components/BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');
var useProvidedRefOrCreate = require('../hooks/useProvidedRefOrCreate.js');
var behaviors = require('@primer/behaviors');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

const ButtonGroup = /*#__PURE__*/React__default.default.forwardRef(function ButtonGroup(t0, forwardRef) {
  const $ = reactCompilerRuntime.c(18);
  let children;
  let className;
  let rest;
  let role;
  if ($[0] !== t0) {
    ({
      children,
      className,
      role,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = rest;
    $[4] = role;
  } else {
    children = $[1];
    className = $[2];
    rest = $[3];
    role = $[4];
  }
  let t1;
  if ($[5] !== children) {
    t1 = React__default.default.Children.map(children, _temp);
    $[5] = children;
    $[6] = t1;
  } else {
    t1 = $[6];
  }
  const buttons = t1;
  const buttonRef = useProvidedRefOrCreate.useProvidedRefOrCreate(forwardRef);
  const t2 = role !== "toolbar";
  let t3;
  if ($[7] !== buttonRef || $[8] !== t2) {
    t3 = {
      containerRef: buttonRef,
      disabled: t2,
      bindKeys: behaviors.FocusKeys.ArrowHorizontal,
      focusOutBehavior: "wrap"
    };
    $[7] = buttonRef;
    $[8] = t2;
    $[9] = t3;
  } else {
    t3 = $[9];
  }
  useFocusZone.useFocusZone(t3);
  let t4;
  if ($[10] !== className) {
    t4 = clsx.clsx(className, ButtonGroup_module.ButtonGroup);
    $[10] = className;
    $[11] = t4;
  } else {
    t4 = $[11];
  }
  let t5;
  if ($[12] !== buttonRef || $[13] !== buttons || $[14] !== rest || $[15] !== role || $[16] !== t4) {
    t5 = /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
      ref: buttonRef,
      className: t4,
      role: role,
      ...rest,
      children: buttons
    });
    $[12] = buttonRef;
    $[13] = buttons;
    $[14] = rest;
    $[15] = role;
    $[16] = t4;
    $[17] = t5;
  } else {
    t5 = $[17];
  }
  return t5;
});
ButtonGroup.displayName = 'ButtonGroup';
function _temp(child, index) {
  return /*#__PURE__*/jsxRuntime.jsx("div", {
    children: child
  }, index);
}
_temp.displayName = "_temp";

module.exports = ButtonGroup;
