'use strict';

var reactCompilerRuntime = require('react-compiler-runtime');
var React = require('react');
var clsx = require('clsx');
var BranchName_module = require('./BranchName.module.css.js');
var BoxWithFallback = require('../internal/components/BoxWithFallback.js');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function BranchName(props, ref) {
  const $ = reactCompilerRuntime.c(13);
  let children;
  let className;
  let rest;
  let t0;
  if ($[0] !== props) {
    ({
      as: t0,
      className,
      children,
      ...rest
    } = props);
    $[0] = props;
    $[1] = children;
    $[2] = className;
    $[3] = rest;
    $[4] = t0;
  } else {
    children = $[1];
    className = $[2];
    rest = $[3];
    t0 = $[4];
  }
  const Component = t0 === undefined ? "a" : t0;
  let t1;
  if ($[5] !== className) {
    t1 = clsx.clsx(className, BranchName_module.BranchName);
    $[5] = className;
    $[6] = t1;
  } else {
    t1 = $[6];
  }
  let t2;
  if ($[7] !== Component || $[8] !== children || $[9] !== ref || $[10] !== rest || $[11] !== t1) {
    t2 = /*#__PURE__*/jsxRuntime.jsx(BoxWithFallback.BoxWithFallback, {
      as: Component,
      ...rest,
      ref: ref,
      className: t1,
      children: children
    });
    $[7] = Component;
    $[8] = children;
    $[9] = ref;
    $[10] = rest;
    $[11] = t1;
    $[12] = t2;
  } else {
    t2 = $[12];
  }
  return t2;
}

// eslint-disable-next-line @typescript-eslint/no-empty-object-type

const fixedForwardRef = React__default.default.forwardRef;

// eslint-disable-next-line @typescript-eslint/no-explicit-any

BranchName.displayName = 'BranchName';
var BranchName$1 = fixedForwardRef(BranchName);

module.exports = BranchName$1;
