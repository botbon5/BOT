// lib/components/ui/tabs.tsx
import * as React from "react";
import * as TabsPrimitive from "@radix-ui/react-tabs";

// lib/utils/index.ts
import { clsx } from "clsx";
import { twMerge } from "tailwind-merge";

// lib/utils/posthog.ts
import posthog from "posthog-js";
if (!window.location.hostname.includes("localhost") && !window.location.hostname.includes("127.0.0.1")) {
  if (!posthog.__loaded) {
    posthog.init("phc_htd8AQjSfVEsFCLQMAiUooG4Q0DKBCjqYuQglc9V3Wo", {
      api_host: "https://postpig.tscircuit.com",
      person_profiles: "always"
    });
  }
}

// lib/utils/index.ts
function cn(...inputs) {
  return twMerge(clsx(inputs));
}
var capitalizeFirstLetters = (str) => {
  return str.replace(/_/g, " ").replace(/\b\w/g, (char) => char.toUpperCase());
};

// lib/components/ui/tabs.tsx
import { jsx } from "react/jsx-runtime";
var Tabs = TabsPrimitive.Root;
var TabsList = React.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx(
  TabsPrimitive.List,
  {
    ref,
    className: cn(
      "rf-inline-flex rf-h-9 rf-items-center rf-justify-center rf-rounded-lg rf-bg-zinc-100 rf-p-1 rf-text-zinc-500 dark:rf-bg-zinc-800 dark:rf-text-zinc-400",
      className
    ),
    ...props
  }
));
TabsList.displayName = TabsPrimitive.List.displayName;
var TabsTrigger = React.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx(
  TabsPrimitive.Trigger,
  {
    ref,
    className: cn(
      "rf-inline-flex rf-items-center rf-justify-center rf-whitespace-nowrap rf-rounded-md rf-px-3 rf-py-1 rf-text-sm rf-font-medium rf-ring-offset-white rf-transition-all focus-visible:rf-outline-none focus-visible:rf-ring-2 focus-visible:rf-ring-zinc-950 focus-visible:rf-ring-offset-2 disabled:rf-pointer-events-none disabled:rf-opacity-50 data-[state=active]:rf-bg-white data-[state=active]:rf-text-zinc-950 data-[state=active]:rf-shadow dark:rf-ring-offset-zinc-950 dark:focus-visible:rf-ring-zinc-300 dark:data-[state=active]:rf-bg-zinc-950 dark:data-[state=active]:rf-text-zinc-50",
      className
    ),
    ...props
  }
));
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName;
var TabsContent = React.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx(
  TabsPrimitive.Content,
  {
    ref,
    className: cn(
      "rf-h-full rf-mt-2 rf-ring-offset-white focus-visible:rf-outline-none focus-visible:rf-ring-2 focus-visible:rf-ring-zinc-950 focus-visible:rf-ring-offset-2 dark:rf-ring-offset-zinc-950 dark:focus-visible:rf-ring-zinc-300",
      className
    ),
    ...props
  }
));
TabsContent.displayName = TabsPrimitive.Content.displayName;

// lib/components/CircuitJsonPreview/CircuitJsonPreview.tsx
import { CadViewer } from "@tscircuit/3d-viewer";
import { useCallback, useEffect as useEffect4, useState as useState5, useMemo as useMemo2 } from "react";

// lib/components/ErrorFallback.tsx
import "react";
import { jsx as jsx2, jsxs } from "react/jsx-runtime";
var ErrorFallback = ({ error }) => {
  return /* @__PURE__ */ jsx2(
    "div",
    {
      "data-testid": "error-container",
      className: "rf-error-container rf-mt-4 rf-bg-red-50 rf-rounded-md rf-border rf-border-red-200",
      children: /* @__PURE__ */ jsxs("div", { className: "rf-p-4", children: [
        /* @__PURE__ */ jsx2("h2", { className: "rf-text-lg rf-font-semibold rf-text-red-800 rf-mb-3", children: "Error Loading 3D Viewer" }),
        /* @__PURE__ */ jsx2("p", { className: "rf-text-xs rf-font-mono rf-whitespace-pre-wrap rf-text-red-700", children: error.message }),
        /* @__PURE__ */ jsx2(
          "details",
          {
            style: { whiteSpace: "pre-wrap" },
            className: "rf-text-xs rf-font-mono rf-text-red-600 rf-mt-2",
            children: error.stack
          }
        )
      ] })
    }
  );
};

// lib/components/CircuitJsonPreview/CircuitJsonPreview.tsx
import { ErrorBoundary } from "react-error-boundary";

// lib/components/ErrorTabContent/ErrorTabContent.tsx
import { GitHubLogoIcon } from "@radix-ui/react-icons";
import { ClipboardIcon, ChevronLeft, ChevronRight as ChevronRight2 } from "lucide-react";

// lib/components/ui/button.tsx
import * as React3 from "react";
import { Slot } from "@radix-ui/react-slot";
import { cva } from "class-variance-authority";
import { jsx as jsx3 } from "react/jsx-runtime";
var buttonVariants = cva(
  "rf-inline-flex rf-items-center rf-justify-center rf-gap-2 rf-whitespace-nowrap rf-rounded-md rf-text-sm rf-font-medium rf-transition-colors focus-visible:rf-outline-none focus-visible:rf-ring-1 focus-visible:rf-ring-zinc-950 disabled:rf-pointer-events-none disabled:rf-opacity-50 [&_svg]:rf-pointer-events-none [&_svg]:rf-size-4 [&_svg]:rf-shrink-0 dark:focus-visible:rf-ring-zinc-300",
  {
    variants: {
      variant: {
        default: "rf-bg-zinc-900 rf-text-zinc-50 rf-shadow hover:rf-bg-zinc-900/90 dark:rf-bg-zinc-50 dark:rf-text-zinc-900 dark:hover:rf-bg-zinc-50/90",
        destructive: "rf-bg-red-500 rf-text-zinc-50 rf-shadow-sm hover:rf-bg-red-500/90 dark:rf-bg-red-900 dark:rf-text-zinc-50 dark:hover:rf-bg-red-900/90",
        outline: "rf-border rf-border-zinc-200 rf-bg-white rf-shadow-sm hover:rf-bg-zinc-100 hover:rf-text-zinc-900 dark:rf-border-zinc-800 dark:rf-bg-zinc-950 dark:hover:rf-bg-zinc-800 dark:hover:rf-text-zinc-50",
        secondary: "rf-bg-zinc-100 rf-text-zinc-900 rf-shadow-sm hover:rf-bg-zinc-100/80 dark:rf-bg-zinc-800 dark:rf-text-zinc-50 dark:hover:rf-bg-zinc-800/80",
        ghost: "hover:rf-bg-zinc-100 hover:rf-text-zinc-900 dark:hover:rf-bg-zinc-800 dark:hover:rf-text-zinc-50",
        link: "rf-text-zinc-900 rf-underline-offset-4 hover:rf-underline dark:rf-text-zinc-50"
      },
      size: {
        default: "rf-h-9 rf-px-4 rf-py-2",
        sm: "rf-h-8 rf-rounded-md rf-px-3 rf-text-xs",
        lg: "rf-h-10 rf-rounded-md rf-px-8",
        icon: "rf-h-9 rf-w-9"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
);
var Button = React3.forwardRef(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button";
    return /* @__PURE__ */ jsx3(
      Comp,
      {
        className: cn(buttonVariants({ variant, size, className })),
        ref,
        ...props
      }
    );
  }
);
Button.displayName = "Button";

// lib/components/ErrorTabContent/ErrorTabContent.tsx
import { createSnippetUrl } from "@tscircuit/create-snippet-url";

// lib/components/ErrorTabContent/AutoroutingLogOptions.tsx
import { CircuitBoardIcon, DownloadIcon, UploadIcon } from "lucide-react";

// lib/components/ui/dropdown-menu.tsx
import * as React4 from "react";
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu";
import { Check, ChevronRight, Circle } from "lucide-react";
import { jsx as jsx4, jsxs as jsxs2 } from "react/jsx-runtime";
var DropdownMenu = DropdownMenuPrimitive.Root;
var DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;
var DropdownMenuPortal = DropdownMenuPrimitive.Portal;
var DropdownMenuSub = DropdownMenuPrimitive.Sub;
var DropdownMenuSubTrigger = React4.forwardRef(({ className, inset, children, ...props }, ref) => /* @__PURE__ */ jsxs2(
  DropdownMenuPrimitive.SubTrigger,
  {
    ref,
    className: cn(
      "rf-flex rf-cursor-default rf-gap-2 rf-select-none rf-items-center rf-rounded-sm rf-px-2 rf-py-1.5 rf-text-sm rf-outline-none focus:rf-bg-zinc-100 data-[state=open]:rf-bg-zinc-100 [&_svg]:rf-pointer-events-none [&_svg]:rf-size-4 [&_svg]:rf-shrink-0 dark:focus:rf-bg-zinc-800 dark:data-[state=open]:rf-bg-zinc-800",
      inset && "rf-pl-8",
      className
    ),
    ...props,
    children: [
      children,
      /* @__PURE__ */ jsx4(ChevronRight, { className: "rf-ml-auto" })
    ]
  }
));
DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;
var DropdownMenuSubContent = React4.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx4(
  DropdownMenuPrimitive.SubContent,
  {
    ref,
    className: cn(
      "rf-z-50 rf-min-w-[8rem] rf-overflow-hidden rf-rounded-md rf-border rf-border-zinc-200 rf-bg-white rf-p-1 rf-text-zinc-950 rf-shadow-lg data-[state=open]:rf-animate-in data-[state=closed]:rf-animate-out data-[state=closed]:rf-fade-out-0 data-[state=open]:rf-fade-in-0 data-[state=closed]:rf-zoom-out-95 data-[state=open]:rf-zoom-in-95 data-[side=bottom]:rf-slide-in-from-top-2 data-[side=left]:rf-slide-in-from-right-2 data-[side=right]:rf-slide-in-from-left-2 data-[side=top]:rf-slide-in-from-bottom-2 dark:rf-border-zinc-800 dark:rf-bg-zinc-950 dark:rf-text-zinc-50",
      className
    ),
    ...props
  }
));
DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;
var DropdownMenuContent = React4.forwardRef(({ className, sideOffset = 4, ...props }, ref) => /* @__PURE__ */ jsx4(DropdownMenuPrimitive.Portal, { children: /* @__PURE__ */ jsx4(
  DropdownMenuPrimitive.Content,
  {
    ref,
    sideOffset,
    className: cn(
      "rf-z-50 rf-min-w-[8rem] rf-overflow-hidden rf-rounded-md rf-border rf-border-zinc-200 rf-bg-white rf-p-1 rf-text-zinc-950 rf-shadow-md dark:rf-border-zinc-800 dark:rf-bg-zinc-950 dark:rf-text-zinc-50",
      "data-[state=open]:rf-animate-in data-[state=closed]:rf-animate-out data-[state=closed]:rf-fade-out-0 data-[state=open]:rf-fade-in-0 data-[state=closed]:rf-zoom-out-95 data-[state=open]:rf-zoom-in-95 data-[side=bottom]:rf-slide-in-from-top-2 data-[side=left]:rf-slide-in-from-right-2 data-[side=right]:rf-slide-in-from-left-2 data-[side=top]:rf-slide-in-from-bottom-2",
      className
    ),
    ...props
  }
) }));
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;
var DropdownMenuItem = React4.forwardRef(({ className, inset, ...props }, ref) => /* @__PURE__ */ jsx4(
  DropdownMenuPrimitive.Item,
  {
    ref,
    className: cn(
      "rf-relative rf-flex rf-cursor-default rf-select-none rf-items-center rf-gap-2 rf-rounded-sm rf-px-2 rf-py-1.5 rf-text-sm rf-outline-none rf-transition-colors focus:rf-bg-zinc-100 focus:rf-text-zinc-900 data-[disabled]:rf-pointer-events-none data-[disabled]:rf-opacity-50 [&>svg]:rf-size-4 [&>svg]:rf-shrink-0 dark:focus:rf-bg-zinc-800 dark:focus:rf-text-zinc-50",
      inset && "rf-pl-8",
      className
    ),
    ...props
  }
));
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;
var DropdownMenuCheckboxItem = React4.forwardRef(({ className, children, checked, ...props }, ref) => /* @__PURE__ */ jsxs2(
  DropdownMenuPrimitive.CheckboxItem,
  {
    ref,
    className: cn(
      "rf-relative rf-flex rf-cursor-default rf-select-none rf-items-center rf-rounded-sm rf-py-1.5 rf-pl-8 rf-pr-2 rf-text-sm rf-outline-none rf-transition-colors focus:rf-bg-zinc-100 focus:rf-text-zinc-900 data-[disabled]:rf-pointer-events-none data-[disabled]:rf-opacity-50 dark:focus:rf-bg-zinc-800 dark:focus:rf-text-zinc-50",
      className
    ),
    checked,
    ...props,
    children: [
      /* @__PURE__ */ jsx4("span", { className: "rf-absolute rf-left-2 rf-flex rf-h-3.5 rf-w-3.5 rf-items-center rf-justify-center", children: /* @__PURE__ */ jsx4(DropdownMenuPrimitive.ItemIndicator, { children: /* @__PURE__ */ jsx4(Check, { className: "rf-h-4 rf-w-4" }) }) }),
      children
    ]
  }
));
DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;
var DropdownMenuRadioItem = React4.forwardRef(({ className, children, ...props }, ref) => /* @__PURE__ */ jsxs2(
  DropdownMenuPrimitive.RadioItem,
  {
    ref,
    className: cn(
      "rf-relative rf-flex rf-cursor-default rf-select-none rf-items-center rf-rounded-sm rf-py-1.5 rf-pl-8 rf-pr-2 rf-text-sm rf-outline-none rf-transition-colors focus:rf-bg-zinc-100 focus:rf-text-zinc-900 data-[disabled]:rf-pointer-events-none data-[disabled]:rf-opacity-50 dark:focus:rf-bg-zinc-800 dark:focus:rf-text-zinc-50",
      className
    ),
    ...props,
    children: [
      /* @__PURE__ */ jsx4("span", { className: "rf-absolute rf-left-2 rf-flex rf-h-3.5 rf-w-3.5 rf-items-center rf-justify-center", children: /* @__PURE__ */ jsx4(DropdownMenuPrimitive.ItemIndicator, { children: /* @__PURE__ */ jsx4(Circle, { className: "rf-h-2 rf-w-2 rf-fill-current" }) }) }),
      children
    ]
  }
));
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;
var DropdownMenuLabel = React4.forwardRef(({ className, inset, ...props }, ref) => /* @__PURE__ */ jsx4(
  DropdownMenuPrimitive.Label,
  {
    ref,
    className: cn(
      "rf-px-2 rf-py-1.5 rf-text-sm rf-font-semibold",
      inset && "rf-pl-8",
      className
    ),
    ...props
  }
));
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;
var DropdownMenuSeparator = React4.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx4(
  DropdownMenuPrimitive.Separator,
  {
    ref,
    className: cn(
      "rf--mx-1 rf-my-1 rf-h-px rf-bg-zinc-100 dark:rf-bg-zinc-800",
      className
    ),
    ...props
  }
));
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;
var DropdownMenuShortcut = ({
  className,
  ...props
}) => {
  return /* @__PURE__ */ jsx4(
    "span",
    {
      className: cn(
        "rf-ml-auto rf-text-xs rf-tracking-widest rf-opacity-60",
        className
      ),
      ...props
    }
  );
};
DropdownMenuShortcut.displayName = "DropdownMenuShortcut";

// lib/components/ErrorTabContent/AutoroutingLogOptions.tsx
import { Fragment, jsx as jsx5, jsxs as jsxs3 } from "react/jsx-runtime";
var AutoroutingLogOptions = ({
  autoroutingLog,
  onReportAutoroutingLog
}) => /* @__PURE__ */ jsx5(Fragment, { children: Object.keys(autoroutingLog ?? {}).length > 0 && /* @__PURE__ */ jsxs3(DropdownMenu, { children: [
  /* @__PURE__ */ jsx5(DropdownMenuTrigger, { asChild: true, children: /* @__PURE__ */ jsxs3(Button, { variant: "outline", children: [
    /* @__PURE__ */ jsx5(CircuitBoardIcon, { className: "rf-w-4 rf-h-4 rf-mr-2" }),
    "Open Autorouting Log"
  ] }) }),
  /* @__PURE__ */ jsx5(DropdownMenuContent, { className: "rf-w-96", children: Object.entries(autoroutingLog ?? {}).map(
    ([key, { simpleRouteJson }]) => /* @__PURE__ */ jsxs3(
      DropdownMenuItem,
      {
        className: "rf-flex rf-justify-between rf-items-center",
        children: [
          /* @__PURE__ */ jsx5("span", { className: "rf-truncate rf-text-xs rf-mr-2", children: key }),
          /* @__PURE__ */ jsxs3("div", { className: "rf-flex rf-gap-2", children: [
            /* @__PURE__ */ jsxs3(
              Button,
              {
                variant: "outline",
                size: "sm",
                onClick: (e) => {
                  e.stopPropagation();
                  const blob = new Blob(
                    [JSON.stringify(simpleRouteJson, null, 2)],
                    { type: "application/json" }
                  );
                  const url = URL.createObjectURL(blob);
                  const a = document.createElement("a");
                  a.href = url;
                  a.download = `${key}-autorouting.json`;
                  a.click();
                  URL.revokeObjectURL(url);
                },
                children: [
                  /* @__PURE__ */ jsx5(DownloadIcon, { className: "rf-w-3 rf-h-3" }),
                  "Download"
                ]
              }
            ),
            onReportAutoroutingLog && /* @__PURE__ */ jsxs3(
              Button,
              {
                variant: "outline",
                size: "sm",
                onClick: (e) => {
                  e.stopPropagation();
                  if (onReportAutoroutingLog) {
                    onReportAutoroutingLog(key, { simpleRouteJson });
                  }
                },
                children: [
                  /* @__PURE__ */ jsx5(UploadIcon, { className: "rf-w-3 rf-h-3" }),
                  "Report Bug"
                ]
              }
            )
          ] })
        ]
      },
      key
    )
  ) })
] }) });

// lib/components/ErrorTabContent/ErrorTabContent.tsx
import { useState, useMemo } from "react";
import { Fragment as Fragment2, jsx as jsx6, jsxs as jsxs4 } from "react/jsx-runtime";
var ErrorTabContent = ({
  code,
  autoroutingLog,
  circuitJsonErrors,
  circuitJsonWarnings,
  onReportAutoroutingLog,
  errorMessage,
  errorStack,
  circuitJson,
  evalVersion
}) => {
  const unifiedErrors = useMemo(() => {
    const errors = [];
    if (errorMessage) {
      errors.push({
        type: "Execution Error",
        message: errorMessage,
        stack: errorStack || void 0,
        source: "execution"
      });
    }
    if (circuitJsonErrors && circuitJsonErrors.length > 0) {
      for (const error of circuitJsonErrors) {
        errors.push({
          type: error.type || "Circuit JSON Error",
          message: error.message || "No error message available",
          stack: error.stack || "",
          source: "circuitJson"
        });
      }
    }
    return errors;
  }, [errorMessage, errorStack, circuitJsonErrors]);
  const softwareUsedString = useMemo(() => {
    if (!circuitJson || !Array.isArray(circuitJson)) return void 0;
    const metadata = circuitJson.find(
      (el) => el.type === "source_project_metadata"
    );
    return metadata?.software_used_string;
  }, [circuitJson]);
  const unifiedWarnings = useMemo(() => {
    const warnings = [];
    if (circuitJsonWarnings && circuitJsonWarnings.length > 0) {
      for (const warning of circuitJsonWarnings) {
        warnings.push({
          type: warning.type || "Circuit JSON Warning",
          message: warning.message || "No warning message available",
          stack: warning.stack || "",
          source: "circuitJson"
        });
      }
    }
    return warnings;
  }, [circuitJsonWarnings]);
  const [currentErrorIndex, setCurrentErrorIndex] = useState(0);
  const [currentWarningIndex, setCurrentWarningIndex] = useState(0);
  if (unifiedErrors.length === 0 && unifiedWarnings.length === 0) {
    return /* @__PURE__ */ jsxs4("div", { className: "px-2", children: [
      /* @__PURE__ */ jsx6("div", { className: "rf-mt-4 rf-bg-green-50 rf-rounded-md rf-border rf-border-green-200", children: /* @__PURE__ */ jsxs4("div", { className: "rf-p-4", children: [
        /* @__PURE__ */ jsx6("h3", { className: "rf-text-lg rf-font-semibold rf-text-green-800 rf-mb-3", children: "No errors or warnings!" }),
        /* @__PURE__ */ jsx6("p", { className: "rf-text-sm rf-text-green-700", children: "Your code is running without any errors or warnings." })
      ] }) }),
      /* @__PURE__ */ jsx6("div", { className: "rf-mt-4", children: /* @__PURE__ */ jsx6(
        AutoroutingLogOptions,
        {
          autoroutingLog,
          onReportAutoroutingLog
        }
      ) })
    ] });
  }
  const handlePrevError = () => {
    setCurrentErrorIndex((prev) => Math.max(prev - 1, 0));
  };
  const handleNextError = () => {
    setCurrentErrorIndex((prev) => Math.min(prev + 1, unifiedErrors.length - 1));
  };
  const handlePrevWarning = () => {
    setCurrentWarningIndex((prev) => Math.max(prev - 1, 0));
  };
  const handleNextWarning = () => {
    setCurrentWarningIndex(
      (prev) => Math.min(prev + 1, unifiedWarnings.length - 1)
    );
  };
  const currentError = unifiedErrors[currentErrorIndex];
  const currentWarning = unifiedWarnings[currentWarningIndex];
  return /* @__PURE__ */ jsxs4(Fragment2, { children: [
    /* @__PURE__ */ jsxs4("div", { className: "rf-w-[95%] rf-mx-auto", children: [
      unifiedErrors.length > 1 && /* @__PURE__ */ jsxs4("div", { className: "rf-flex rf-items-center rf-gap-2 rf-mb-2", children: [
        /* @__PURE__ */ jsx6(
          "button",
          {
            type: "button",
            className: "rf-p-1 rf-rounded-sm rf-transition-colors",
            onClick: handlePrevError,
            disabled: currentErrorIndex === 0,
            children: /* @__PURE__ */ jsx6(ChevronLeft, { className: "rf-h-4 rf-w-4 rf-text-red-500" })
          }
        ),
        /* @__PURE__ */ jsx6(
          "button",
          {
            type: "button",
            className: "rf-p-1 rf-rounded-sm rf-transition-colors",
            onClick: handleNextError,
            disabled: currentErrorIndex === unifiedErrors.length - 1,
            children: /* @__PURE__ */ jsx6(ChevronRight2, { className: "rf-h-4 rf-w-4 rf-text-red-500" })
          }
        ),
        /* @__PURE__ */ jsxs4("span", { className: "rf-text-sm rf-text-red-600", children: [
          currentErrorIndex + 1,
          " of ",
          unifiedErrors.length,
          " errors"
        ] })
      ] }),
      currentError && /* @__PURE__ */ jsx6("div", { className: "rf-mt-4 rf-bg-red-50 rf-rounded-md rf-border rf-border-red-200 rf-max-h-[500px] rf-overflow-y-auto rf-px-2", children: /* @__PURE__ */ jsxs4("div", { className: "rf-p-4", children: [
        /* @__PURE__ */ jsx6("h3", { className: "rf-text-lg rf-font-semibold rf-text-red-800 rf-mb-1", children: currentError.type }),
        /* @__PURE__ */ jsx6("p", { className: "rf-text-xs rf-font-mono rf-whitespace-pre-wrap rf-text-red-600", children: currentError.message }),
        (currentError.stack || evalVersion || softwareUsedString) && /* @__PURE__ */ jsxs4(
          "details",
          {
            style: { whiteSpace: "pre-wrap" },
            className: "rf-text-xs rf-font-mono rf-text-red-600 rf-mt-2",
            children: [
              evalVersion && `@tscircuit/eval@${evalVersion}
`,
              softwareUsedString && `${softwareUsedString}
`,
              currentError.stack
            ]
          }
        )
      ] }) }),
      unifiedWarnings.length > 0 && /* @__PURE__ */ jsxs4(Fragment2, { children: [
        unifiedWarnings.length > 1 && /* @__PURE__ */ jsxs4("div", { className: "rf-flex rf-items-center rf-gap-2 rf-mb-2 rf-mt-4", children: [
          /* @__PURE__ */ jsx6(
            "button",
            {
              type: "button",
              className: "rf-p-1 rf-rounded-sm rf-transition-colors",
              onClick: handlePrevWarning,
              disabled: currentWarningIndex === 0,
              children: /* @__PURE__ */ jsx6(ChevronLeft, { className: "rf-h-4 rf-w-4 rf-text-orange-500" })
            }
          ),
          /* @__PURE__ */ jsx6(
            "button",
            {
              type: "button",
              className: "rf-p-1 rf-rounded-sm rf-transition-colors",
              onClick: handleNextWarning,
              disabled: currentWarningIndex === unifiedWarnings.length - 1,
              children: /* @__PURE__ */ jsx6(ChevronRight2, { className: "rf-h-4 rf-w-4 rf-text-orange-500" })
            }
          ),
          /* @__PURE__ */ jsxs4("span", { className: "rf-text-sm rf-text-orange-600", children: [
            currentWarningIndex + 1,
            " of ",
            unifiedWarnings.length,
            " warnings"
          ] })
        ] }),
        currentWarning && /* @__PURE__ */ jsx6("div", { className: "rf-mt-4 rf-bg-orange-50 rf-rounded-md rf-border rf-border-orange-200 rf-max-h-[500px] rf-overflow-y-auto rf-px-2", children: /* @__PURE__ */ jsxs4("div", { className: "rf-p-4", children: [
          /* @__PURE__ */ jsx6("h3", { className: "rf-text-lg rf-font-semibold rf-text-orange-800 rf-mb-1", children: currentWarning.type }),
          /* @__PURE__ */ jsx6("p", { className: "rf-text-xs rf-font-mono rf-whitespace-pre-wrap rf-text-orange-600", children: currentWarning.message }),
          currentWarning.stack && /* @__PURE__ */ jsx6(
            "details",
            {
              style: { whiteSpace: "pre-wrap" },
              className: "rf-text-xs rf-font-mono rf-text-orange-600 rf-mt-2",
              children: currentWarning.stack
            }
          )
        ] }) })
      ] })
    ] }),
    /* @__PURE__ */ jsxs4("div", { className: "rf-flex rf-gap-2 rf-mt-4 rf-justify-end", children: [
      /* @__PURE__ */ jsx6(
        AutoroutingLogOptions,
        {
          autoroutingLog,
          onReportAutoroutingLog
        }
      ),
      /* @__PURE__ */ jsxs4(
        Button,
        {
          variant: "outline",
          className: "rf-p-1",
          onClick: () => {
            let errorText = `${currentError.type}: ${currentError.message}`;
            if (evalVersion) errorText += `
@tscircuit/eval@${evalVersion}`;
            if (softwareUsedString) errorText += `
${softwareUsedString}`;
            if (currentError.stack) errorText += `
${currentError.stack}`;
            navigator.clipboard.writeText(errorText);
            alert("Error copied to clipboard!");
          },
          children: [
            /* @__PURE__ */ jsx6(ClipboardIcon, { className: "rf-w-4 rf-h-4" }),
            "Copy Error"
          ]
        }
      ),
      /* @__PURE__ */ jsxs4(
        Button,
        {
          variant: "outline",
          className: "rf-p-1",
          onClick: () => {
            const title = `Error ${currentError.type}`.replace(/[^a-zA-Z0-9 ]/g, " ").replace(/\s+/g, " ").slice(0, 100);
            const url = createSnippetUrl(code ?? "");
            let errorDetails = `${currentError.type}: ${currentError.message}`;
            if (evalVersion) errorDetails += `
@tscircuit/eval@${evalVersion}`;
            if (softwareUsedString) errorDetails += `
${softwareUsedString}`;
            if (currentError.stack) errorDetails += `
${currentError.stack}`;
            let body = `[Package code to reproduce](${url})

### Error
\`\`\`
${errorDetails}
\`\`\`
`;
            if (url.length > 3e3 || body.length > 4e3) {
              const truncatedMessage = currentError.message.length > 500 ? `${currentError.message.slice(0, 500)}...` : currentError.message;
              body = `### Error
\`\`\`
${currentError.type}: ${truncatedMessage}
\`\`\``;
            }
            const issueUrl = `https://github.com/tscircuit/tscircuit.com/issues/new?title=${encodeURIComponent(title)}&body=${encodeURIComponent(body)}`;
            window.open(issueUrl, "_blank");
          },
          children: [
            /* @__PURE__ */ jsx6(GitHubLogoIcon, { className: "rf-w-4 rf-h-4" }),
            "Report Issue"
          ]
        }
      )
    ] })
  ] });
};

// lib/components/CircuitJsonPreview/CircuitJsonPreview.tsx
import { SchematicViewer } from "@tscircuit/schematic-viewer";
import { AssemblyViewer } from "@tscircuit/assembly-viewer";

// lib/utils/getRandomTipForUser.ts
var tips = [
  "Initialize a tscircuit project using [tsci init](https://github.com/tscircuit/cli) before adding components.",
  "Define reusable modules with cached routes using [<subcircuit />](https://docs.tscircuit.com/elements/subcircuit)",
  "Run `tsci dev` on the command line to preview your boards before export",
  'Use units like mm or mils consistently across your designs (e.g. pcbX="10mm")',
  "Quickly set footprints with the [footprint prop](https://docs.tscircuit.com/footprints/footprinter-strings)",
  "Check out the guide on [ordering prototypes](https://docs.tscircuit.com/building-electronics/ordering-prototypes)",
  "Use [net labels](https://docs.tscircuit.com/elements/net) and [group elements](https://docs.tscircuit.com/elements/group) to organize complex schematics.",
  "You can manually drag components on the PCB and Schematic using [manual edits](https://docs.tscircuit.com/guides/manual-edits)",
  "Every tscircuit module can export to [Circuit JSON](https://github.com/tscircuit/circuit-json), Gerbers, Pick'n'Place CSV files, Bill of Materials CSV and more",
  "You can import components from [JLCPCB](https://docs.tscircuit.com/guides/importing-modules-and-chips/importing-from-jlcpcb) or [KiCad](https://docs.tscircuit.com/guides/importing-modules-and-chips/importing-from-kicad)",
  "Any module you push to the [registry](https://tscircuit.com/trending) will have [simple image urls](https://docs.tscircuit.com/web-apis/image-generation-api) you can use display images on a website",
  "The default [Parts Engine](https://docs.tscircuit.com/guides/platform-configuration) will automatically find parts from common vendors for your BOM",
  '[Pin selectors](https://docs.tscircuit.com/guides/using-sel-references) are similar to CSS selectors, ".R1 > .pin1" means "connect to the first pin of the component R1"',
  "You can use the [sel](https://docs.tscircuit.com/guides/using-sel-references) object to select pins in a type-safe way",
  "Publish modules via the [registry](https://tscircuit.com/trending) for working with a team or sharing your work",
  "[Explore tutorials](https://docs.tscircuit.com/category/tutorials) for real-world circuit design examples.",
  "Upload your Circuit JSON to [circuitjson.com](https://circuitjson.com) for a quick preview.",
  "You can display Circuit JSON in 3D, PCB or Schematic mode with the [<CircuitJsonPreview />](https://docs.tscircuit.com/elements/circuitjsonpreview) React component",
  "Use a [<group />](https://docs.tscircuit.com/elements/group) element to move multiple components at once in a schematic or PCB layout.",
  "Check out the [GitHub Discussions page](https://github.com/tscircuit/tscircuit/discussions) to upvote features",
  "You can customize the autorouter using the [autorouter prop](https://docs.tscircuit.com/elements/board#setting-the-autorouter)",
  "Use the [<constraint />](https://docs.tscircuit.com/footprints/constraint) element to enforce geometric relationships in PCB designs.",
  "Join the [Discord server](https://tscircuit.com/join) to discuss issues and get help directly from the community."
];
var getRandomTipForUser = () => {
  let tip = tips[Math.floor(Math.random() * tips.length)];
  tip = tip.replace(/</g, "&lt;");
  tip = tip.replace(/>/g, "&gt;");
  tip = tip.replace(
    /(?<!href=")(?<!\()(?<!\]\()(https?:\/\/[^\s\)\]]+)/g,
    (match, p1) => `<a class="rf-text-blue-500 rf-underline"  href="${match}" target="_blank">${match}</a>`
  );
  tip = tip.replace(
    /\[([^\]]+)\]\((https?:\/\/[^\)]+)\)/g,
    '<a class="rf-text-blue-500 rf-underline" href="$2" target="_blank">$1</a>'
  );
  return tip;
};

// lib/components/PreviewEmptyState.tsx
import { LightbulbIcon, PlayIcon } from "lucide-react";
import { jsx as jsx7, jsxs as jsxs5 } from "react/jsx-runtime";
var tipHtml = getRandomTipForUser();
var PreviewEmptyState = ({ onRunClicked }) => {
  return /* @__PURE__ */ jsxs5("div", { className: "rf-flex rf-flex-col rf-items-center rf-justify-center rf-h-full rf-bg-gray-50 rf-text-gray-500 rf-p-4", children: [
    /* @__PURE__ */ jsx7(LightbulbIcon, { className: "rf-size-14 rf-mb-4" }),
    /* @__PURE__ */ jsxs5("p", { className: "rf-text-md rf-break-words rf-max-w-xl rf-text-center", children: [
      "Tip: ",
      /* @__PURE__ */ jsx7("span", { dangerouslySetInnerHTML: { __html: tipHtml } })
    ] }),
    onRunClicked && /* @__PURE__ */ jsxs5(
      Button,
      {
        className: "rf-mt-4 rf-bg-blue-600 rf-hover:bg-blue-500",
        onClick: onRunClicked,
        children: [
          "Run Code",
          /* @__PURE__ */ jsx7(PlayIcon, { className: "rf-w-3 rf-h-3 rf-ml-2" })
        ]
      }
    )
  ] });
};
var PreviewEmptyState_default = PreviewEmptyState;

// lib/components/CircuitJsonTableViewer/CircuitJsonTableViewer.tsx
import { useReducer, useState as useState2 } from "react";

// lib/components/CircuitJsonTableViewer/ClickableText.tsx
import { jsx as jsx8 } from "react/jsx-runtime";
var ClickableText = ({
  text,
  onClick
}) => {
  return /* @__PURE__ */ jsx8(
    "span",
    {
      className: "rf-cursor-pointer rf-underline rf-text-blue-600 rf-mx-2",
      onClick,
      children: text
    }
  );
};

// lib/components/CircuitJsonTableViewer/HeaderCell.tsx
import { jsx as jsx9, jsxs as jsxs6 } from "react/jsx-runtime";
var HeaderCell = (p) => {
  return /* @__PURE__ */ jsxs6("div", { className: "rf-leading-5", children: [
    /* @__PURE__ */ jsx9("div", { className: "rf-py-2 rf-font-bold", children: p.column.name }),
    /* @__PURE__ */ jsx9("div", { children: p.field?.() ?? /* @__PURE__ */ jsx9(
      "input",
      {
        type: "text",
        className: "rf-border rf-rounded rf-p-1 rf-w-full",
        onChange: (e) => {
          p.onTextChange?.(e.target.value);
        }
      }
    ) })
  ] });
};

// lib/components/CircuitJsonTableViewer/Modal.tsx
import { jsx as jsx10, jsxs as jsxs7 } from "react/jsx-runtime";
var Modal = ({ open, children, title, onClose }) => {
  if (!open) return null;
  return /* @__PURE__ */ jsx10(
    "div",
    {
      className: "rf-fixed rf-inset-0 rf-bg-black rf-bg-opacity-50 rf-flex rf-justify-center rf-items-center rf-z-50",
      onClick: onClose,
      children: /* @__PURE__ */ jsxs7(
        "div",
        {
          className: "rf-bg-white rf-p-5 rf-rounded-lg rf-relative rf-w-11/12 rf-max-w-2xl",
          onClick: (e) => {
            e.preventDefault();
            e.stopPropagation();
          },
          children: [
            /* @__PURE__ */ jsx10("h2", { className: "rf-mt-0 rf-text-md rf-pb-4", children: title }),
            /* @__PURE__ */ jsx10(
              "button",
              {
                type: "button",
                className: "rf-absolute rf-top-2 rf-right-4 rf-text-2xl rf-font-bold",
                onClick: onClose,
                children: "\xD7"
              }
            ),
            children
          ]
        }
      )
    }
  );
};
var Modal_default = Modal;

// lib/components/CircuitJsonTableViewer/CircuitJsonTableViewer.tsx
import { jsx as jsx11, jsxs as jsxs8 } from "react/jsx-runtime";
var CircuitJsonTableViewer = ({
  elements
}) => {
  const [modal, setModal] = useState2({ open: false });
  const [filters, setFilter] = useReducer(
    (s, a) => ({
      ...s,
      ...a
    }),
    {}
  );
  const element_types = [...new Set(elements.map((e) => e.type))];
  const elements2 = elements.map((e) => {
    const primary_id = e[`${e.type}_id`];
    const other_ids = Object.fromEntries(
      Object.entries(e).filter(([k]) => {
        if (k === `${e.type}_id`) return false;
        if (!k.endsWith("_id")) return false;
        return true;
      })
    );
    const other_props = Object.fromEntries(
      Object.entries(e).filter(([k]) => !k.endsWith("_id"))
    );
    return {
      primary_id,
      other_ids,
      ...other_props,
      _og_elm: e
    };
  });
  const elements3 = elements2.map((e) => {
    let selector_path = "";
    const getSelectorPath = (e2) => {
      const parent_key = Object.keys(e2.other_ids).find(
        (k) => k.startsWith("source_")
      );
      if (!parent_key) return `.${e2.name}`;
      const parent_type = parent_key.slice(0, -3);
      const parent = elements2.find(
        (p) => p.type === parent_type && p.primary_id === e2.other_ids[parent_key]
      );
      if (!parent) return `??? > .${e2.name}`;
      if (!("name" in parent)) return `#${parent.primary_id} > .${e2.name}`;
      return `${getSelectorPath(parent)} > .${e2.name}`;
    };
    if ("name" in e) {
      selector_path = getSelectorPath(e);
    }
    return {
      ...e,
      selector_path
    };
  });
  const columns = [
    {
      key: "primary_id",
      name: "primary_id",
      renderCell: (row) => /* @__PURE__ */ jsxs8("div", { className: "rf-flex rf-items-center", children: [
        /* @__PURE__ */ jsx11(
          ClickableText,
          {
            text: row.primary_id,
            onClick: () => setFilter({
              focused_id: row.primary_id,
              id_search: void 0,
              selector_search: void 0
            })
          }
        ),
        /* @__PURE__ */ jsx11("span", { className: "rf-flex-grow" }),
        /* @__PURE__ */ jsx11(
          ClickableText,
          {
            text: "(JSON)",
            onClick: () => setModal({
              open: true,
              element: row._og_elm,
              title: row.primary_id
            })
          }
        )
      ] }),
      renderHeaderCell: (col) => /* @__PURE__ */ jsx11(
        HeaderCell,
        {
          column: col,
          onTextChange: (v) => setFilter({ id_search: v }),
          field: !filters.focused_id ? void 0 : () => /* @__PURE__ */ jsxs8("div", { children: [
            "Focus:",
            " ",
            /* @__PURE__ */ jsx11("span", { className: "rf-underline", children: filters.focused_id }),
            /* @__PURE__ */ jsx11(
              ClickableText,
              {
                text: "(unfocus)",
                onClick: () => setFilter({ focused_id: void 0 })
              }
            )
          ] })
        }
      )
    },
    {
      key: "type",
      name: "type",
      renderHeaderCell: (col) => /* @__PURE__ */ jsx11(
        HeaderCell,
        {
          column: col,
          field: () => /* @__PURE__ */ jsxs8(
            "select",
            {
              onChange: (e) => setFilter({ component_type_filter: e.target.value }),
              className: "rf-border rf-rounded rf-p-1 rf-w-full",
              children: [
                /* @__PURE__ */ jsx11("option", { value: "any", children: "any" }, "any"),
                /* @__PURE__ */ jsx11("option", { value: "source", children: "source" }, "source"),
                /* @__PURE__ */ jsx11("option", { value: "source/pcb", children: "source/pcb" }, "source/pcb"),
                /* @__PURE__ */ jsx11("option", { value: "source/schematic", children: "source/schematic" }, "source/schematic"),
                element_types.map((type) => /* @__PURE__ */ jsx11("option", { value: type, children: type }, type))
              ]
            }
          )
        }
      )
    },
    {
      key: "name",
      name: "name",
      renderHeaderCell: (col) => /* @__PURE__ */ jsx11(
        HeaderCell,
        {
          column: col,
          onTextChange: (t) => setFilter({ name_search: t })
        }
      )
    },
    {
      key: "selector_path",
      name: "selector_path",
      renderHeaderCell: (col) => /* @__PURE__ */ jsx11(
        HeaderCell,
        {
          column: col,
          onTextChange: (t) => setFilter({ selector_search: t })
        }
      )
    },
    {
      key: "other_ids",
      name: "other_ids",
      renderCell: (row) => /* @__PURE__ */ jsx11("div", { className: "rf-space-x-2", children: Object.entries(row.other_ids).map(([other_id, v]) => /* @__PURE__ */ jsx11(
        ClickableText,
        {
          text: v,
          onClick: () => setFilter({ focused_id: v })
        },
        v
      )) })
    }
  ];
  const elements4 = elements3.filter((e) => {
    if (!filters.name_search) return true;
    return e.name?.toLowerCase()?.includes(filters.name_search.toLowerCase());
  }).filter((e) => {
    if (!filters.component_type_filter) return true;
    if (filters.component_type_filter === "any") return true;
    if (filters.component_type_filter === "source") {
      return e.type.startsWith("source_");
    }
    if (filters.component_type_filter === "source/pcb") {
      return e.type.startsWith("source_") || e.type.startsWith("pcb_");
    }
    if (filters.component_type_filter === "source/schematic") {
      return e.type.startsWith("source_") || e.type.startsWith("schematic_");
    }
    return e.type?.includes(filters.component_type_filter);
  }).filter((e) => {
    if (!filters.selector_search) return true;
    const parts = filters.selector_search.split(" ").filter((p) => p.length > 0);
    return parts.every((part) => e.selector_path?.includes(part));
  }).filter((e) => {
    if (!filters.id_search) return true;
    return e.primary_id?.includes(filters.id_search);
  }).filter((e) => {
    if (!filters.focused_id) return true;
    if (e.primary_id === filters.focused_id) return true;
    if (Object.values(e.other_ids).includes(filters.focused_id)) return true;
    return false;
  });
  return /* @__PURE__ */ jsxs8("div", { className: "rf-font-mono rf-text-xs rf-bg-white", children: [
    /* @__PURE__ */ jsx11("div", { className: "rf-overflow-x-auto", children: /* @__PURE__ */ jsxs8("table", { className: "rf-table-auto rf-w-full rf-text-left", children: [
      /* @__PURE__ */ jsx11("thead", { children: /* @__PURE__ */ jsx11("tr", { children: columns.map((col) => /* @__PURE__ */ jsx11("th", { className: "rf-px-4 rf-py-2 rf-border-b", children: col.renderHeaderCell ? col.renderHeaderCell(col) : col.name }, col.key)) }) }),
      /* @__PURE__ */ jsx11("tbody", { children: elements4.map((row, rowIndex) => /* @__PURE__ */ jsx11("tr", { className: "rf-hover:bg-gray-100", children: columns.map((col) => /* @__PURE__ */ jsx11("td", { className: "rf-px-4 rf-py-2 rf-border-b", children: col.renderCell ? col.renderCell(row) : row[col.key] }, col.key)) }, rowIndex)) })
    ] }) }),
    /* @__PURE__ */ jsx11(
      Modal_default,
      {
        open: modal.open,
        onClose: () => setModal({ open: false }),
        title: modal.open ? modal.title : "",
        children: /* @__PURE__ */ jsx11("div", { className: "rf-bg-gray-800 rf-p-3 rf-text-white rf-rounded", children: /* @__PURE__ */ jsx11("pre", { className: "rf-whitespace-pre-wrap", children: modal.open ? JSON.stringify(modal.element, null, 2) : "" }) })
      }
    )
  ] });
};

// lib/components/BomTable.tsx
import { jsx as jsx12, jsxs as jsxs9 } from "react/jsx-runtime";
var linkify = (supplier, partNumber) => {
  if (supplier === "jlcpcb") {
    return /* @__PURE__ */ jsx12(
      "a",
      {
        className: "rf-underline rf-text-blue-500",
        target: "_blank",
        rel: "noreferrer",
        href: `https://jlcpcb.com/partdetail/${partNumber}`,
        children: partNumber
      }
    );
  }
  return partNumber;
};
var BomTable = ({ circuitJson }) => {
  const sourceComponents = circuitJson.filter(
    (el) => el.type === "source_component"
  );
  const supplierColumns = /* @__PURE__ */ new Set();
  for (const comp of sourceComponents) {
    if (comp.supplier_part_numbers) {
      for (const supplier of Object.keys(comp.supplier_part_numbers)) {
        supplierColumns.add(supplier);
      }
    }
  }
  return /* @__PURE__ */ jsx12("div", { className: "rf-overflow-x-auto", children: /* @__PURE__ */ jsxs9("table", { className: "rf-w-full rf-text-left rf-text-sm", children: [
    /* @__PURE__ */ jsx12("thead", { children: /* @__PURE__ */ jsxs9("tr", { className: "rf-border-b", children: [
      /* @__PURE__ */ jsx12("th", { className: "rf-p-2", children: "Name" }),
      Array.from(supplierColumns).map((supplier) => /* @__PURE__ */ jsx12("th", { className: "rf-p-2 rf-capitalize", children: supplier }, supplier))
    ] }) }),
    /* @__PURE__ */ jsx12("tbody", { children: sourceComponents.map((comp) => /* @__PURE__ */ jsxs9("tr", { className: "rf-border-b", children: [
      /* @__PURE__ */ jsx12("td", { className: "rf-p-2", children: comp.name }),
      Array.from(supplierColumns).map((supplier) => /* @__PURE__ */ jsx12("td", { className: "rf-p-2", children: linkify(
        supplier,
        comp.supplier_part_numbers?.[supplier]?.[0] || ""
      ) }, supplier))
    ] }, comp.source_component_id)) })
  ] }) });
};

// lib/components/CircuitJsonPreview/CircuitJsonPreview.tsx
import {
  CheckIcon,
  EllipsisIcon,
  FullscreenIcon,
  Loader2,
  LoaderCircleIcon,
  MinimizeIcon,
  Circle as Circle2
} from "lucide-react";

// lib/components/PcbViewerWithContainerHeight.tsx
import { useRef, useState as useState3, useLayoutEffect } from "react";
import { PCBViewer } from "@tscircuit/pcb-viewer";
import { jsx as jsx13 } from "react/jsx-runtime";
var PcbViewerWithContainerHeight = ({
  containerClassName,
  ...props
}) => {
  const containerRef = useRef(null);
  const [computedHeight, setComputedHeight] = useState3(620);
  useLayoutEffect(() => {
    const updateHeight = () => {
      if (containerRef.current) {
        const containerHeight = containerRef.current.clientHeight;
        const screenHeight = window.innerHeight;
        setComputedHeight(
          Math.min(Math.max(containerHeight, 620), screenHeight)
        );
      }
    };
    updateHeight();
    const resizeObserver = new ResizeObserver(updateHeight);
    if (containerRef.current) {
      resizeObserver.observe(containerRef.current);
    }
    window.addEventListener("resize", updateHeight);
    return () => {
      resizeObserver.disconnect();
      window.removeEventListener("resize", updateHeight);
    };
  }, []);
  return /* @__PURE__ */ jsx13(
    "div",
    {
      ref: containerRef,
      className: containerClassName || "rf-w-full rf-h-full",
      children: /* @__PURE__ */ jsx13(PCBViewer, { ...props, height: computedHeight })
    }
  );
};

// lib/hooks/use-styles.ts
import { useEffect } from "react";

// lib/hooks/styles.generated.ts
var styles_generated_default = '*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/*! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:""}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-size:1em;font-variation-settings:normal}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-feature-settings:inherit;font-size:100%;font-variation-settings:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]:where(:not([hidden=until-found])){display:none}:root{--radius:0.5rem}.rf-pointer-events-none{pointer-events:none}.rf-invisible{visibility:hidden}.rf-fixed{position:fixed}.rf-absolute{position:absolute}.rf-relative{position:relative}.rf-inset-0{inset:0}.-rf-left-2{left:-.5rem}.-rf-right-10{right:-2.5rem}.-rf-right-2{right:-.5rem}.-rf-right-4{right:-1rem}.-rf-right-6{right:-1.5rem}.-rf-right-7{right:-1.75rem}.-rf-right-8{right:-2rem}.-rf-right-9{right:-2.25rem}.rf-bottom-full{bottom:100%}.rf-left-0{left:0}.rf-left-1{left:.25rem}.rf-left-1\\/2{left:50%}.rf-left-2{left:.5rem}.rf-left-\\[50\\%\\]{left:50%}.rf-right-0{right:0}.rf-right-4{right:1rem}.rf-right-\\[4px\\]{right:4px}.rf-top-0{top:0}.rf-top-1{top:.25rem}.rf-top-2{top:.5rem}.rf-top-2\\.5{top:.625rem}.rf-top-\\[50\\%\\]{top:50%}.rf-top-\\[6px\\]{top:6px}.\\!rf-z-\\[101\\]{z-index:101!important}.rf-z-50{z-index:50}.rf-z-\\[100\\]{z-index:100}.rf-order-1{order:1}.rf-order-2{order:2}.rf-order-3{order:3}.rf-m-1{margin:.25rem}.rf-m-6{margin:1.5rem}.-rf-mx-1,.rf--mx-1{margin-left:-.25rem;margin-right:-.25rem}.rf-mx-1{margin-left:.25rem;margin-right:.25rem}.rf-mx-2{margin-left:.5rem;margin-right:.5rem}.rf-mx-4{margin-left:1rem;margin-right:1rem}.rf-mx-auto{margin-left:auto;margin-right:auto}.rf-my-1{margin-bottom:.25rem;margin-top:.25rem}.rf-my-12{margin-bottom:3rem;margin-top:3rem}.rf-my-4{margin-bottom:1rem;margin-top:1rem}.rf-my-auto{margin-bottom:auto;margin-top:auto}.rf-mb-1{margin-bottom:.25rem}.rf-mb-12{margin-bottom:3rem}.rf-mb-2{margin-bottom:.5rem}.rf-mb-3{margin-bottom:.75rem}.rf-mb-4{margin-bottom:1rem}.rf-mb-6{margin-bottom:1.5rem}.rf-mb-8{margin-bottom:2rem}.rf-ml-1{margin-left:.25rem}.rf-ml-2{margin-left:.5rem}.rf-ml-auto{margin-left:auto}.rf-mr-1{margin-right:.25rem}.rf-mr-2{margin-right:.5rem}.rf-mt-0{margin-top:0}.rf-mt-0\\.5{margin-top:.125rem}.rf-mt-1{margin-top:.25rem}.rf-mt-2{margin-top:.5rem}.rf-mt-3{margin-top:.75rem}.rf-mt-4{margin-top:1rem}.rf-mt-5{margin-top:1.25rem}.rf-mt-auto{margin-top:auto}.rf-block{display:block}.rf-inline{display:inline}.rf-flex{display:flex}.rf-inline-flex{display:inline-flex}.rf-grid{display:grid}.rf-hidden{display:none}.rf-aspect-square{aspect-ratio:1/1}.rf-aspect-video{aspect-ratio:16/9}.rf-size-14{height:3.5rem;width:3.5rem}.rf-size-4{height:1rem;width:1rem}.\\!rf-h-2{height:.5rem!important}.\\!rf-h-2\\.5{height:.625rem!important}.\\!rf-h-3{height:.75rem!important}.\\!rf-h-full{height:100%!important}.rf-h-1{height:.25rem}.rf-h-10{height:2.5rem}.rf-h-12{height:3rem}.rf-h-2{height:.5rem}.rf-h-2\\.5{height:.625rem}.rf-h-3{height:.75rem}.rf-h-3\\.5{height:.875rem}.rf-h-4{height:1rem}.rf-h-5{height:1.25rem}.rf-h-6{height:1.5rem}.rf-h-60{height:15rem}.rf-h-64{height:16rem}.rf-h-8{height:2rem}.rf-h-9{height:2.25rem}.rf-h-\\[400px\\]{height:400px}.rf-h-\\[calc\\(100vh-52px\\)\\]{height:calc(100vh - 52px)}.rf-h-\\[var\\(--radix-select-trigger-height\\)\\]{height:var(--radix-select-trigger-height)}.rf-h-auto{height:auto}.rf-h-fit{height:-moz-fit-content;height:fit-content}.rf-h-full{height:100%}.rf-h-px{height:1px}.rf-h-screen{height:100vh}.\\!rf-max-h-\\[40vh\\]{max-height:40vh!important}.rf-max-h-32{max-height:8rem}.rf-max-h-96{max-height:24rem}.rf-max-h-\\[500px\\]{max-height:500px}.rf-max-h-\\[90vh\\]{max-height:90vh}.rf-max-h-full{max-height:100%}.rf-min-h-0{min-height:0}.rf-min-h-\\[200px\\]{min-height:200px}.rf-min-h-\\[300px\\]{min-height:300px}.rf-min-h-\\[620px\\]{min-height:620px}.rf-min-h-\\[calc\\(100vh-240px\\)\\]{min-height:calc(100vh - 240px)}.\\!rf-w-2{width:.5rem!important}.\\!rf-w-2\\.5{width:.625rem!important}.rf-w-1{width:.25rem}.rf-w-1\\/2{width:50%}.rf-w-11{width:2.75rem}.rf-w-11\\/12{width:91.666667%}.rf-w-12{width:3rem}.rf-w-16{width:4rem}.rf-w-2{width:.5rem}.rf-w-2\\.5{width:.625rem}.rf-w-3{width:.75rem}.rf-w-3\\.5{width:.875rem}.rf-w-32{width:8rem}.rf-w-4{width:1rem}.rf-w-48{width:12rem}.rf-w-5{width:1.25rem}.rf-w-6{width:1.5rem}.rf-w-64{width:16rem}.rf-w-72{width:18rem}.rf-w-8{width:2rem}.rf-w-9{width:2.25rem}.rf-w-96{width:24rem}.rf-w-\\[95\\%\\]{width:95%}.rf-w-fit{width:-moz-fit-content;width:fit-content}.rf-w-full{width:100%}.rf-min-w-0{min-width:0}.rf-min-w-10{min-width:2.5rem}.rf-min-w-16{min-width:4rem}.rf-min-w-\\[148px\\]{min-width:148px}.rf-min-w-\\[8rem\\]{min-width:8rem}.rf-min-w-\\[var\\(--radix-select-trigger-width\\)\\]{min-width:var(--radix-select-trigger-width)}.\\!rf-max-w-\\[660px\\]{max-width:660px!important}.rf-max-w-2xl{max-width:42rem}.rf-max-w-3xl{max-width:48rem}.rf-max-w-4xl{max-width:56rem}.rf-max-w-5xl{max-width:64rem}.rf-max-w-full{max-width:100%}.rf-max-w-lg{max-width:32rem}.rf-max-w-md{max-width:28rem}.rf-max-w-none{max-width:none}.rf-max-w-xl{max-width:36rem}.rf-flex-1{flex:1 1 0%}.rf-flex-shrink-0,.rf-shrink-0{flex-shrink:0}.rf-flex-grow{flex-grow:1}.rf-table-auto{table-layout:auto}.-rf-translate-x-1{--tw-translate-x:-0.25rem}.-rf-translate-x-1,.-rf-translate-x-1\\/2{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-rf-translate-x-1\\/2{--tw-translate-x:-50%}.-rf-translate-y-1{--tw-translate-y:-0.25rem}.-rf-translate-y-1,.rf--translate-x-1{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rf--translate-x-1{--tw-translate-x:-0.25rem}.rf-translate-x-\\[-50\\%\\]{--tw-translate-x:-50%}.rf-translate-x-\\[-50\\%\\],.rf-translate-y-\\[-50\\%\\]{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rf-translate-y-\\[-50\\%\\]{--tw-translate-y:-50%}.rf-transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes rf-pulse{50%{opacity:.5}}.rf-animate-pulse{animation:rf-pulse 2s cubic-bezier(.4,0,.6,1) infinite}@keyframes rf-spin{to{transform:rotate(1turn)}}.rf-animate-spin{animation:rf-spin 1s linear infinite}.rf-cursor-default{cursor:default}.rf-cursor-not-allowed{cursor:not-allowed}.rf-cursor-pointer{cursor:pointer}.rf-select-none{-webkit-user-select:none;-moz-user-select:none;user-select:none}.rf-grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.rf-grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.rf-flex-row{flex-direction:row}.rf-flex-col{flex-direction:column}.rf-flex-col-reverse{flex-direction:column-reverse}.rf-flex-wrap{flex-wrap:wrap}.rf-place-items-center{place-items:center}.rf-items-start{align-items:flex-start}.rf-items-end{align-items:flex-end}.rf-items-center{align-items:center}.rf-items-stretch{align-items:stretch}.rf-justify-end{justify-content:flex-end}.rf-justify-center{justify-content:center}.rf-justify-between{justify-content:space-between}.rf-gap-0{gap:0}.rf-gap-1{gap:.25rem}.rf-gap-2{gap:.5rem}.rf-gap-3{gap:.75rem}.rf-gap-4{gap:1rem}.rf-gap-5{gap:1.25rem}.rf-gap-6{gap:1.5rem}.rf-gap-8{gap:2rem}.rf-space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(.5rem*var(--tw-space-x-reverse))}.rf-space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.5rem*var(--tw-space-y-reverse));margin-top:calc(.5rem*(1 - var(--tw-space-y-reverse)))}.rf-space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.75rem*var(--tw-space-y-reverse));margin-top:calc(.75rem*(1 - var(--tw-space-y-reverse)))}.rf-space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(1rem*var(--tw-space-y-reverse));margin-top:calc(1rem*(1 - var(--tw-space-y-reverse)))}.rf-space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(1.5rem*var(--tw-space-y-reverse));margin-top:calc(1.5rem*(1 - var(--tw-space-y-reverse)))}.rf-divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.rf-overflow-auto{overflow:auto}.rf-overflow-hidden{overflow:hidden}.rf-overflow-visible{overflow:visible}.rf-overflow-x-auto{overflow-x:auto}.\\!rf-overflow-y-auto{overflow-y:auto!important}.rf-overflow-y-auto{overflow-y:auto}.rf-overflow-x-hidden{overflow-x:hidden}.rf-overflow-x-clip{overflow-x:clip}.rf-truncate{overflow:hidden;text-overflow:ellipsis}.rf-truncate,.rf-whitespace-nowrap{white-space:nowrap}.rf-whitespace-pre-wrap{white-space:pre-wrap}.rf-break-words{overflow-wrap:break-word}.rf-rounded{border-radius:.25rem}.rf-rounded-2xl{border-radius:1rem}.rf-rounded-full{border-radius:9999px}.rf-rounded-lg{border-radius:var(--radius)}.rf-rounded-md{border-radius:calc(var(--radius) - 2px)}.rf-rounded-sm{border-radius:calc(var(--radius) - 4px)}.rf-rounded-xl{border-radius:.75rem}.rf-border{border-width:1px}.rf-border-b{border-bottom-width:1px}.rf-border-t{border-top-width:1px}.rf-border-blue-200{--tw-border-opacity:1;border-color:rgb(191 219 254/var(--tw-border-opacity,1))}.rf-border-blue-500{--tw-border-opacity:1;border-color:rgb(59 130 246/var(--tw-border-opacity,1))}.rf-border-blue-600{--tw-border-opacity:1;border-color:rgb(37 99 235/var(--tw-border-opacity,1))}.rf-border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity,1))}.rf-border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity,1))}.rf-border-green-200{--tw-border-opacity:1;border-color:rgb(187 247 208/var(--tw-border-opacity,1))}.rf-border-input{border-color:hsl(var(--input))}.rf-border-neutral-200{--tw-border-opacity:1;border-color:rgb(229 229 229/var(--tw-border-opacity,1))}.rf-border-orange-200{--tw-border-opacity:1;border-color:rgb(254 215 170/var(--tw-border-opacity,1))}.rf-border-primary{border-color:hsl(var(--primary))}.rf-border-red-200{--tw-border-opacity:1;border-color:rgb(254 202 202/var(--tw-border-opacity,1))}.rf-border-red-500{--tw-border-opacity:1;border-color:rgb(239 68 68/var(--tw-border-opacity,1))}.rf-border-zinc-200{--tw-border-opacity:1;border-color:rgb(228 228 231/var(--tw-border-opacity,1))}.rf-border-zinc-900{--tw-border-opacity:1;border-color:rgb(24 24 27/var(--tw-border-opacity,1))}.rf-bg-background{background-color:hsl(var(--background))}.rf-bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0/var(--tw-bg-opacity,1))}.rf-bg-black\\/80{background-color:rgba(0,0,0,.8)}.rf-bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity,1))}.rf-bg-blue-50{--tw-bg-opacity:1;background-color:rgb(239 246 255/var(--tw-bg-opacity,1))}.rf-bg-blue-500{--tw-bg-opacity:1;background-color:rgb(59 130 246/var(--tw-bg-opacity,1))}.rf-bg-blue-600{--tw-bg-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity,1))}.rf-bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity,1))}.rf-bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity,1))}.rf-bg-gray-300{--tw-bg-opacity:1;background-color:rgb(209 213 219/var(--tw-bg-opacity,1))}.rf-bg-gray-400{--tw-bg-opacity:1;background-color:rgb(156 163 175/var(--tw-bg-opacity,1))}.rf-bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity,1))}.rf-bg-gray-500{--tw-bg-opacity:1;background-color:rgb(107 114 128/var(--tw-bg-opacity,1))}.rf-bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity,1))}.rf-bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity,1))}.rf-bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity,1))}.rf-bg-green-100{--tw-bg-opacity:1;background-color:rgb(220 252 231/var(--tw-bg-opacity,1))}.rf-bg-green-50{--tw-bg-opacity:1;background-color:rgb(240 253 244/var(--tw-bg-opacity,1))}.rf-bg-muted{background-color:hsl(var(--muted))}.rf-bg-neutral-100{--tw-bg-opacity:1;background-color:rgb(245 245 245/var(--tw-bg-opacity,1))}.rf-bg-neutral-50{--tw-bg-opacity:1;background-color:rgb(250 250 250/var(--tw-bg-opacity,1))}.rf-bg-neutral-800{--tw-bg-opacity:1;background-color:rgb(38 38 38/var(--tw-bg-opacity,1))}.rf-bg-neutral-900{--tw-bg-opacity:1;background-color:rgb(23 23 23/var(--tw-bg-opacity,1))}.rf-bg-orange-400{--tw-bg-opacity:1;background-color:rgb(251 146 60/var(--tw-bg-opacity,1))}.rf-bg-orange-50{--tw-bg-opacity:1;background-color:rgb(255 247 237/var(--tw-bg-opacity,1))}.rf-bg-popover{background-color:hsl(var(--popover))}.rf-bg-red-100{--tw-bg-opacity:1;background-color:rgb(254 226 226/var(--tw-bg-opacity,1))}.rf-bg-red-50{--tw-bg-opacity:1;background-color:rgb(254 242 242/var(--tw-bg-opacity,1))}.rf-bg-red-500{--tw-bg-opacity:1;background-color:rgb(239 68 68/var(--tw-bg-opacity,1))}.rf-bg-red-900{--tw-bg-opacity:1;background-color:rgb(127 29 29/var(--tw-bg-opacity,1))}.rf-bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity,1))}.rf-bg-yellow-100{--tw-bg-opacity:1;background-color:rgb(254 249 195/var(--tw-bg-opacity,1))}.rf-bg-zinc-100{--tw-bg-opacity:1;background-color:rgb(244 244 245/var(--tw-bg-opacity,1))}.rf-bg-zinc-200{--tw-bg-opacity:1;background-color:rgb(228 228 231/var(--tw-bg-opacity,1))}.rf-bg-zinc-50{--tw-bg-opacity:1;background-color:rgb(250 250 250/var(--tw-bg-opacity,1))}.rf-bg-zinc-800{--tw-bg-opacity:1;background-color:rgb(39 39 42/var(--tw-bg-opacity,1))}.rf-bg-zinc-900{--tw-bg-opacity:1;background-color:rgb(24 24 27/var(--tw-bg-opacity,1))}.rf-bg-opacity-50{--tw-bg-opacity:0.5}.rf-fill-current{fill:currentColor}.rf-object-contain{-o-object-fit:contain;object-fit:contain}.rf-object-cover{-o-object-fit:cover;object-fit:cover}.\\!rf-p-0{padding:0!important}.rf-p-0{padding:0}.rf-p-1{padding:.25rem}.rf-p-2{padding:.5rem}.rf-p-3{padding:.75rem}.rf-p-4{padding:1rem}.rf-p-5{padding:1.25rem}.rf-p-6{padding:1.5rem}.rf-p-8{padding:2rem}.rf-px-1{padding-left:.25rem;padding-right:.25rem}.rf-px-2{padding-left:.5rem;padding-right:.5rem}.rf-px-3{padding-left:.75rem;padding-right:.75rem}.rf-px-4{padding-left:1rem;padding-right:1rem}.rf-px-6{padding-left:1.5rem;padding-right:1.5rem}.rf-px-8{padding-left:2rem;padding-right:2rem}.rf-py-0{padding-bottom:0;padding-top:0}.rf-py-0\\.5{padding-bottom:.125rem;padding-top:.125rem}.rf-py-1{padding-bottom:.25rem;padding-top:.25rem}.rf-py-1\\.5{padding-bottom:.375rem;padding-top:.375rem}.rf-py-10{padding-bottom:2.5rem;padding-top:2.5rem}.rf-py-12{padding-bottom:3rem;padding-top:3rem}.rf-py-2{padding-bottom:.5rem;padding-top:.5rem}.rf-py-3{padding-bottom:.75rem;padding-top:.75rem}.rf-py-4{padding-bottom:1rem;padding-top:1rem}.rf-py-8{padding-bottom:2rem;padding-top:2rem}.rf-pb-0{padding-bottom:0}.rf-pb-2{padding-bottom:.5rem}.rf-pb-3{padding-bottom:.75rem}.rf-pb-4{padding-bottom:1rem}.rf-pl-2{padding-left:.5rem}.rf-pl-4{padding-left:1rem}.rf-pl-8{padding-left:2rem}.rf-pr-2{padding-right:.5rem}.rf-pt-2{padding-top:.5rem}.rf-pt-4{padding-top:1rem}.rf-text-left{text-align:left}.rf-text-center{text-align:center}.rf-text-right{text-align:right}.rf-font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.rf-text-2xl{font-size:1.5rem;line-height:2rem}.rf-text-3xl{font-size:1.875rem;line-height:2.25rem}.rf-text-\\[8px\\]{font-size:8px}.rf-text-base{font-size:1rem;line-height:1.5rem}.rf-text-lg{font-size:1.125rem;line-height:1.75rem}.rf-text-sm{font-size:.875rem;line-height:1.25rem}.rf-text-xl{font-size:1.25rem;line-height:1.75rem}.rf-text-xs{font-size:.75rem;line-height:1rem}.rf-font-bold{font-weight:700}.rf-font-medium{font-weight:500}.rf-font-semibold{font-weight:600}.rf-uppercase{text-transform:uppercase}.rf-capitalize{text-transform:capitalize}.rf-tabular-nums{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.rf-leading-5{line-height:1.25rem}.rf-leading-none{line-height:1}.rf-leading-relaxed{line-height:1.625}.rf-leading-tight{line-height:1.25}.rf-tracking-wide{letter-spacing:.025em}.rf-tracking-widest{letter-spacing:.1em}.rf-text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity,1))}.rf-text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity,1))}.rf-text-blue-600{--tw-text-opacity:1;color:rgb(37 99 235/var(--tw-text-opacity,1))}.rf-text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity,1))}.rf-text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity,1))}.rf-text-blue-900{--tw-text-opacity:1;color:rgb(30 58 138/var(--tw-text-opacity,1))}.rf-text-current{color:currentColor}.rf-text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity,1))}.rf-text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity,1))}.rf-text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity,1))}.rf-text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity,1))}.rf-text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity,1))}.rf-text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity,1))}.rf-text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity,1))}.rf-text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity,1))}.rf-text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity,1))}.rf-text-green-800{--tw-text-opacity:1;color:rgb(22 101 52/var(--tw-text-opacity,1))}.rf-text-green-900{--tw-text-opacity:1;color:rgb(20 83 45/var(--tw-text-opacity,1))}.rf-text-muted-foreground{color:hsl(var(--muted-foreground))}.rf-text-neutral-50{--tw-text-opacity:1;color:rgb(250 250 250/var(--tw-text-opacity,1))}.rf-text-neutral-500{--tw-text-opacity:1;color:rgb(115 115 115/var(--tw-text-opacity,1))}.rf-text-neutral-900{--tw-text-opacity:1;color:rgb(23 23 23/var(--tw-text-opacity,1))}.rf-text-neutral-950{--tw-text-opacity:1;color:rgb(10 10 10/var(--tw-text-opacity,1))}.rf-text-orange-500{--tw-text-opacity:1;color:rgb(249 115 22/var(--tw-text-opacity,1))}.rf-text-orange-600{--tw-text-opacity:1;color:rgb(234 88 12/var(--tw-text-opacity,1))}.rf-text-orange-800{--tw-text-opacity:1;color:rgb(154 52 18/var(--tw-text-opacity,1))}.rf-text-popover-foreground{color:hsl(var(--popover-foreground))}.rf-text-red-200{--tw-text-opacity:1;color:rgb(254 202 202/var(--tw-text-opacity,1))}.rf-text-red-300{--tw-text-opacity:1;color:rgb(252 165 165/var(--tw-text-opacity,1))}.rf-text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity,1))}.rf-text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity,1))}.rf-text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity,1))}.rf-text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity,1))}.rf-text-red-800{--tw-text-opacity:1;color:rgb(153 27 27/var(--tw-text-opacity,1))}.rf-text-red-900{--tw-text-opacity:1;color:rgb(127 29 29/var(--tw-text-opacity,1))}.rf-text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity,1))}.rf-text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity,1))}.rf-text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity,1))}.rf-text-yellow-900{--tw-text-opacity:1;color:rgb(113 63 18/var(--tw-text-opacity,1))}.rf-text-zinc-200{--tw-text-opacity:1;color:rgb(228 228 231/var(--tw-text-opacity,1))}.rf-text-zinc-300{--tw-text-opacity:1;color:rgb(212 212 216/var(--tw-text-opacity,1))}.rf-text-zinc-400{--tw-text-opacity:1;color:rgb(161 161 170/var(--tw-text-opacity,1))}.rf-text-zinc-50{--tw-text-opacity:1;color:rgb(250 250 250/var(--tw-text-opacity,1))}.rf-text-zinc-500{--tw-text-opacity:1;color:rgb(113 113 122/var(--tw-text-opacity,1))}.rf-text-zinc-900{--tw-text-opacity:1;color:rgb(24 24 27/var(--tw-text-opacity,1))}.rf-text-zinc-950{--tw-text-opacity:1;color:rgb(9 9 11/var(--tw-text-opacity,1))}.rf-underline{text-decoration-line:underline}.rf-line-through{text-decoration-line:line-through}.rf-underline-offset-4{text-underline-offset:4px}.rf-opacity-0{opacity:0}.rf-opacity-25{opacity:.25}.rf-opacity-30{opacity:.3}.rf-opacity-50{opacity:.5}.rf-opacity-60{opacity:.6}.rf-opacity-75{opacity:.75}.rf-shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.rf-shadow,.rf-shadow-lg{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.rf-shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.rf-shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.rf-shadow-md,.rf-shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.rf-shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.rf-outline-none{outline:2px solid transparent;outline-offset:2px}.rf-ring-2{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.rf-ring-blue-500{--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246/var(--tw-ring-opacity,1))}.rf-ring-primary{--tw-ring-color:hsl(var(--primary))}.rf-ring-offset-background{--tw-ring-offset-color:hsl(var(--background))}.rf-ring-offset-white{--tw-ring-offset-color:#fff}.rf-transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.rf-transition-all{transition-duration:.15s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}.rf-transition-colors{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1)}.rf-transition-opacity{transition-duration:.15s;transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.rf-duration-200{transition-duration:.2s}.rf-ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}@keyframes enter{0%{opacity:var(--tw-enter-opacity,1);transform:translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0) scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1)) rotate(var(--tw-enter-rotate,0))}}@keyframes exit{to{opacity:var(--tw-exit-opacity,1);transform:translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0) scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1)) rotate(var(--tw-exit-rotate,0))}}.rf-slide-in-from-left-1{--tw-enter-translate-x:-0.25rem}.rf-slide-out-to-left-1{--tw-exit-translate-x:-0.25rem}.rf-duration-200{animation-duration:.2s}.rf-ease-in-out{animation-timing-function:cubic-bezier(.4,0,.2,1)}.file\\:rf-border-0::file-selector-button{border-width:0}.file\\:rf-bg-transparent::file-selector-button{background-color:transparent}.file\\:rf-text-sm::file-selector-button{font-size:.875rem;line-height:1.25rem}.file\\:rf-font-medium::file-selector-button{font-weight:500}.placeholder\\:rf-text-zinc-500::-moz-placeholder{--tw-text-opacity:1;color:rgb(113 113 122/var(--tw-text-opacity,1))}.placeholder\\:rf-text-zinc-500::placeholder{--tw-text-opacity:1;color:rgb(113 113 122/var(--tw-text-opacity,1))}.hover\\:rf-border-blue-300:hover{--tw-border-opacity:1;border-color:rgb(147 197 253/var(--tw-border-opacity,1))}.hover\\:\\!rf-bg-transparent:hover{background-color:transparent!important}.hover\\:rf-bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgb(29 78 216/var(--tw-bg-opacity,1))}.hover\\:rf-bg-red-500\\/90:hover{background-color:rgba(239,68,68,.9)}.hover\\:rf-bg-zinc-100:hover{--tw-bg-opacity:1;background-color:rgb(244 244 245/var(--tw-bg-opacity,1))}.hover\\:rf-bg-zinc-100\\/80:hover{background-color:hsla(240,5%,96%,.8)}.hover\\:rf-bg-zinc-900\\/90:hover{background-color:rgba(24,24,27,.9)}.hover\\:rf-text-red-400:hover{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity,1))}.hover\\:rf-text-zinc-900:hover{--tw-text-opacity:1;color:rgb(24 24 27/var(--tw-text-opacity,1))}.hover\\:rf-underline:hover{text-decoration-line:underline}.focus\\:rf-bg-gray-100:focus{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity,1))}.focus\\:rf-bg-zinc-100:focus{--tw-bg-opacity:1;background-color:rgb(244 244 245/var(--tw-bg-opacity,1))}.focus\\:rf-text-gray-900:focus{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity,1))}.focus\\:rf-text-zinc-900:focus{--tw-text-opacity:1;color:rgb(24 24 27/var(--tw-text-opacity,1))}.focus\\:rf-outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:rf-ring-2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:rf-ring-ring:focus{--tw-ring-color:hsl(var(--ring))}.focus\\:rf-ring-offset-2:focus{--tw-ring-offset-width:2px}.focus-visible\\:rf-outline-none:focus-visible{outline:2px solid transparent;outline-offset:2px}.focus-visible\\:rf-ring-1:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus-visible\\:rf-ring-2:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus-visible\\:rf-ring-zinc-950:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(9 9 11/var(--tw-ring-opacity,1))}.focus-visible\\:rf-ring-offset-2:focus-visible{--tw-ring-offset-width:2px}.disabled\\:rf-pointer-events-none:disabled{pointer-events:none}.disabled\\:rf-cursor-not-allowed:disabled{cursor:not-allowed}.disabled\\:rf-opacity-50:disabled{opacity:.5}.rf-group\\/bar:hover .group-hover\\/bar\\:rf-opacity-100{opacity:1}.data-\\[disabled\\]\\:rf-pointer-events-none[data-disabled]{pointer-events:none}.data-\\[side\\=bottom\\]\\:rf-translate-y-1[data-side=bottom]{--tw-translate-y:0.25rem}.data-\\[side\\=bottom\\]\\:rf-translate-y-1[data-side=bottom],.data-\\[side\\=left\\]\\:-rf-translate-x-1[data-side=left]{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\\[side\\=left\\]\\:-rf-translate-x-1[data-side=left]{--tw-translate-x:-0.25rem}.data-\\[side\\=right\\]\\:rf-translate-x-1[data-side=right]{--tw-translate-x:0.25rem}.data-\\[side\\=right\\]\\:rf-translate-x-1[data-side=right],.data-\\[side\\=top\\]\\:-rf-translate-y-1[data-side=top]{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.data-\\[side\\=top\\]\\:-rf-translate-y-1[data-side=top]{--tw-translate-y:-0.25rem}.data-\\[state\\=active\\]\\:rf-bg-white[data-state=active]{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity,1))}.data-\\[state\\=checked\\]\\:rf-bg-zinc-900[data-state=checked]{--tw-bg-opacity:1;background-color:rgb(24 24 27/var(--tw-bg-opacity,1))}.data-\\[state\\=open\\]\\:rf-bg-zinc-100[data-state=open]{--tw-bg-opacity:1;background-color:rgb(244 244 245/var(--tw-bg-opacity,1))}.data-\\[state\\=active\\]\\:rf-text-zinc-950[data-state=active]{--tw-text-opacity:1;color:rgb(9 9 11/var(--tw-text-opacity,1))}.data-\\[state\\=checked\\]\\:rf-text-zinc-50[data-state=checked]{--tw-text-opacity:1;color:rgb(250 250 250/var(--tw-text-opacity,1))}.data-\\[disabled\\]\\:rf-opacity-50[data-disabled]{opacity:.5}.data-\\[state\\=active\\]\\:rf-shadow[data-state=active]{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.data-\\[state\\=open\\]\\:rf-animate-in[data-state=open]{animation-duration:.15s;animation-name:enter;--tw-enter-opacity:initial;--tw-enter-scale:initial;--tw-enter-rotate:initial;--tw-enter-translate-x:initial;--tw-enter-translate-y:initial}.data-\\[state\\=closed\\]\\:rf-animate-out[data-state=closed]{animation-duration:.15s;animation-name:exit;--tw-exit-opacity:initial;--tw-exit-scale:initial;--tw-exit-rotate:initial;--tw-exit-translate-x:initial;--tw-exit-translate-y:initial}.data-\\[state\\=closed\\]\\:rf-fade-out-0[data-state=closed]{--tw-exit-opacity:0}.data-\\[state\\=open\\]\\:rf-fade-in-0[data-state=open]{--tw-enter-opacity:0}.data-\\[state\\=closed\\]\\:rf-zoom-out-95[data-state=closed]{--tw-exit-scale:.95}.data-\\[state\\=open\\]\\:rf-zoom-in-95[data-state=open]{--tw-enter-scale:.95}.data-\\[side\\=bottom\\]\\:rf-slide-in-from-top-2[data-side=bottom]{--tw-enter-translate-y:-0.5rem}.data-\\[side\\=left\\]\\:rf-slide-in-from-right-2[data-side=left]{--tw-enter-translate-x:0.5rem}.data-\\[side\\=right\\]\\:rf-slide-in-from-left-2[data-side=right]{--tw-enter-translate-x:-0.5rem}.data-\\[side\\=top\\]\\:rf-slide-in-from-bottom-2[data-side=top]{--tw-enter-translate-y:0.5rem}.data-\\[state\\=closed\\]\\:rf-slide-out-to-left-1\\/2[data-state=closed]{--tw-exit-translate-x:-50%}.data-\\[state\\=closed\\]\\:rf-slide-out-to-top-\\[48\\%\\][data-state=closed]{--tw-exit-translate-y:-48%}.data-\\[state\\=open\\]\\:rf-slide-in-from-left-1\\/2[data-state=open]{--tw-enter-translate-x:-50%}.data-\\[state\\=open\\]\\:rf-slide-in-from-top-\\[48\\%\\][data-state=open]{--tw-enter-translate-y:-48%}.dark\\:rf-border-zinc-50:is(.rf-dark *){--tw-border-opacity:1;border-color:rgb(250 250 250/var(--tw-border-opacity,1))}.dark\\:rf-border-zinc-800:is(.rf-dark *){--tw-border-opacity:1;border-color:rgb(39 39 42/var(--tw-border-opacity,1))}.dark\\:rf-bg-red-900:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(127 29 29/var(--tw-bg-opacity,1))}.dark\\:rf-bg-zinc-50:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(250 250 250/var(--tw-bg-opacity,1))}.dark\\:rf-bg-zinc-800:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(39 39 42/var(--tw-bg-opacity,1))}.dark\\:rf-bg-zinc-950:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(9 9 11/var(--tw-bg-opacity,1))}.dark\\:rf-text-zinc-400:is(.rf-dark *){--tw-text-opacity:1;color:rgb(161 161 170/var(--tw-text-opacity,1))}.dark\\:rf-text-zinc-50:is(.rf-dark *){--tw-text-opacity:1;color:rgb(250 250 250/var(--tw-text-opacity,1))}.dark\\:rf-text-zinc-900:is(.rf-dark *){--tw-text-opacity:1;color:rgb(24 24 27/var(--tw-text-opacity,1))}.dark\\:rf-placeholder-zinc-400:is(.rf-dark *)::-moz-placeholder{--tw-placeholder-opacity:1;color:rgb(161 161 170/var(--tw-placeholder-opacity,1))}.dark\\:rf-placeholder-zinc-400:is(.rf-dark *)::placeholder{--tw-placeholder-opacity:1;color:rgb(161 161 170/var(--tw-placeholder-opacity,1))}.dark\\:rf-ring-offset-zinc-950:is(.rf-dark *){--tw-ring-offset-color:#09090b}.dark\\:hover\\:rf-bg-red-900\\/90:hover:is(.rf-dark *){background-color:rgba(127,29,29,.9)}.dark\\:hover\\:rf-bg-zinc-50\\/90:hover:is(.rf-dark *){background-color:hsla(0,0%,98%,.9)}.dark\\:hover\\:rf-bg-zinc-800:hover:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(39 39 42/var(--tw-bg-opacity,1))}.dark\\:hover\\:rf-bg-zinc-800\\/80:hover:is(.rf-dark *){background-color:rgba(39,39,42,.8)}.dark\\:hover\\:rf-text-zinc-50:hover:is(.rf-dark *){--tw-text-opacity:1;color:rgb(250 250 250/var(--tw-text-opacity,1))}.dark\\:focus\\:rf-bg-zinc-800:focus:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(39 39 42/var(--tw-bg-opacity,1))}.dark\\:focus\\:rf-text-zinc-50:focus:is(.rf-dark *){--tw-text-opacity:1;color:rgb(250 250 250/var(--tw-text-opacity,1))}.dark\\:focus-visible\\:rf-ring-zinc-300:focus-visible:is(.rf-dark *){--tw-ring-opacity:1;--tw-ring-color:rgb(212 212 216/var(--tw-ring-opacity,1))}.dark\\:data-\\[state\\=active\\]\\:rf-bg-zinc-950[data-state=active]:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(9 9 11/var(--tw-bg-opacity,1))}.dark\\:data-\\[state\\=checked\\]\\:rf-bg-zinc-50[data-state=checked]:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(250 250 250/var(--tw-bg-opacity,1))}.dark\\:data-\\[state\\=open\\]\\:rf-bg-zinc-800[data-state=open]:is(.rf-dark *){--tw-bg-opacity:1;background-color:rgb(39 39 42/var(--tw-bg-opacity,1))}.dark\\:data-\\[state\\=active\\]\\:rf-text-zinc-50[data-state=active]:is(.rf-dark *){--tw-text-opacity:1;color:rgb(250 250 250/var(--tw-text-opacity,1))}.dark\\:data-\\[state\\=checked\\]\\:rf-text-zinc-900[data-state=checked]:is(.rf-dark *){--tw-text-opacity:1;color:rgb(24 24 27/var(--tw-text-opacity,1))}@media (min-width:640px){.sm\\:rf-order-1{order:1}.sm\\:rf-order-2{order:2}.sm\\:rf-mt-0{margin-top:0}.sm\\:rf-inline{display:inline}.sm\\:rf-hidden{display:none}.sm\\:rf-w-auto{width:auto}.sm\\:rf-flex-row{flex-direction:row}.sm\\:rf-items-center{align-items:center}.sm\\:rf-justify-end{justify-content:flex-end}.sm\\:rf-gap-3{gap:.75rem}.sm\\:rf-space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(.5rem*var(--tw-space-x-reverse))}.sm\\:rf-rounded-lg{border-radius:var(--radius)}.sm\\:rf-px-4{padding-left:1rem;padding-right:1rem}.sm\\:rf-text-left{text-align:left}.sm\\:rf-text-sm{font-size:.875rem;line-height:1.25rem}.sm\\:rf-text-xl{font-size:1.25rem;line-height:1.75rem}}@media (min-width:768px){.md\\:rf-grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}.\\[\\&\\>span\\]\\:rf-line-clamp-1>span{display:-webkit-box;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1}.\\[\\&\\>svg\\]\\:rf-size-4>svg{height:1rem;width:1rem}.\\[\\&\\>svg\\]\\:rf-shrink-0>svg{flex-shrink:0}.\\[\\&\\>svg\\]\\:rf-text-red-300>svg{--tw-text-opacity:1;color:rgb(252 165 165/var(--tw-text-opacity,1))}.\\[\\&\\>svg\\]\\:hover\\:rf-text-red-400:hover>svg{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity,1))}.\\[\\&_svg\\]\\:rf-pointer-events-none svg{pointer-events:none}.\\[\\&_svg\\]\\:rf-size-4 svg{height:1rem;width:1rem}.\\[\\&_svg\\]\\:rf-shrink-0 svg{flex-shrink:0}';

// lib/hooks/use-styles.ts
var useStyles = () => {
  useEffect(() => {
    const existingStyle = document.querySelector(
      'style[data-styles="tscircuit-runframe"]'
    );
    if (existingStyle) return;
    const styleElement = document.createElement("style");
    styleElement.setAttribute("data-styles", "tscircuit-runframe");
    styleElement.textContent = styles_generated_default;
    document.head.appendChild(styleElement);
  }, []);
};

// lib/hooks/use-fullscreen-body-scroll.ts
import { useEffect as useEffect2 } from "react";
var useFullscreenBodyScroll = (isFullScreen) => {
  useEffect2(() => {
    if (isFullScreen) {
      document.body.style.overflow = "hidden";
    } else {
      document.body.style.overflow = "";
    }
    return () => {
      document.body.style.overflow = "";
    };
  }, [isFullScreen]);
};

// lib/components/RenderLogViewer/RenderLogViewer.tsx
import { orderedRenderPhases as orderedRenderPhases2 } from "@tscircuit/core";
import { useState as useState4 } from "react";

// lib/components/RenderLogViewer/RenderTimingsBar.tsx
import { orderedRenderPhases } from "@tscircuit/core";
import "react";
import { jsx as jsx14, jsxs as jsxs10 } from "react/jsx-runtime";
var getPhaseColor = (phase) => {
  const index = orderedRenderPhases.indexOf(phase);
  const hue = index * 137.5 % 360;
  return `hsl(${hue}, 70%, 50%)`;
};
var RenderTimingsBar = ({
  phaseTimings
}) => {
  if (!phaseTimings) return null;
  const totalTime = Object.values(phaseTimings).reduce(
    (sum, time) => sum + time,
    0
  );
  return /* @__PURE__ */ jsxs10("div", { className: "rf-space-y-2 rf-w-full rf-px-4", children: [
    /* @__PURE__ */ jsx14("div", { className: "rf-relative rf-h-8 rf-flex rf-rounded-sm", children: orderedRenderPhases.map((phase) => {
      const time = phaseTimings[phase] || 0;
      const width = time / totalTime * 100;
      return /* @__PURE__ */ jsx14(
        "div",
        {
          className: "rf-group/bar rf-relative rf-overflow-visible",
          style: {
            width: `${width}%`,
            backgroundColor: getPhaseColor(phase)
          },
          children: /* @__PURE__ */ jsxs10("div", { className: "rf-opacity-0 group-hover/bar:rf-opacity-100 rf-transition-opacity rf-absolute rf-bottom-full rf-left-1/2 rf-transform -rf-translate-x-1/2 rf-mb-2 rf-px-2 rf-py-1 rf-text-xs rf-whitespace-nowrap rf-rounded rf-bg-gray-900 rf-text-white rf-pointer-events-none", children: [
            phase,
            ": ",
            time.toFixed(1),
            "ms"
          ] })
        },
        phase
      );
    }) }),
    /* @__PURE__ */ jsxs10("div", { className: "rf-text-xs rf-text-gray-500", children: [
      "Total: ",
      totalTime.toFixed(2),
      "ms"
    ] })
  ] });
};
var RenderTimingsBar_default = RenderTimingsBar;

// lib/components/RenderLogViewer/RenderLogViewer.tsx
import { jsx as jsx15, jsxs as jsxs11 } from "react/jsx-runtime";
var RenderLogViewer = ({
  renderLog
}) => {
  const [sortOption, setSortOption] = useState4(
    "chronological"
  );
  if (!renderLog)
    return /* @__PURE__ */ jsx15("div", { className: "rf-p-4 rf-bg-gray-100 rf-rounded-md", children: "No render log, make sure this tab is open when you render (TODO add a rerender button here)" });
  const orderedPhaseTimings = Object.entries(renderLog?.phaseTimings ?? {});
  if (sortOption === "chronological") {
    orderedPhaseTimings.sort(
      (a, b) => orderedRenderPhases2.indexOf(a[0]) - orderedRenderPhases2.indexOf(b[0])
    );
  } else {
    orderedPhaseTimings.sort((a, b) => b[1] - a[1]);
  }
  const totalTime = orderedPhaseTimings.reduce(
    (sum, [_, time]) => sum + time,
    0
  );
  return /* @__PURE__ */ jsxs11("div", { className: "rf-bg-white", children: [
    /* @__PURE__ */ jsxs11("div", { className: "rf-flex rf-justify-between rf-items-center", children: [
      /* @__PURE__ */ jsx15("div", { children: "Render Logs" }),
      /* @__PURE__ */ jsxs11("div", { className: "rf-mb-4 rf-pr-2 rf-flex rf-text-xs rf-items-center", children: [
        /* @__PURE__ */ jsx15("div", { className: "rf-mr-2", children: "Sort by:" }),
        /* @__PURE__ */ jsxs11(
          "select",
          {
            value: sortOption,
            onChange: (e) => setSortOption(e.target.value),
            className: "rf-px-2 rf-py-1 rf-border rf-rounded rf-text-xs",
            children: [
              /* @__PURE__ */ jsx15("option", { value: "chronological", children: "Phase Order" }),
              /* @__PURE__ */ jsx15("option", { value: "longest", children: "Duration" })
            ]
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ jsx15(RenderTimingsBar_default, { phaseTimings: renderLog.phaseTimings }),
    /* @__PURE__ */ jsxs11("table", { className: "rf-w-full rf-text-xs", children: [
      /* @__PURE__ */ jsx15("thead", { children: /* @__PURE__ */ jsxs11("tr", { children: [
        /* @__PURE__ */ jsx15("th", { className: "rf-text-left rf-p-2", children: "Phase Order" }),
        /* @__PURE__ */ jsx15("th", { className: "rf-text-left rf-p-2", children: "Phase" }),
        /* @__PURE__ */ jsx15("th", { className: "rf-text-left rf-p-2", children: "Duration (ms)" })
      ] }) }),
      /* @__PURE__ */ jsx15("tbody", { children: orderedPhaseTimings.map(([phase, duration]) => /* @__PURE__ */ jsxs11("tr", { children: [
        /* @__PURE__ */ jsx15("td", { className: "rf-p-2", children: orderedRenderPhases2.indexOf(phase) }),
        /* @__PURE__ */ jsx15("td", { className: "rf-p-2", children: phase }),
        /* @__PURE__ */ jsx15("td", { className: "rf-p-2", children: /* @__PURE__ */ jsx15("div", { className: "rf-w-8", children: /* @__PURE__ */ jsx15(
          "div",
          {
            className: "rf-h-2 rf-rounded-sm",
            style: {
              backgroundColor: getPhaseColor(phase),
              width: `${duration / totalTime * 100}%`
            }
          }
        ) }) }),
        /* @__PURE__ */ jsx15("td", { className: "rf-p-2", children: /* @__PURE__ */ jsxs11("div", { className: "rf-flex w-full", children: [
          /* @__PURE__ */ jsxs11("span", { className: "rf-flex-grow", children: [
            duration,
            "ms"
          ] }),
          /* @__PURE__ */ jsxs11("span", { className: "rf-text-gray-500 rf-pr-2", children: [
            (duration / totalTime * 100).toFixed(1),
            "%"
          ] })
        ] }) })
      ] }, phase)) })
    ] })
  ] });
};

// lib/hooks/use-error-telemetry.ts
import { useEffect as useEffect3 } from "react";
var useErrorTelemetry = ({
  errorMessage,
  errorStack,
  circuitJsonErrors
}) => {
  useEffect3(() => {
    if (errorMessage) {
      const err = new Error(errorMessage);
      if (errorStack) err.stack = errorStack;
      try {
        posthog.captureException(err);
      } catch {
      }
    }
  }, [errorMessage, errorStack]);
  useEffect3(() => {
    if (circuitJsonErrors && circuitJsonErrors.length > 0) {
      for (const error of circuitJsonErrors) {
        const err = new Error(error.message || "Circuit JSON Error");
        if (error.stack) {
          ;
          err.stack = error.stack;
        }
        try {
          posthog.captureException(err, { error_type: error.type });
        } catch {
        }
      }
    }
  }, [circuitJsonErrors]);
};

// package.json
var version = "0.0.711";

// lib/components/RunFrame/runner-store/use-runner-store.ts
import { create } from "zustand";
import { devtools } from "zustand/middleware";
var useRunnerStore = create()(
  devtools(
    (set) => ({
      lastRunEvalVersion: void 0,
      setLastRunEvalVersion: (version2) => {
        set({ lastRunEvalVersion: version2 });
      }
    }),
    { name: "runframe-runner-store" }
  )
);

// lib/components/CircuitJsonPreview/CircuitJsonPreview.tsx
import { jsx as jsx16, jsxs as jsxs12 } from "react/jsx-runtime";
var dropdownMenuItems = [
  "assembly",
  "bom",
  "circuit_json",
  "errors",
  "render_log"
];
var CircuitJsonPreview = ({
  code,
  onRunClicked = void 0,
  errorMessage,
  errorStack,
  circuitJson,
  autoroutingGraphics,
  showRightHeaderContent = true,
  showCodeTab = false,
  codeTabContent,
  showJsonTab = true,
  showRenderLogTab = true,
  onActiveTabChange,
  renderLog,
  showImportAndFormatButtons = true,
  className,
  headerClassName,
  leftHeaderContent,
  readOnly,
  isStreaming,
  autoroutingLog,
  onReportAutoroutingLog,
  isRunningCode,
  hasCodeChangedSinceLastRun,
  onEditEvent,
  editEvents,
  defaultActiveTab,
  defaultTab,
  availableTabs,
  autoRotate3dViewerDisabled,
  showSchematicDebugGrid = false,
  showToggleFullScreen = true,
  defaultToFullScreen = false,
  activeEffectName
}) => {
  useStyles();
  const lastRunEvalVersion = useRunnerStore((s) => s.lastRunEvalVersion);
  const circuitJsonErrors = useMemo2(() => {
    if (!circuitJson) return null;
    return circuitJson.filter(
      (e) => e && "error_type" in e || e.type.includes("error")
    );
  }, [circuitJson]);
  const circuitJsonWarnings = useMemo2(() => {
    if (!circuitJson) return null;
    return circuitJson.filter(
      (e) => e && "warning_type" in e || e.type.includes("warning")
    );
  }, [circuitJson]);
  useErrorTelemetry({
    errorMessage,
    errorStack,
    circuitJsonErrors
  });
  const [activeTab, setActiveTabState] = useState5(
    defaultActiveTab ?? defaultTab ?? availableTabs?.[0] ?? "pcb"
  );
  const [lastActiveTab, setLastActiveTab] = useState5(null);
  const [isFullScreen, setIsFullScreen] = useState5(defaultToFullScreen);
  useFullscreenBodyScroll(isFullScreen);
  const setActiveTab = useCallback(
    (tab) => {
      setActiveTabState(tab);
      onActiveTabChange?.(tab);
    },
    [onActiveTabChange]
  );
  const toggleFullScreen = () => {
    setIsFullScreen(!isFullScreen);
  };
  useEffect4(() => {
    if (errorMessage) {
      if (activeTab !== "errors") {
        setLastActiveTab(activeTab);
      }
      setActiveTab("errors");
    }
  }, [errorMessage]);
  useEffect4(() => {
    if ((activeTab === "code" || activeTab === "errors") && circuitJson && !errorMessage) {
      setActiveTab(
        lastActiveTab ?? defaultActiveTab ?? defaultTab ?? availableTabs?.[0] ?? "pcb"
      );
    }
  }, [circuitJson]);
  const setCadViewerRef = useCallback((value) => {
    window.TSCIRCUIT_3D_OBJECT_REF = value === null ? void 0 : value;
  }, []);
  return /* @__PURE__ */ jsx16(
    "div",
    {
      className: cn(
        "flex flex-col relative rf-overflow-x-hidden rf-h-full",
        className
      ),
      children: /* @__PURE__ */ jsx16(
        "div",
        {
          className: cn(
            "rf-md:sticky rf-md:top-2 rf-h-full",
            isFullScreen && "rf-fixed rf-top-0 rf-left-0 rf-w-full rf-h-full rf-bg-white rf-overflow-hidden"
          ),
          children: /* @__PURE__ */ jsxs12(
            Tabs,
            {
              value: activeTab,
              onValueChange: setActiveTab,
              className: "rf-flex-grow rf-flex rf-flex-col rf-h-full",
              children: [
                /* @__PURE__ */ jsxs12(
                  "div",
                  {
                    className: cn(
                      "rf-flex rf-items-center rf-gap-2 rf-p-2 rf-pb-0",
                      headerClassName
                    ),
                    children: [
                      leftHeaderContent,
                      leftHeaderContent && /* @__PURE__ */ jsx16("div", { className: "rf-flex-grow" }),
                      !leftHeaderContent && isRunningCode && /* @__PURE__ */ jsx16(Loader2, { className: "rf-w-4 rf-h-4 rf-animate-spin" }),
                      !leftHeaderContent && /* @__PURE__ */ jsx16("div", { className: "rf-flex-grow" }),
                      renderLog && renderLog.progress !== 1 && !errorMessage && /* @__PURE__ */ jsxs12("div", { className: "rf-flex rf-items-center rf-gap-2", children: [
                        activeEffectName ? /* @__PURE__ */ jsx16("div", { className: "rf-text-xs rf-text-gray-500", children: activeEffectName }) : renderLog.lastRenderEvent && /* @__PURE__ */ jsx16("div", { className: "rf-text-xs rf-text-gray-500", children: renderLog.lastRenderEvent?.phase ?? "" }),
                        /* @__PURE__ */ jsx16("div", { className: "rf-w-4 rf-h-4 rf-bg-blue-500 rf-opacity-50 rf-rounded-full rf-text-white", children: /* @__PURE__ */ jsx16(LoaderCircleIcon, { className: "rf-w-4 rf-h-4 rf-animate-spin" }) }),
                        /* @__PURE__ */ jsxs12("div", { className: "rf-text-xs rf-font-bold rf-text-gray-700 rf-tabular-nums", children: [
                          ((renderLog.progress ?? 0) * 100).toFixed(1),
                          "%"
                        ] })
                      ] }),
                      showRightHeaderContent && /* @__PURE__ */ jsxs12(TabsList, { children: [
                        showCodeTab && /* @__PURE__ */ jsx16(TabsTrigger, { value: "code", children: "Code" }),
                        !availableTabs || availableTabs.includes("pcb") ? /* @__PURE__ */ jsxs12(TabsTrigger, { value: "pcb", className: "rf-whitespace-nowrap", children: [
                          circuitJson && /* @__PURE__ */ jsx16(
                            "span",
                            {
                              className: cn(
                                "rf-inline-flex rf-items-center rf-justify-center rf-w-2 rf-h-2 rf-mr-1 rf-text-xs rf-font-bold rf-text-white rf-rounded-full",
                                !hasCodeChangedSinceLastRun ? "rf-bg-blue-500" : "rf-bg-gray-500"
                              )
                            }
                          ),
                          "PCB"
                        ] }) : null,
                        !availableTabs || availableTabs.includes("schematic") ? /* @__PURE__ */ jsxs12(
                          TabsTrigger,
                          {
                            value: "schematic",
                            className: "rf-whitespace-nowrap",
                            children: [
                              circuitJson && /* @__PURE__ */ jsx16(
                                "span",
                                {
                                  className: cn(
                                    "rf-inline-flex rf-items-center rf-justify-center rf-w-2 rf-h-2 rf-mr-1 rf-text-xs rf-font-bold rf-text-white rf-rounded-full",
                                    !hasCodeChangedSinceLastRun ? "rf-bg-blue-500" : "rf-bg-gray-500"
                                  )
                                }
                              ),
                              "Schematic"
                            ]
                          }
                        ) : null,
                        !availableTabs || availableTabs.includes("cad") ? /* @__PURE__ */ jsxs12(TabsTrigger, { value: "cad", children: [
                          circuitJson && /* @__PURE__ */ jsx16(
                            "span",
                            {
                              className: cn(
                                "inline-flex items-center justify-center w-2 h-2 mr-1 text-xs font-bold text-white rounded-full",
                                !hasCodeChangedSinceLastRun ? "rf-bg-blue-500" : "rf-bg-gray-500"
                              )
                            }
                          ),
                          "3D"
                        ] }) : null,
                        !["pcb", "cad", "schematic"].includes(activeTab) && /* @__PURE__ */ jsx16(TabsTrigger, { value: activeTab, children: capitalizeFirstLetters(activeTab) }),
                        /* @__PURE__ */ jsxs12(DropdownMenu, { children: [
                          /* @__PURE__ */ jsx16(DropdownMenuTrigger, { asChild: true, children: /* @__PURE__ */ jsxs12("div", { className: "rf-whitespace-nowrap rf-p-2 rf-mr-1 rf-cursor-pointer rf-relative", children: [
                            /* @__PURE__ */ jsx16(EllipsisIcon, { className: "rf-w-4 rf-h-4" }),
                            (circuitJsonErrors && circuitJsonErrors.length > 0 || errorMessage) && /* @__PURE__ */ jsx16("span", { className: "rf-inline-flex rf-absolute rf-top-[6px] rf-right-[4px] rf-items-center rf-justify-center rf-w-1 rf-h-1 rf-ml-2 rf-text-[8px] rf-font-bold rf-text-white rf-bg-red-500 rf-rounded-full" })
                          ] }) }),
                          /* @__PURE__ */ jsxs12(DropdownMenuContent, { className: "rf-*:text-xs", children: [
                            dropdownMenuItems.filter(
                              (item) => !availableTabs || availableTabs.includes(item)
                            ).map((item) => /* @__PURE__ */ jsxs12(
                              DropdownMenuItem,
                              {
                                onSelect: () => setActiveTab(item),
                                children: [
                                  activeTab !== item && /* @__PURE__ */ jsx16(Circle2, { className: "rf-w-3 rf-h-3 rf-opacity-30" }),
                                  activeTab === item && /* @__PURE__ */ jsx16(CheckIcon, { className: "rf-w-3 rf-h-3" }),
                                  /* @__PURE__ */ jsx16("div", { className: "rf-pr-2", children: capitalizeFirstLetters(item) }),
                                  item === "errors" && (circuitJsonErrors && circuitJsonErrors.length > 0 || errorMessage) && /* @__PURE__ */ jsx16("span", { className: "rf-inline-flex rf-items-center rf-justify-center rf-w-3 rf-h-3 rf-ml-2 rf-text-[8px] rf-font-bold rf-text-white rf-bg-red-500 rf-rounded-full", children: errorMessage ? 1 : circuitJsonErrors?.length })
                                ]
                              },
                              item
                            )),
                            /* @__PURE__ */ jsx16(
                              DropdownMenuItem,
                              {
                                disabled: true,
                                className: "rf-opacity-60 rf-cursor-default rf-select-none",
                                children: /* @__PURE__ */ jsxs12("div", { className: "rf-pr-2 rf-text-xs rf-text-gray-500", children: [
                                  "@tscircuit/runframe@",
                                  version.split(".").map(
                                    (part, i) => i === 2 ? parseInt(part) + 1 : part
                                  ).join(".")
                                ] })
                              }
                            ),
                            lastRunEvalVersion && /* @__PURE__ */ jsx16(
                              DropdownMenuItem,
                              {
                                disabled: true,
                                className: "rf-opacity-60 rf-cursor-default rf-select-none",
                                children: /* @__PURE__ */ jsxs12("div", { className: "rf-pr-2 rf-text-xs rf-text-gray-500", children: [
                                  "@tscircuit/eval@",
                                  lastRunEvalVersion
                                ] })
                              }
                            )
                          ] })
                        ] })
                      ] }),
                      showToggleFullScreen && /* @__PURE__ */ jsx16(Button, { onClick: toggleFullScreen, variant: "ghost", children: isFullScreen ? /* @__PURE__ */ jsx16(MinimizeIcon, { size: 16 }) : /* @__PURE__ */ jsx16(FullscreenIcon, { size: 16 }) })
                    ]
                  }
                ),
                showCodeTab && /* @__PURE__ */ jsx16(
                  TabsContent,
                  {
                    value: "code",
                    className: "rf-flex-grow rf-overflow-hidden",
                    children: /* @__PURE__ */ jsx16("div", { className: "rf-h-full", children: codeTabContent })
                  }
                ),
                (!availableTabs || availableTabs.includes("pcb")) && /* @__PURE__ */ jsx16(TabsContent, { value: "pcb", children: /* @__PURE__ */ jsx16(
                  "div",
                  {
                    className: cn(
                      "rf-overflow-hidden",
                      isFullScreen ? "rf-h-[calc(100vh-52px)]" : "rf-h-full"
                    ),
                    children: /* @__PURE__ */ jsx16(
                      ErrorBoundary,
                      {
                        fallbackRender: ({ error }) => /* @__PURE__ */ jsx16("div", { className: "rf-mt-4 rf-bg-red-50 rf-rounded-md rf-border rf-border-red-200", children: /* @__PURE__ */ jsxs12("div", { className: "rf-p-4", children: [
                          /* @__PURE__ */ jsx16("h3", { className: "rf-text-lg rf-font-semibold rf-text-red-800 rf-mb-3", children: "Error loading PCB viewer" }),
                          /* @__PURE__ */ jsx16("p", { className: "rf-text-xs rf-font-mono rf-whitespace-pre-wrap rf-text-red-600 rf-mt-2", children: error?.message || "An unknown error occurred" })
                        ] }) }),
                        children: circuitJson ? /* @__PURE__ */ jsx16(
                          PcbViewerWithContainerHeight,
                          {
                            focusOnHover: false,
                            circuitJson,
                            debugGraphics: autoroutingGraphics,
                            containerClassName: cn(
                              "rf-h-full rf-w-full",
                              isFullScreen ? "rf-min-h-[calc(100vh-240px)]" : "rf-min-h-[620px]"
                            ),
                            onEditEventsChanged: (editEvents2) => {
                              if (onEditEvent) {
                                editEvents2.forEach((e) => onEditEvent(e));
                              }
                            }
                          }
                        ) : /* @__PURE__ */ jsx16(PreviewEmptyState_default, { onRunClicked })
                      }
                    )
                  }
                ) }),
                (!availableTabs || availableTabs.includes("assembly")) && /* @__PURE__ */ jsx16(TabsContent, { value: "assembly", children: /* @__PURE__ */ jsx16(
                  "div",
                  {
                    className: cn(
                      "rf-overflow-auto",
                      isFullScreen ? "rf-h-screen" : "rf-h-full  rf-min-h-[620px]"
                    ),
                    children: /* @__PURE__ */ jsx16(ErrorBoundary, { fallback: /* @__PURE__ */ jsx16("div", { children: "Error loading Assembly" }), children: circuitJson ? /* @__PURE__ */ jsx16(
                      AssemblyViewer,
                      {
                        circuitJson,
                        containerStyle: {
                          height: "100%"
                        },
                        editingEnabled: true,
                        debugGrid: true
                      }
                    ) : /* @__PURE__ */ jsx16(PreviewEmptyState_default, { onRunClicked }) })
                  }
                ) }),
                (!availableTabs || availableTabs.includes("schematic")) && /* @__PURE__ */ jsx16(TabsContent, { value: "schematic", children: /* @__PURE__ */ jsx16(
                  "div",
                  {
                    className: cn(
                      "rf-overflow-auto rf-bg-white",
                      isFullScreen ? "rf-h-screen" : "rf-h-full  rf-min-h-[620px]"
                    ),
                    children: /* @__PURE__ */ jsx16(
                      ErrorBoundary,
                      {
                        fallbackRender: ({ error }) => /* @__PURE__ */ jsx16("div", { className: "rf-mt-4 rf-bg-red-50 rf-rounded-md rf-border rf-border-red-200", children: /* @__PURE__ */ jsxs12("div", { className: "rf-p-4", children: [
                          /* @__PURE__ */ jsx16("h3", { className: "rf-text-lg rf-font-semibold rf-text-red-800 rf-mb-3", children: "Error loading Schematic" }),
                          /* @__PURE__ */ jsx16("p", { className: "rf-text-xs rf-font-mono rf-whitespace-pre-wrap rf-text-red-600 rf-mt-2", children: error?.message || "An unknown error occurred" })
                        ] }) }),
                        children: circuitJson ? /* @__PURE__ */ jsx16(
                          SchematicViewer,
                          {
                            circuitJson,
                            containerStyle: {
                              height: "100%"
                            },
                            editingEnabled: true,
                            onEditEvent: (ee) => {
                              onEditEvent?.(ee);
                            },
                            debugGrid: showSchematicDebugGrid
                          }
                        ) : /* @__PURE__ */ jsx16(PreviewEmptyState_default, { onRunClicked })
                      }
                    )
                  }
                ) }),
                (!availableTabs || availableTabs.includes("cad")) && /* @__PURE__ */ jsx16(TabsContent, { value: "cad", children: /* @__PURE__ */ jsx16(
                  "div",
                  {
                    className: cn(
                      "rf-overflow-auto",
                      isFullScreen ? "rf-h-screen" : "rf-h-full  rf-min-h-[620px]"
                    ),
                    children: /* @__PURE__ */ jsx16(ErrorBoundary, { FallbackComponent: ErrorFallback, children: circuitJson ? /* @__PURE__ */ jsx16(
                      CadViewer,
                      {
                        ref: setCadViewerRef,
                        circuitJson,
                        autoRotateDisabled: autoRotate3dViewerDisabled
                      }
                    ) : /* @__PURE__ */ jsx16(PreviewEmptyState_default, { onRunClicked }) })
                  }
                ) }),
                (!availableTabs || availableTabs.includes("bom")) && /* @__PURE__ */ jsx16(TabsContent, { value: "bom", children: /* @__PURE__ */ jsx16(
                  "div",
                  {
                    className: cn(
                      "rf-overflow-auto",
                      isFullScreen ? "rf-h-screen" : "rf-h-full  rf-min-h-[620px]"
                    ),
                    children: /* @__PURE__ */ jsx16(
                      ErrorBoundary,
                      {
                        fallbackRender: ({ error }) => /* @__PURE__ */ jsx16("div", { className: "rf-mt-4 rf-bg-red-50 rf-rounded-md rf-border rf-border-red-200", children: /* @__PURE__ */ jsxs12("div", { className: "rf-p-4", children: [
                          /* @__PURE__ */ jsx16("h3", { className: "rf-text-lg rf-font-semibold rf-text-red-800 rf-mb-3", children: "Error loading Bill of Materials" }),
                          /* @__PURE__ */ jsx16("p", { className: "rf-text-xs rf-font-mono rf-whitespace-pre-wrap rf-text-red-600 rf-mt-2", children: error?.message || "An unknown error occurred" })
                        ] }) }),
                        children: circuitJson ? /* @__PURE__ */ jsx16(BomTable, { circuitJson }) : /* @__PURE__ */ jsx16(PreviewEmptyState_default, { onRunClicked })
                      }
                    )
                  }
                ) }),
                (!availableTabs || availableTabs.includes("circuit_json")) && /* @__PURE__ */ jsx16(TabsContent, { value: "circuit_json", children: /* @__PURE__ */ jsx16(
                  "div",
                  {
                    className: cn(
                      "rf-overflow-auto",
                      isFullScreen ? "rf-h-screen" : "rf-h-full  rf-min-h-[620px]"
                    ),
                    children: /* @__PURE__ */ jsx16(ErrorBoundary, { fallback: /* @__PURE__ */ jsx16("div", { children: "Error loading JSON viewer" }), children: circuitJson ? /* @__PURE__ */ jsx16(CircuitJsonTableViewer, { elements: circuitJson }) : /* @__PURE__ */ jsx16(PreviewEmptyState_default, { onRunClicked }) })
                  }
                ) }),
                (!availableTabs || availableTabs.includes("errors")) && /* @__PURE__ */ jsx16(TabsContent, { value: "errors", children: /* @__PURE__ */ jsx16(
                  "div",
                  {
                    className: cn(
                      "rf-overflow-auto",
                      isFullScreen ? "rf-h-screen" : "rf-h-full  rf-min-h-[620px]"
                    ),
                    children: errorMessage || circuitJsonErrors && circuitJsonErrors.length > 0 || circuitJson ? /* @__PURE__ */ jsx16(
                      ErrorTabContent,
                      {
                        code,
                        circuitJsonErrors,
                        circuitJsonWarnings,
                        errorMessage,
                        errorStack,
                        circuitJson,
                        evalVersion: lastRunEvalVersion,
                        autoroutingLog,
                        onReportAutoroutingLog
                      }
                    ) : /* @__PURE__ */ jsx16(PreviewEmptyState_default, { onRunClicked })
                  }
                ) }),
                showRenderLogTab && (!availableTabs || availableTabs.includes("render_log")) && /* @__PURE__ */ jsx16(TabsContent, { value: "render_log", children: /* @__PURE__ */ jsx16(RenderLogViewer, { renderLog }) })
              ]
            }
          )
        }
      )
    }
  );
};

// lib/preview.ts
import { CadViewer as CadViewer2 } from "@tscircuit/3d-viewer";
import { PCBViewer as PCBViewer2 } from "@tscircuit/pcb-viewer";
import { SchematicViewer as SchematicViewer2 } from "@tscircuit/schematic-viewer";

// lib/components/RunFrameWithApi/store.ts
import { applyEditEventsToManualEditsFile } from "@tscircuit/core";

// lib/utils/debug.ts
import Debug from "debug";
var debug = Debug("run-frame");
var debug_default = debug;

// lib/components/RunFrameWithApi/store.ts
import { create as create2 } from "zustand";
import { devtools as devtools2 } from "zustand/middleware";

// lib/components/RunFrameWithApi/api-base.ts
var API_BASE = window.TSCIRCUIT_FILESERVER_API_BASE_URL ?? "/api";

// lib/components/RunFrameWithApi/store.ts
var debug2 = debug_default.extend("store");
async function upsertFileApi(path, content) {
  const response = await fetch(`${API_BASE}/files/upsert`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ file_path: path, text_content: content })
  });
  const data = await response.json();
  return data.file;
}
async function getFileApi(path) {
  const response = await fetch(
    `${API_BASE}/files/get?file_path=${encodeURIComponent(path)}`
  );
  const data = await response.json();
  return data.file;
}
async function getEvents(since) {
  const url = since ? `${API_BASE}/events/list?since=${encodeURIComponent(since)}` : `${API_BASE}/events/list`;
  const response = await fetch(url);
  const data = await response.json();
  return data.event_list;
}
async function getInitialFilesApi() {
  const response = await fetch(`${API_BASE}/files/list`);
  const { file_list } = await response.json();
  const fileMap = /* @__PURE__ */ new Map();
  for (const file of file_list) {
    const fullFile = await getFileApi(file.file_path);
    fileMap.set(file.file_path, fullFile.text_content);
  }
  return fileMap;
}
var useRunFrameStore = create2()(
  devtools2(
    (set, get) => ({
      fsMap: /* @__PURE__ */ new Map(),
      lastEventTime: (/* @__PURE__ */ new Date()).toISOString(),
      isPolling: false,
      error: null,
      circuitJson: null,
      lastManualEditsChangeSentAt: 0,
      recentEvents: [],
      simulateScenarioOrder: void 0,
      loadInitialFiles: async () => {
        const fsMap = await getInitialFilesApi();
        debug2("loaded initial files", { fsMap });
        set({ fsMap });
      },
      upsertFile: async (path, content) => {
        try {
          const file = await upsertFileApi(path, content);
          set((state) => ({
            fsMap: new Map(state.fsMap).set(file.file_path, file.text_content)
          }));
        } catch (error) {
          set({ error });
        }
      },
      getFile: async (path) => {
        try {
          const file = await getFileApi(path);
          set((state) => ({
            fsMap: new Map(state.fsMap).set(file.file_path, file.text_content)
          }));
        } catch (error) {
          set({ error });
        }
      },
      setCircuitJson: (circuitJson) => {
        if (circuitJson === get().circuitJson) return;
        set({ circuitJson });
      },
      startPolling: () => {
        const poll = async () => {
          const state = get();
          if (!state.isPolling) return;
          try {
            const events = await getEvents(state.lastEventTime);
            if (events.length > 0) {
              set((state2) => ({
                recentEvents: [...state2.recentEvents, ...events].slice(0, 100)
                // TODO sort
                // .sort((a, b) => b.created_at.localeCompare(a.created_at)),
              }));
              const newLastEventTime = events[events.length - 1].created_at;
              const updates = new Map(state.fsMap);
              for (const event of events) {
                if (event.event_type === "FILE_UPDATED") {
                  const file = await getFileApi(event.file_path);
                  if (event.file_path === "manual_edits.json" && Date.now() - state.lastManualEditsChangeSentAt < 1e3) {
                    continue;
                  }
                  updates.set(file.file_path, file.text_content);
                }
              }
              set({
                fsMap: updates,
                lastEventTime: newLastEventTime
              });
            }
          } catch (error) {
            set({ error });
          }
          setTimeout(poll, 1e3);
        };
        set({ isPolling: true });
        poll();
      },
      stopPolling: () => {
        set({ isPolling: false });
      },
      pushEvent: async (event) => {
        await fetch(
          `${window.TSCIRCUIT_FILESERVER_API_BASE_URL ?? ""}/api/events/create`,
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify(event)
          }
        );
      },
      applyEditEventsAndUpdateManualEditsJson: async (editEvents) => {
        debug2("applyEditEventsAndUpdateManualEditsJson", { editEvents });
        const state = get();
        if (!state.circuitJson) return;
        const manualEditsJson = state.fsMap.get("manual-edits.json");
        const manualEdits = manualEditsJson ? JSON.parse(manualEditsJson) : {};
        const updatedManualEditsFileContent = applyEditEventsToManualEditsFile({
          circuitJson: state.circuitJson,
          editEvents,
          manualEditsFile: manualEdits
        });
        debug2("updatedManualEditsFileContent", updatedManualEditsFileContent);
        set((state2) => ({
          lastManualEditsChangeSentAt: Date.now(),
          fsMap: new Map(state2.fsMap).set(
            "manual-edits.json",
            JSON.stringify(updatedManualEditsFileContent)
          )
        }));
        await upsertFileApi(
          "manual-edits.json",
          JSON.stringify(updatedManualEditsFileContent, null, 2)
        );
      },
      setSimulateScenarioOrder: (scenarioOrder) => set({ simulateScenarioOrder: scenarioOrder })
    }),
    { name: "run-frame-store" }
  )
);

// lib/components/ui/dialog.tsx
import * as React6 from "react";
import * as DialogPrimitive from "@radix-ui/react-dialog";
import { jsx as jsx17, jsxs as jsxs13 } from "react/jsx-runtime";
var Dialog = DialogPrimitive.Root;
var DialogPortal = DialogPrimitive.Portal;
var DialogOverlay = React6.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx17(
  DialogPrimitive.Overlay,
  {
    className: cn(
      "rf-fixed rf-inset-0 rf-z-50 rf-bg-black/80 data-[state=open]:rf-animate-in data-[state=closed]:rf-animate-out data-[state=closed]:rf-fade-out-0 data-[state=open]:rf-fade-in-0",
      className
    ),
    ...props,
    ref
  }
));
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName;
var DialogContent = React6.forwardRef(({ className, children, showOverlay = true, ...props }, ref) => /* @__PURE__ */ jsxs13(DialogPortal, { children: [
  /* @__PURE__ */ jsx17(DialogOverlay, { className: cn(showOverlay ? "" : "rf-hidden") }),
  /* @__PURE__ */ jsx17(
    DialogPrimitive.Content,
    {
      ref,
      className: cn(
        "rf-fixed rf-left-[50%] rf-top-[50%] rf-z-50 rf-grid rf-w-full rf-max-w-lg rf-translate-x-[-50%] rf-translate-y-[-50%] rf-gap-4 rf-border rf-border-zinc-200 rf-bg-white rf-p-6 rf-shadow-lg rf-duration-200 data-[state=open]:rf-animate-in data-[state=closed]:rf-animate-out data-[state=closed]:rf-fade-out-0 data-[state=open]:rf-fade-in-0 data-[state=closed]:rf-zoom-out-95 data-[state=open]:rf-zoom-in-95 data-[state=closed]:rf-slide-out-to-left-1/2 data-[state=closed]:rf-slide-out-to-top-[48%] data-[state=open]:rf-slide-in-from-left-1/2 data-[state=open]:rf-slide-in-from-top-[48%] sm:rf-rounded-lg dark:rf-border-zinc-800 dark:rf-bg-zinc-950",
        className
      ),
      ...props,
      children
    }
  )
] }));
DialogContent.displayName = DialogPrimitive.Content.displayName;
var DialogHeader = ({
  className,
  ...props
}) => /* @__PURE__ */ jsx17(
  "div",
  {
    className: cn(
      "rf-flex rf-flex-col rf-space-y-2 rf-text-center sm:rf-text-left",
      className
    ),
    ...props
  }
);
DialogHeader.displayName = "DialogHeader";
var DialogFooter = ({
  className,
  ...props
}) => /* @__PURE__ */ jsx17(
  "div",
  {
    className: cn(
      "rf-flex rf-flex-col-reverse sm:rf-flex-row sm:rf-justify-end sm:rf-space-x-2",
      className
    ),
    ...props
  }
);
DialogFooter.displayName = "DialogFooter";
var DialogTitle = React6.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx17(
  DialogPrimitive.Title,
  {
    ref,
    className: cn("rf-text-lg rf-font-semibold", className),
    ...props
  }
));
DialogTitle.displayName = DialogPrimitive.Title.displayName;
var DialogDescription = React6.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ jsx17(
  DialogPrimitive.Description,
  {
    ref,
    className: cn(
      "rf-text-sm rf-text-zinc-500 dark:rf-text-zinc-400",
      className
    ),
    ...props
  }
));
DialogDescription.displayName = DialogPrimitive.Description.displayName;

// lib/components/OrderDialog/OrderDialog.tsx
import { QueryClient, QueryClientProvider } from "react-query";

// lib/components/OrderDialog/InitialOrder.tsx
import { Loader2 as Loader22 } from "lucide-react";
import { GitHubLogoIcon as GitHubLogoIcon2 } from "@radix-ui/react-icons";
import { useEffect as useEffect5, useMemo as useMemo3, useState as useState6 } from "react";

// lib/components/OrderDialog/VendorQuoteCard.tsx
import { Truck, Package } from "lucide-react";
import { jsx as jsx18, jsxs as jsxs14 } from "react/jsx-runtime";
function VendorQuoteCard({
  orderQuote,
  selectedShippingCarrier,
  onSelectShippingCarrier,
  lowestShippingCarrierCost
}) {
  const selectedShipping = selectedShippingCarrier ? orderQuote.shipping_options.find(
    (ship) => ship.carrier === selectedShippingCarrier
  ) : null;
  return /* @__PURE__ */ jsxs14("div", { className: "rf-rounded-xl rf-bg-white rf-shadow-lg rf-border rf-border-gray-200", children: [
    /* @__PURE__ */ jsxs14("div", { className: "rf-flex rf-items-center rf-justify-between rf-px-6 rf-pt-4 rf-pb-2", children: [
      /* @__PURE__ */ jsxs14("div", { className: "rf-flex rf-items-center rf-gap-2", children: [
        /* @__PURE__ */ jsx18(Package, { className: "rf-w-6 rf-h-6 rf-text-blue-500" }),
        /* @__PURE__ */ jsx18("span", { className: "rf-font-semibold rf-text-lg", children: orderQuote.vendor_name.toUpperCase() })
      ] }),
      /* @__PURE__ */ jsxs14("div", { className: "rf-flex rf-flex-col rf-items-end", children: [
        /* @__PURE__ */ jsx18("span", { className: "rf-text-gray-500 rf-text-sm", children: "Fully Assembled PCB" }),
        /* @__PURE__ */ jsxs14("div", { className: "rf-flex rf-items-center rf-gap-2", children: [
          /* @__PURE__ */ jsxs14("span", { className: "rf-text-gray-400 rf-line-through rf-text-base", children: [
            "$",
            lowestShippingCarrierCost.toFixed(2)
          ] }),
          /* @__PURE__ */ jsx18("span", { className: "rf-font-bold rf-text-xl rf-text-blue-600", children: "$50.00" })
        ] })
      ] })
    ] }),
    /* @__PURE__ */ jsx18("hr", { className: "rf-border-gray-200" }),
    /* @__PURE__ */ jsxs14("div", { className: "rf-px-6 rf-pt-4 rf-pb-2", children: [
      /* @__PURE__ */ jsx18("div", { className: "rf-mb-2 rf-text-sm rf-font-bold rf-text-gray-700", children: "Shipping Options:" }),
      /* @__PURE__ */ jsx18("div", { className: "rf-flex rf-flex-col rf-gap-2 rf-mb-2", children: orderQuote.shipping_options.map((ship, idx) => /* @__PURE__ */ jsxs14(
        "button",
        {
          type: "button",
          className: cn(
            "rf-flex rf-items-center rf-gap-3 rf-px-4 rf-py-3 rf-rounded-lg rf-border rf-min-w-[148px] rf-transition-colors rf-bg-white",
            selectedShippingCarrier === ship.carrier ? "rf-border-blue-600 rf-bg-blue-50 rf-ring-2 rf-ring-blue-500" : "rf-border-gray-300 rf-bg-gray-50 hover:rf-border-blue-300"
          ),
          onClick: () => onSelectShippingCarrier(ship.carrier),
          children: [
            /* @__PURE__ */ jsx18(Truck, { className: "rf-w-5 rf-h-5 rf-text-yellow-500" }),
            /* @__PURE__ */ jsxs14("div", { className: "rf-text-left rf-flex-1", children: [
              /* @__PURE__ */ jsx18("div", { className: "rf-leading-tight rf-font-medium", children: ship.carrier }),
              /* @__PURE__ */ jsx18("div", { className: "rf-text-xs rf-text-gray-500", children: "Express, 5-12 days" })
            ] }),
            /* @__PURE__ */ jsxs14("div", { className: "rf-flex rf-flex-col rf-items-end rf-ml-2", children: [
              /* @__PURE__ */ jsxs14("span", { className: "rf-text-gray-400 rf-line-through rf-text-sm", children: [
                "$",
                ship.cost.toFixed(2)
              ] }),
              /* @__PURE__ */ jsx18("span", { className: "rf-text-xs rf-text-blue-600 rf-font-medium", children: "waived" })
            ] })
          ]
        },
        ship.carrier + idx
      )) })
    ] }),
    selectedShippingCarrier !== null && selectedShipping && /* @__PURE__ */ jsx18("div", { className: "rf-px-6 rf-pb-4 rf-pt-2", children: /* @__PURE__ */ jsxs14("div", { className: "rf-flex rf-justify-between rf-items-center rf-mt-3 rf-mb-2", children: [
      /* @__PURE__ */ jsx18("span", { className: "rf-text-gray-700 rf-font-bold", children: "Total (incl. shipping):" }),
      /* @__PURE__ */ jsxs14("div", { className: "rf-flex rf-flex-col rf-items-end", children: [
        /* @__PURE__ */ jsxs14("div", { className: "rf-text-gray-400 rf-line-through rf-text-base", children: [
          "$",
          (orderQuote.total_cost_without_shipping + selectedShipping.cost).toFixed(2)
        ] }),
        /* @__PURE__ */ jsx18("div", { className: "rf-flex rf-items-center", children: /* @__PURE__ */ jsx18("span", { className: "rf-font-bold rf-text-xl rf-text-blue-600", children: "$50.00" }) })
      ] })
    ] }) })
  ] });
}

// lib/utils/toast.ts
import { toast } from "react-hot-toast";

// lib/utils/get-registry-ky.ts
import ky from "ky";
function getWindowVar(name) {
  return typeof window !== "undefined" ? window[name] : null;
}
function getRegistryKy() {
  const registryApiBaseUrl = getWindowVar("TSCIRCUIT_REGISTRY_API_BASE_URL") || import.meta.env.VITE_TSCIRCUIT_REGISTRY_API_BASE_URL || "https://registry-api.tscircuit.com";
  const registryToken = getWindowVar("TSCIRCUIT_REGISTRY_TOKEN");
  return ky.create({
    prefixUrl: registryApiBaseUrl,
    headers: {
      Authorization: `Bearer ${registryToken}`
    },
    timeout: 3e4
  });
}
function hasRegistryToken() {
  return Boolean(getWindowVar("TSCIRCUIT_REGISTRY_TOKEN"));
}
var registryKy = {
  get: (url, options) => getRegistryKy().get(url, options),
  post: (url, options) => getRegistryKy().post(url, options),
  put: (url, options) => getRegistryKy().put(url, options),
  delete: (url, options) => getRegistryKy().delete(url, options),
  patch: (url, options) => getRegistryKy().patch(url, options)
};

// lib/hooks/use-create-order-quote.ts
import { useMutation } from "react-query";

// lib/api/order-quotes.ts
import { HTTPError } from "ky";
var createOrderQuote = async (packageReleaseId) => {
  try {
    const { order_quote_id } = await registryKy.post("order_quotes/create", {
      json: {
        package_release_id: packageReleaseId,
        vendor_name: "jlcpcb"
        // TODO: Remove this once we have more vendor
      }
    }).json();
    return {
      order_quote_id
    };
  } catch (error) {
    if (error instanceof HTTPError) {
      const errorBody = await error.response.json();
      throw {
        error: {
          message: errorBody.message,
          error_code: errorBody.error_code
        }
      };
    }
    throw error;
  }
};
var getOrderQuote = async (orderQuoteId) => {
  const { order_quote } = await registryKy.get(`order_quotes/get`, {
    searchParams: {
      order_quote_id: orderQuoteId
    }
  }).json();
  return order_quote;
};

// lib/hooks/use-create-order-quote.ts
import { useQueryClient } from "react-query";
var useCreateOrderQuote = () => {
  const queryClient2 = useQueryClient();
  return useMutation({
    mutationKey: ["createOrderQuote"],
    mutationFn: (packageReleaseId) => createOrderQuote(packageReleaseId),
    onSuccess: (data) => {
      queryClient2.invalidateQueries(["getOrderQuote", data.order_quote_id]);
    }
  });
};

// lib/hooks/use-order-quote-polling.ts
import { useQuery } from "react-query";
var useOrderQuotePolling = (orderQuoteId) => {
  const {
    data: orderQuote,
    error,
    status
  } = useQuery(
    ["getOrderQuote", orderQuoteId],
    () => getOrderQuote(orderQuoteId || ""),
    {
      enabled: !!orderQuoteId,
      refetchInterval: (data) => {
        if (data?.is_completed || data?.has_error) {
          return false;
        }
        return 4e3;
      },
      refetchIntervalInBackground: true,
      retry: false
    }
  );
  return {
    status: status === "loading" ? "loading" : status === "error" ? "error" : "success",
    data: orderQuote ?? null,
    error: error instanceof Error ? error : null
  };
};

// lib/components/OrderDialog/InitialOrder.tsx
import { Fragment as Fragment3, jsx as jsx19, jsxs as jsxs15 } from "react/jsx-runtime";
var InitialOrderScreen = ({
  onCancel,
  packageReleaseId,
  signIn,
  isLoggedIn
}) => {
  const [selectedShippingCarrier, setSelectedShippingCarrier] = useState6(null);
  const [orderQuoteId, setOrderQuoteId] = useState6(null);
  const { mutate: createOrderQuote2, error: createOrderQuoteError } = useCreateOrderQuote();
  useEffect5(() => {
    if (packageReleaseId) {
      createOrderQuote2(packageReleaseId, {
        onSuccess: (data) => {
          setOrderQuoteId(data.order_quote_id);
        }
      });
    }
  }, [packageReleaseId]);
  const { data: orderQuote } = useOrderQuotePolling(orderQuoteId || void 0);
  const errorMessage = createOrderQuoteError && createOrderQuoteError.error?.message || orderQuote?.error?.message;
  useErrorTelemetry({ errorMessage });
  const redirectToStripeCheckout = async (orderQuoteId2) => {
    const stripeCheckoutBaseUrl = getWindowVar(
      "TSCIRCUIT_STRIPE_CHECKOUT_BASE_URL"
    );
    window.location.href = `${stripeCheckoutBaseUrl}?client_reference_id=${orderQuoteId2}&shipping_option=${selectedShippingCarrier}`;
  };
  useEffect5(() => {
    if (selectedShippingCarrier === null && orderQuote && Array.isArray(orderQuote.shipping_options) && orderQuote.shipping_options.length > 0) {
      const lowest = orderQuote.shipping_options.reduce(
        (min, curr) => curr.cost < min.cost ? curr : min,
        orderQuote.shipping_options[0]
      );
      setSelectedShippingCarrier(lowest?.carrier || null);
    }
  }, [orderQuote]);
  const lowestShippingCarrierCost = useMemo3(() => {
    return orderQuote && Array.isArray(orderQuote.shipping_options) && orderQuote.shipping_options.length > 0 ? orderQuote.shipping_options.reduce(
      (min, curr) => curr.cost < min.cost ? curr : min,
      orderQuote.shipping_options[0]
    ).cost : 0;
  }, [orderQuote]);
  const isNoTokenError = createOrderQuoteError && createOrderQuoteError.error?.error_code?.includes("no_token") || orderQuote?.error?.error_code?.includes("no_token") && signIn;
  if (!isLoggedIn || isNoTokenError) {
    return /* @__PURE__ */ jsx19(SignInView, { signIn });
  }
  return /* @__PURE__ */ jsxs15("div", { className: "rf-max-w-lg rf-mx-auto rf-bg-white rf-rounded-2xl rf-py-8 rf-flex rf-flex-col rf-gap-3", children: [
    /* @__PURE__ */ jsx19("h2", { className: "rf-text-3xl rf-font-bold rf-text-center", children: "Order PCB" }),
    !(createOrderQuoteError || orderQuote?.error) && (!orderQuoteId || !orderQuote || orderQuote?.is_processing) && /* @__PURE__ */ jsx19(LoadingMessage, { message: "Fetching quotes..." }),
    (createOrderQuoteError || orderQuote?.error) && /* @__PURE__ */ jsx19(
      ErrorMessage,
      {
        message: createOrderQuoteError && createOrderQuoteError.error?.message || orderQuote?.error?.message || "Failed to fetch quotes"
      }
    ),
    orderQuote?.is_completed && !createOrderQuoteError && !orderQuote?.error && Array.isArray(orderQuote?.shipping_options) && orderQuote.shipping_options.length > 0 && /* @__PURE__ */ jsxs15(Fragment3, { children: [
      /* @__PURE__ */ jsx19("div", { className: "rf-bg-blue-100 rf-text-blue-800 rf-p-3 rf-rounded-md rf-text-center rf-text-sm", children: "This board is eligible for the tscircuit Flat Fee" }),
      /* @__PURE__ */ jsx19(
        VendorQuoteCard,
        {
          orderQuote,
          selectedShippingCarrier,
          onSelectShippingCarrier: setSelectedShippingCarrier,
          lowestShippingCarrierCost: lowestShippingCarrierCost + (orderQuote.total_cost_without_shipping || 0)
        },
        orderQuote?.order_quote_id
      )
    ] }),
    /* @__PURE__ */ jsxs15("div", { className: "rf-flex rf-justify-between rf-mt-5 rf-gap-4", children: [
      /* @__PURE__ */ jsx19(
        Button,
        {
          variant: "outline",
          type: "button",
          className: "rf-w-1/2 rf-border-red-500 rf-text-red-500 rf-hover:bg-red-50 rf-hover:text-red-600",
          onClick: onCancel,
          children: "Cancel"
        }
      ),
      /* @__PURE__ */ jsx19(
        Button,
        {
          type: "button",
          className: "rf-w-1/2 rf-bg-blue-600 rf-hover:bg-blue-700",
          disabled: selectedShippingCarrier === null,
          onClick: () => {
            if (selectedShippingCarrier === null) {
              toast.error("Please select a shipping option.");
              return;
            }
            if (orderQuote) {
              redirectToStripeCheckout(orderQuote.order_quote_id);
            }
          },
          children: "Continue"
        }
      )
    ] }),
    /* @__PURE__ */ jsx19("div", { className: "rf-text-xs rf-text-center rf-text-gray-400 rf-mt-4", children: "Pricing may vary based on specifications." })
  ] });
};
var LoadingMessage = ({ message }) => /* @__PURE__ */ jsxs15("div", { className: "rf-flex rf-flex-col rf-items-center rf-gap-2 rf-my-12", children: [
  /* @__PURE__ */ jsx19(Loader22, { className: "rf-animate-spin rf-w-8 rf-h-8 rf-text-gray-400" }),
  /* @__PURE__ */ jsx19("p", { className: "rf-text-gray-600", children: message })
] });
var ErrorMessage = ({ message }) => /* @__PURE__ */ jsx19("div", { className: "rf-text-red-600 rf-text-center rf-py-12", children: message });
var SignInView = ({ signIn }) => /* @__PURE__ */ jsxs15("div", { className: "rf-max-w-lg rf-mx-auto rf-bg-white rf-rounded-2xl rf-py-8 rf-flex rf-flex-col rf-gap-3", children: [
  /* @__PURE__ */ jsx19("h2", { className: "rf-text-3xl rf-font-bold rf-text-center", children: "Order PCB" }),
  /* @__PURE__ */ jsxs15("div", { className: "rf-flex rf-flex-col rf-items-center rf-gap-4 rf-py-8", children: [
    /* @__PURE__ */ jsx19("p", { className: "rf-text-gray-600", children: "Please sign in to continue" }),
    /* @__PURE__ */ jsxs15(Button, { onClick: signIn, className: "rf-flex rf-items-center rf-gap-2", children: [
      /* @__PURE__ */ jsx19(GitHubLogoIcon2, { className: "rf-w-5 rf-h-5" }),
      "Sign in with GitHub"
    ] })
  ] })
] });

// lib/components/OrderDialog/OrderDialog.tsx
import { jsx as jsx20 } from "react/jsx-runtime";
var queryClient = new QueryClient();
var OrderDialog = ({
  isOpen,
  onClose,
  stage,
  setStage,
  circuitJson,
  packageReleaseId,
  signIn,
  isLoggedIn
}) => {
  return /* @__PURE__ */ jsx20(QueryClientProvider, { client: queryClient, children: /* @__PURE__ */ jsx20(
    Dialog,
    {
      open: isOpen,
      onOpenChange: (open) => {
        if (!open) onClose();
      },
      children: /* @__PURE__ */ jsx20(DialogContent, { className: "!rf-max-w-[660px] !rf-p-0 !rf-z-[101]", children: /* @__PURE__ */ jsx20("div", { className: "rf-relative rf-w-full", children: stage === "initial" && /* @__PURE__ */ jsx20(
        InitialOrderScreen,
        {
          onCancel: onClose,
          packageReleaseId: packageReleaseId ?? "",
          signIn: signIn ?? (() => {
          }),
          isLoggedIn
        }
      ) }) })
    }
  ) });
};

// lib/components/OrderDialog/CliOrderDialog.tsx
import { jsx as jsx21 } from "react/jsx-runtime";
var CliOrderDialog = ({
  isOpen,
  onClose,
  stage,
  setStage,
  signIn,
  isLoggedIn
}) => {
  const circuitJson = useRunFrameStore((state) => state.circuitJson);
  return /* @__PURE__ */ jsx21(
    OrderDialog,
    {
      signIn,
      isOpen,
      onClose,
      stage,
      setStage,
      circuitJson,
      isLoggedIn: isLoggedIn ?? false
    }
  );
};

// lib/components/OrderDialog/useOrderDialog.tsx
import { useState as useState7, useMemo as useMemo4, useCallback as useCallback2 } from "react";
import { jsx as jsx22 } from "react/jsx-runtime";
var useOrderDialogCli = () => {
  const [isOpen, setIsOpen] = useState7(false);
  const [stage, setStage] = useState7("initial");
  const handleClose = () => {
    setIsOpen(false);
    setStage("initial");
  };
  return {
    isOpen,
    stage,
    open: () => setIsOpen(true),
    close: handleClose,
    setStage,
    OrderDialog: CliOrderDialog
  };
};
var useOrderDialog = ({
  onSignIn,
  isLoggedIn,
  packageReleaseId
}) => {
  useStyles();
  const [isOpen, setIsOpen] = useState7(false);
  const [stage, setStage] = useState7("initial");
  const handleClose = useCallback2(() => {
    setIsOpen(false);
    setStage("initial");
  }, []);
  const open = useCallback2(() => setIsOpen(true), []);
  const MemoizedOrderDialog = useMemo4(() => {
    return (props) => /* @__PURE__ */ jsx22(
      OrderDialog,
      {
        ...props,
        signIn: onSignIn,
        isLoggedIn,
        packageReleaseId
      }
    );
  }, [isLoggedIn, packageReleaseId]);
  return {
    isOpen,
    stage,
    open,
    close: handleClose,
    setStage,
    OrderDialog: MemoizedOrderDialog
  };
};

export {
  cn,
  Tabs,
  TabsList,
  TabsTrigger,
  TabsContent,
  buttonVariants,
  Button,
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubTrigger,
  DropdownMenuSubContent,
  DropdownMenuContent,
  DropdownMenuItem,
  linkify,
  BomTable,
  PcbViewerWithContainerHeight,
  useRunnerStore,
  CircuitJsonPreview,
  debug_default,
  API_BASE,
  useRunFrameStore,
  Dialog,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
  toast,
  getRegistryKy,
  hasRegistryToken,
  registryKy,
  useOrderDialogCli,
  useOrderDialog,
  CadViewer2 as CadViewer,
  PCBViewer2 as PCBViewer,
  SchematicViewer2 as SchematicViewer
};
