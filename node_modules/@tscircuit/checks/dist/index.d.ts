import * as circuit_json from 'circuit-json';
import { AnyCircuitElement, PcbTraceError, PcbPlacementError } from 'circuit-json';
import { ConnectivityMap } from 'circuit-json-to-connectivity-map';

declare function checkEachPcbPortConnected(soup: AnyCircuitElement[]): PcbTraceError[];

declare function checkEachPcbTraceNonOverlapping(circuitJson: AnyCircuitElement[], { connMap, }?: {
    connMap?: ConnectivityMap;
}): PcbTraceError[];

declare class NetManager {
    private networks;
    setConnected(nodes: string[]): void;
    isConnected(nodes: string[]): boolean;
}

declare function checkViasOffBoard(circuitJson: AnyCircuitElement[]): PcbPlacementError[];

declare function checkSameNetViaSpacing(circuitJson: AnyCircuitElement[], { connMap, minSpacing, }?: {
    connMap?: ConnectivityMap;
    minSpacing?: number;
}): PcbPlacementError[];

declare function runAllChecks(circuitJson: AnyCircuitElement[]): Promise<(circuit_json.PcbTraceError | circuit_json.PcbPlacementError)[]>;

export { NetManager, checkEachPcbPortConnected, checkEachPcbTraceNonOverlapping, checkSameNetViaSpacing, checkViasOffBoard, runAllChecks };
