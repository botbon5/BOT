<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="49.65426241633401" cy="377.9255744980038" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
gnd
unnamedsubcircuit3035_connectivity_net0" data-x="0.6" data-y="-0.1" cx="165.5054114123416" cy="397.23409933067177" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
vcc
unnamedsubcircuit3035_connectivity_net1" data-x="0.6" data-y="0.1" cx="165.5054114123416" cy="358.61704966533586" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="1.8" data-y="0.3" cx="397.2077094043568" cy="320" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
gnd
unnamedsubcircuit3035_connectivity_net0" data-x="1.800273" data-y="-0.251209" cx="397.26042167715" cy="426.4303266449006" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
vcc
unnamedsubcircuit3035_connectivity_net1" data-x="1.799727" data-y="0.851209" cx="397.1549971315636" cy="213.5696733550994" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="2.8" data-y="0.3" cx="590.292957731036" cy="320" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
gnd
unnamedsubcircuit3035_connectivity_net0" data-x="2.800273" data-y="-0.251209" cx="590.3456700038294" cy="426.4303266449006" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
vcc
unnamedsubcircuit3035_connectivity_net1" data-x="2.799727" data-y="0.851209" cx="590.240245458243" cy="213.5696733550994" r="3" fill="orange" />
  </g>
  <g>
    <polyline data-points="0.6,-0.1 1.800273,-0.251209" data-type="line" data-label="" points="165.5054114123416,397.23409933067177 397.26042167715,426.4303266449006" fill="none" stroke="hsl(72, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,-0.1 2.800273,-0.251209" data-type="line" data-label="" points="165.5054114123416,397.23409933067177 590.3456700038294,426.4303266449006" fill="none" stroke="hsl(72, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.800273,-0.251209 2.800273,-0.251209" data-type="line" data-label="" points="397.26042167715,426.4303266449006 590.3456700038294,426.4303266449006" fill="none" stroke="hsl(72, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,0.1 1.799727,0.851209" data-type="line" data-label="" points="165.5054114123416,358.61704966533586 397.1549971315636,213.5696733550994" fill="none" stroke="hsl(144, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,0.1 2.799727,0.851209" data-type="line" data-label="" points="165.5054114123416,358.61704966533586 590.240245458243,213.5696733550994" fill="none" stroke="hsl(144, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.799727,0.851209 2.799727,0.851209" data-type="line" data-label="" points="397.1549971315636,213.5696733550994 590.240245458243,213.5696733550994" fill="none" stroke="hsl(144, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="40.00000000000004" y="348.9627872490019" width="135.15967382867552" height="57.92557449800381" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005179059553571427" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="1.8" data-y="0.30000000000000004" x="387.5006671353928" y="203.9153530131909" width="19.414084537928034" height="232.1692939736182" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005179059553571427" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="2.8" data-y="0.30000000000000004" x="580.5859154620721" y="203.9153530131909" width="19.41408453792792" height="232.1692939736182" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005179059553571427" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 193.08524832667933,
        "c": 0,
        "e": 49.65426241633401,
        "b": 0,
        "d": -193.08524832667933,
        "f": 377.9255744980038
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>