<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="134.12542566371684" cy="220.88495575221233" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
gnd
unnamedsubcircuit2587_connectivity_net0" data-x="0.6" data-y="-0.1" cx="282.79799203539824" cy="245.66371681415924" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
vcc
unnamedsubcircuit2587_connectivity_net1" data-x="0.6" data-y="0.1" cx="282.79799203539824" cy="196.10619469026543" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="1.5" data-y="-0.45" cx="505.8068415929204" cy="332.3893805309734" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
gnd
unnamedsubcircuit2587_connectivity_net0" data-x="1.500273" data-y="-1.001209" cx="505.87448761061955" cy="468.97214159292037" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
vcc
unnamedsubcircuit2587_connectivity_net1" data-x="1.499727" data-y="0.101209" cx="505.73919557522134" cy="195.8066194690265" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_pin
vcc
unnamedsubcircuit2587_connectivity_net1" data-x="1" data-y="0.5" cx="381.9130362831859" cy="96.9911504424778" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_center
netlabel_center
schematic_net_label_0_center" data-x="1" data-y="0.68" cx="381.9130362831859" cy="52.38938053097337" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_pin
gnd
unnamedsubcircuit2587_connectivity_net0" data-x="1.5" data-y="-1.3" cx="505.8068415929204" cy="543.0088495575221" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_center
netlabel_center
schematic_net_label_1_center" data-x="1.5" data-y="-1.48" cx="505.8068415929204" cy="587.6106194690266" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <polyline data-points="0.6,-0.1 1.500273,-1.001209" data-type="line" data-label="" points="282.79799203539824,245.66371681415924 505.87448761061955,468.97214159292037" fill="none" stroke="hsl(60, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,-0.1 1.5,-1.3" data-type="line" data-label="" points="282.79799203539824,245.66371681415924 505.8068415929204,543.0088495575221" fill="none" stroke="hsl(60, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.500273,-1.001209 1.5,-1.3" data-type="line" data-label="" points="505.87448761061955,468.97214159292037 505.8068415929204,543.0088495575221" fill="none" stroke="hsl(60, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,0.1 1.499727,0.101209" data-type="line" data-label="" points="282.79799203539824,196.10619469026543 505.73919557522134,195.8066194690265" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,0.1 1,0.5" data-type="line" data-label="" points="282.79799203539824,196.10619469026543 381.9130362831859,96.9911504424778" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.499727,0.101209 1,0.5" data-type="line" data-label="" points="505.73919557522134,195.8066194690265 381.9130362831859,96.9911504424778" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="121.73604513274339" y="183.71681415929197" width="173.4513274336284" height="74.33628318584073" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004035714285714285" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="1.5" data-y="-0.44999999999999996" x="493.34972831858425" y="183.41716460176977" width="24.91422654867239" height="297.94443185840726" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004035714285714285" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_0" data-x="1" data-y="0.59" x="369.52365575221245" y="39.999999999999915" width="24.77876106194691" height="69.38053097345134" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004035714285714285" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_1" data-x="1.5" data-y="-1.3900000000000001" x="493.417461061947" y="530.6194690265487" width="24.77876106194691" height="69.3805309734513" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004035714285714285" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 247.78761061946906,
        "c": 0,
        "e": 134.12542566371684,
        "b": 0,
        "d": -247.78761061946906,
        "f": 220.88495575221233
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>