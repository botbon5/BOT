<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="320" cy="68.49434099525459" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
normal
unnamedsubcircuit2194_connectivity_net1" data-x="-0.551209" data-y="0.000273" cx="158.10385525078854" cy="68.41415789317074" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit2194_connectivity_net0" data-x="0.551209" data-y="-0.000273" cx="481.89614474921143" cy="68.57452409733844" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="0.903045" data-y="-1.16167" cx="585.2342469644939" cy="409.6895944668353" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
gnd
unnamedsubcircuit2194_connectivity_net2" data-x="0.903318" data-y="-1.71288" cx="585.3144300665776" cy="571.5860329270433" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
normal
unnamedsubcircuit2194_connectivity_net0" data-x="0.902771" data-y="-0.610461" cx="585.1537701514134" cy="247.7934497176238" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="-0.903045" data-y="-1.16167" cx="54.76575303550618" cy="409.6895944668353" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
gnd
unnamedsubcircuit2194_connectivity_net2" data-x="-0.902771" data-y="-1.71288" cx="54.84622984858663" cy="571.5860329270433" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
normal
unnamedsubcircuit2194_connectivity_net1" data-x="-0.903318" data-y="-0.610461" cx="54.68556993342236" cy="247.7934497176238" r="3" fill="blue" />
  </g>
  <g>
    <polyline data-points="-0.551209,0.000273 -0.903318,-0.610461" data-type="line" data-label="" points="158.10385525078854,68.41415789317074 54.68556993342236,247.7934497176238" fill="none" stroke="hsl(60, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.551209,-0.000273 0.902771,-0.610461" data-type="line" data-label="" points="481.89614474921143,68.57452409733844 585.1537701514134,247.7934497176238" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.903318,-1.71288 -0.902771,-1.71288" data-type="line" data-label="" points="585.3144300665776,571.5860329270433 54.84622984858663,571.5860329270433" fill="none" stroke="hsl(240, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0" data-y="0" x="143.41821730528324" y="53.72853463321553" width="353.16356538943353" height="29.531612724078116" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.0034047073872812816" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="0.9030447184387592" data-y="-1.1616703003130064" x="570.4683285337223" y="233.10789997735088" width="29.531671466277658" height="353.1635653894336" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.0034047073872812816" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="-0.9030447184387592" data-y="-1.1616703003130064" x="40" y="233.10789997735088" width="29.53167146627763" height="353.1635653894336" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.0034047073872812816" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 293.710996644125,
        "c": 0,
        "e": 320,
        "b": 0,
        "d": -293.710996644125,
        "f": 68.49434099525459
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>