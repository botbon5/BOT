<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0.122958" data-y="-0.045205" cx="49.41203244464884" cy="255.1566574486349" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
gnd
unnamedsubcircuit502_connectivity_net3" data-x="0.722958" data-y="-0.245205" cx="162.35665779133527" cy="292.80486589753036" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit502_connectivity_net1" data-x="0.722958" data-y="-0.045205" cx="162.35665779133527" cy="255.1566574486349" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
vcc
unnamedsubcircuit502_connectivity_net2" data-x="0.722958" data-y="0.154795" cx="162.35665779133527" cy="217.50844899973941" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="2.997594" data-y="-0.326008" cx="590.5365091581443" cy="308.01530683401086" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
gnd
unnamedsubcircuit502_connectivity_net3" data-x="2.997867" data-y="-0.819272" cx="590.5878989626771" cy="400.8678362956908" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
vcc
unnamedsubcircuit502_connectivity_net2" data-x="2.997321" data-y="0.167257" cx="590.4851193536116" cy="215.16258913128874" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="1.804769" data-y="-0.395315" cx="365.99788794287565" cy="321.06172874884885" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
normal
unnamedsubcircuit502_connectivity_net1" data-x="1.804496" data-y="-0.946606" cx="365.9464981383429" cy="424.83732116884903" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6
vcc
unnamedsubcircuit502_connectivity_net2" data-x="1.805043" data-y="0.155975" cx="366.0494659884506" cy="217.28632456989092" r="3" fill="orange" />
  </g>
  <g>
    <polyline data-points="0.722958,-0.245205 2.997867,-0.819272" data-type="line" data-label="" points="162.35665779133527,292.80486589753036 590.5878989626771,400.8678362956908" fill="none" stroke="hsl(60, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.722958,-0.045205 1.804496,-0.946606" data-type="line" data-label="" points="162.35665779133527,255.1566574486349 365.9464981383429,424.83732116884903" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.722958,0.154795 2.997321,0.167257" data-type="line" data-label="" points="162.35665779133527,217.50844899973941 590.4851193536116,215.16258913128874" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.722958,0.154795 1.805043,0.155975" data-type="line" data-label="" points="162.35665779133527,217.50844899973941 366.0494659884506,217.28632456989092" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="2.997321,0.167257 1.805043,0.155975" data-type="line" data-label="" points="590.4851193536116,215.16258913128874 366.0494659884506,217.28632456989092" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.42295810448080196" data-y="-0.0452049579759681" x="40.000000000000014" y="208.09638897686798" width="131.7687295711342" height="94.12052112223873" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005312337777546161" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="2.9975939099066515" data-y="-0.3260076117178601" x="581.0729843977571" y="205.75059569715972" width="18.927015602242932" height="204.5292760924329" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005312337777546161" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="1.8047692924586682" data-y="-0.39531546479810603" x="356.53445401858306" y="207.87422818301735" width="18.926977954034157" height="226.37517611982292" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.005312337777546161" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 188.2410422444774,
        "c": 0,
        "e": 26.266290372352387,
        "b": 0,
        "d": -188.2410422444774,
        "f": 246.6472211339733
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>