<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="194.42230089686097" cy="320" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
not_connected
disconnected-0" data-x="0.6" data-y="-0.1" cx="269.75862376681613" cy="332.5560538116592" r="3" fill="rgba(0, 0, 0, 0.2)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit2829_connectivity_net0" data-x="0.6" data-y="0.1" cx="269.75862376681613" cy="307.4439461883408" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="2" data-y="-1" cx="445.54337713004486" cy="445.56053811659194" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
gnd
unnamedsubcircuit2829_connectivity_net1" data-x="2.000273" data-y="-1.493264" cx="445.57765515695064" cy="507.4950313901345" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
normal
unnamedsubcircuit2829_connectivity_net0" data-x="1.999727" data-y="-0.506736" cx="445.50909910313896" cy="383.6260448430493" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_pin
vcc
unnamedsubcircuit2829_connectivity_net0" data-x="2" data-y="2" cx="445.54337713004486" cy="68.87892376681614" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_0_center
netlabel_center
schematic_net_label_0_center" data-x="2" data-y="2.18" cx="445.54337713004486" cy="46.27802690582956" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_pin
gnd
unnamedsubcircuit2829_connectivity_net1" data-x="2" data-y="-2" cx="445.54337713004486" cy="571.1210762331839" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_net_label_1_center
netlabel_center
schematic_net_label_1_center" data-x="2" data-y="-2.18" cx="445.54337713004486" cy="593.7219730941704" r="3" fill="hsl(338.4, 100%, 50%, 1)" />
  </g>
  <g>
    <polyline data-points="0.6,0.1 1.999727,-0.506736" data-type="line" data-label="" points="269.75862376681613,307.4439461883408 445.50909910313896,383.6260448430493" fill="none" stroke="hsl(102.85714285714286, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,0.1 2,2" data-type="line" data-label="" points="269.75862376681613,307.4439461883408 445.54337713004486,68.87892376681614" fill="none" stroke="hsl(102.85714285714286, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="1.999727,-0.506736 2,2" data-type="line" data-label="" points="445.50909910313896,383.6260448430493 445.54337713004486,68.87892376681614" fill="none" stroke="hsl(102.85714285714286, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="2.000273,-1.493264 2,-2" data-type="line" data-label="" points="445.57765515695064,507.4950313901345 445.54337713004486,571.1210762331839" fill="none" stroke="hsl(205.71428571428572, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="188.14427399103138" y="301.1659192825112" width="87.89237668161437" height="37.668161434977605" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.007964285714285714" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="2" data-y="-1" x="439.231028251121" y="377.3479802690583" width="12.624697757847628" height="136.42511569506723" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.007964285714285714" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_0" data-x="2" data-y="2.09" x="439.26535022421524" y="40" width="12.556053811659183" height="35.15695067264576" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.007964285714285714" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_net_label_1" data-x="2" data-y="-2.09" x="439.26535022421524" y="564.8430493273543" width="12.556053811659183" height="35.156950672645735" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.007964285714285714" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 125.56053811659193,
        "c": 0,
        "e": 194.42230089686097,
        "b": 0,
        "d": -125.56053811659193,
        "f": 320
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>