<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0" data-y="0" cx="47.92588882123334" cy="248.48181454087182" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
vcc
unnamedsubcircuit216_connectivity_net0" data-x="0.6" data-y="0.2" cx="143.0365546760334" cy="216.77825925593848" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
normal
unnamedsubcircuit216_connectivity_net1" data-x="0.6" data-y="0" cx="143.0365546760334" cy="248.48181454087182" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
gnd
unnamedsubcircuit216_connectivity_net2" data-x="0.6" data-y="-0.2" cx="143.0365546760334" cy="280.1853698258052" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="3.432727" data-y="0.099384" cx="592.0741399341504" cy="232.72768384868274" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
vcc
unnamedsubcircuit216_connectivity_net0" data-x="2.832727" data-y="0.199384" cx="496.96347407935036" cy="216.87590620621606" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
gnd
unnamedsubcircuit216_connectivity_net2" data-x="2.832727" data-y="-0.000616" cx="496.96347407935036" cy="248.57946149114943" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="1.686149" data-y="-0.551046" cx="315.2104790219087" cy="335.8324011685787" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
gnd
unnamedsubcircuit216_connectivity_net2" data-x="1.685876" data-y="-1.102336" cx="315.1672036689448" cy="423.22166613373327" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6
normal
unnamedsubcircuit216_connectivity_net1" data-x="1.686422" data-y="0.000245" cx="315.2537543748727" cy="248.44297768564778" r="3" fill="blue" />
  </g>
  <g>
    <polyline data-points="0.6,0.2 2.832727,0.199384" data-type="line" data-label="" points="143.0365546760334,216.77825925593848 496.96347407935036,216.87590620621606" fill="none" stroke="hsl(60, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,0 1.686422,0.000245" data-type="line" data-label="" points="143.0365546760334,248.48181454087182 315.2537543748727,248.44297768564778" fill="none" stroke="hsl(120, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,-0.2 2.832727,-0.000616" data-type="line" data-label="" points="143.0365546760334,280.1853698258052 496.96347407935036,248.57946149114943" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.6,-0.2 1.685876,-1.102336" data-type="line" data-label="" points="143.0365546760334,280.1853698258052 315.1672036689448,423.22166613373327" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="2.832727,-0.000616 1.685876,-1.102336" data-type="line" data-label="" points="496.96347407935036,248.57946149114943 315.1672036689448,423.22166613373327" fill="none" stroke="hsl(180, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.30000000000000004" data-y="0" x="40.00000000000001" y="208.85237043470514" width="110.96244349726675" height="79.2588882123334" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.006308440747497082" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="3.132726818598366" data-y="0.09938407369326435" x="489.03755650273325" y="208.95000570329032" width="110.96244349726675" height="47.55533292740003" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.006308440747497082" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="1.6861488826744984" data-y="-0.5510457706748344" x="307.2412566200898" y="240.517100067632" width="15.938407607282613" height="190.63052949766285" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.006308440747497082" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 158.51777642466675,
        "c": 0,
        "e": 47.92588882123334,
        "b": 0,
        "d": -158.51777642466675,
        "f": 248.48181454087182
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>