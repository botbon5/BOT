<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="6.505" data-y="1.8" cx="320.3499435392836" cy="113.41293139328201" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
normal
unnamedsubcircuit2761_connectivity_net1" data-x="6.504938" data-y="1.354199" cx="320.34076323593115" cy="179.4224219549281" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
vcc
unnamedsubcircuit2761_connectivity_net0" data-x="6.505062" data-y="2.245801" cx="320.359123842636" cy="47.403440831635976" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="6.505" data-y="0.5" cx="320.3499435392836" cy="305.9031629767461" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
normal
unnamedsubcircuit2761_connectivity_net2" data-x="6.504727" data-y="-0.051291" cx="320.3095205906511" cy="387.5324954843457" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
normal
unnamedsubcircuit2761_connectivity_net1" data-x="6.505273" data-y="1.051291" cx="320.39036648791614" cy="224.2738304691465" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="6.5" data-y="-0.9" cx="319.6095964947318" cy="513.2003354512459" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
normal
unnamedsubcircuit2761_connectivity_net2" data-x="6.504433" data-y="-0.363791" cx="320.2659881844314" cy="433.80418576883227" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
gnd
unnamedsubcircuit2761_connectivity_net3" data-x="6.504886" data-y="-1.436209" cx="320.3330636266678" cy="592.5964851336595" r="3" fill="purple" />
  </g>
  <g>
    <polyline data-points="6.504938,1.354199 6.505273,1.051291" data-type="line" data-label="" points="320.34076323593115,179.4224219549281 320.39036648791614,224.2738304691465" fill="none" stroke="hsl(51.42857142857143, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="6.504727,-0.051291 6.504433,-0.363791" data-type="line" data-label="" points="320.3095205906511,387.5324954843457 320.2659881844314,433.80418576883227" fill="none" stroke="hsl(205.71428571428572, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="6.505" data-y="1.8" x="312.9372631765315" y="39.99999999999994" width="14.825360725504197" height="146.82586278656422" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.006753589464285714" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="6.505" data-y="0.49999999999999994" x="312.9060131277811" y="216.87040444445128" width="14.887860823004985" height="178.06551706458967" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.006753589464285714" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="6.502443200000002" data-y="-0.9" x="312.20612604921405" y="426.40067090249175" width="15.530467250735683" height="173.59932909750825" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.006753589464285714" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 148.06940891035697,
        "c": 0,
        "e": -642.8415614225885,
        "b": 0,
        "d": -148.06940891035697,
        "f": 379.9378674319246
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>