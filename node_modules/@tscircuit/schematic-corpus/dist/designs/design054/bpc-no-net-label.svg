<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="schematic_component_0_center
component_center
center_schematic_component_0" data-x="0.00049" data-y="1.744082" cx="379.8594121018971" cy="163.92259695046369" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_0
normal
unnamedsubcircuit950_connectivity_net0" data-x="0.000216" data-y="1.192791" cx="379.8029422172142" cy="277.54062321577453" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_1
vcc
unnamedsubcircuit950_connectivity_net4" data-x="0.000763" data-y="2.295372" cx="379.91567589211024" cy="50.30477677962244" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_1_center
component_center
center_schematic_component_1" data-x="-0.833586" data-y="1" cx="207.96096123789707" cy="317.27378211319086" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_2
normal
unnamedsubcircuit950_connectivity_net1" data-x="-1.384795" data-y="0.999727" cx="94.35983471909714" cy="317.3300459034041" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_3
normal
unnamedsubcircuit950_connectivity_net2" data-x="-0.282377" data-y="1.000273" cx="321.562087756697" cy="317.21751832297764" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_2_center
component_center
center_schematic_component_2" data-x="0.804609" data-y="0.229381" cx="545.5838909387282" cy="476.0940962168994" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_4
gnd
unnamedsubcircuit950_connectivity_net3" data-x="0.804882" data-y="-0.321828" cx="545.6401547289415" cy="589.6952227356993" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_5
normal
unnamedsubcircuit950_connectivity_net2" data-x="0.804336" data-y="0.78059" cx="545.5276271485151" cy="362.4929696980995" r="3" fill="blue" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_component_3_center
component_center
center_schematic_component_3" data-x="0" data-y="0.413639" cx="379.7584258117708" cy="438.11954142896775" r="3" fill="gray" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_6
gnd
unnamedsubcircuit950_connectivity_net3" data-x="0.000498" data-y="0.037496" cx="379.86106085765425" cy="515.640533524817" r="3" fill="purple" />
  </g>
  <g>
    <circle data-type="point" data-label="schematic_port_7
normal
unnamedsubcircuit950_connectivity_net0" data-x="-0.000498" data-y="0.789782" cx="379.65579076588733" cy="360.5985493331185" r="3" fill="blue" />
  </g>
  <g>
    <polyline data-points="0.000216,1.192791 -0.000498,0.789782" data-type="line" data-label="" points="379.8029422172142,277.54062321577453 379.65579076588733,360.5985493331185" fill="none" stroke="hsl(40, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="-0.282377,1.000273 0.804336,0.78059" data-type="line" data-label="" points="321.562087756697,317.21751832297764 545.5276271485151,362.4929696980995" fill="none" stroke="hsl(200, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0.804882,-0.321828 0.000498,0.037496" data-type="line" data-label="" points="545.6401547289415,589.6952227356993 379.86106085765425,515.640533524817" fill="none" stroke="hsl(280, 100%, 50%, 0.5)" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_0" data-x="0.0004896001122474056" data-y="1.7440815586064047" x="369.4982908911397" y="40" width="20.722077592206176" height="247.84537583848527" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004852143784936675" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_1" data-x="-0.8335861253449377" data-y="1" x="84.05502357558515" y="306.91272270764074" width="247.81182365882694" height="20.722118811100245" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004852143784936675" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_2" data-x="0.8046091265445721" data-y="0.22938103904186713" x="535.2228576133145" y="352.18817634117306" width="20.722118811100245" height="247.81182365882694" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004852143784936675" />
  </g>
  <g>
    <rect data-type="rect" data-label="schematic_component_3" data-x="0" data-y="0.4136389857014756" x="369.35102606472077" y="350.2938803213102" width="20.814799494100043" height="175.65132810900866" fill="rgba(0, 0, 0, 0.2)" stroke="black" stroke-width="0.004852143784936675" />
  </g>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 206.09446964545197,
        "c": 0,
        "e": 379.7584258117708,
        "b": 0,
        "d": -206.09446964545197,
        "f": 523.3682517586428
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>