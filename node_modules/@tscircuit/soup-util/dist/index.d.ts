import { AnyCircuitElement, AnyCircuitElementInput } from 'circuit-json';
import { Matrix } from 'transformation-matrix';
import * as parsel from 'parsel-js';

type SoupOps<K extends AnyCircuitElement["type"], T extends AnyCircuitElement | AnyCircuitElementInput> = {
    get: (id: string) => Extract<T, {
        type: K;
    }> | null;
    select: (selector: string) => Extract<T, {
        type: K;
    }> | null;
    getWhere: (where: any) => Extract<T, {
        type: K;
    }> | null;
    getUsing: (using: {
        [key: `${string}_id`]: string;
    }) => Extract<T, {
        type: K;
    }> | null;
    insert: (elm: Omit<Extract<T, {
        type: K;
    }>, "type" | `${K}_id`>) => Extract<T, {
        type: K;
    }>;
    update: (id: string, newProps: Partial<Extract<T, {
        type: K;
    }>>) => Extract<T, {
        type: K;
    }>;
    delete: (id: string) => void;
    list: (where?: any) => Extract<T, {
        type: K;
    }>[];
};
type SoupUtilObjects = {
    [K in AnyCircuitElement["type"]]: SoupOps<K, AnyCircuitElement>;
} & {
    toArray: () => AnyCircuitElement[];
};
type SoupInputUtilObjects = {
    [K in AnyCircuitElementInput["type"]]: SoupOps<K, AnyCircuitElementInput>;
};
type SoupUtilOptions = {
    validateInserts?: boolean;
};
type GetSoupUtilFn = ((soup: AnyCircuitElement[], options?: SoupUtilOptions) => SoupUtilObjects) & {
    unparsed: (soup: AnyCircuitElementInput[]) => SoupInputUtilObjects;
};
declare const su: GetSoupUtilFn;

declare const transformSchematicElement: (elm: AnyCircuitElement, matrix: Matrix) => {
    type: "source_trace";
    source_trace_id: string;
    connected_source_port_ids: string[];
    connected_source_net_ids: string[];
} | {
    type: "source_port";
    source_component_id: string;
    name: string;
    source_port_id: string;
    pin_number?: number | undefined;
    port_hints?: string[] | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_ground";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_net";
    name: string;
    source_net_id: string;
    member_source_group_ids: string[];
    is_power?: boolean | undefined;
    is_ground?: boolean | undefined;
    is_digital_signal?: boolean | undefined;
    is_analog_signal?: boolean | undefined;
    trace_width?: number | undefined;
} | {
    type: "source_group";
    source_group_id: string;
    name?: string | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "pcb_component";
    width: number;
    height: number;
    source_component_id: string;
    rotation: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "circle" | "square";
    hole_diameter: number;
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "oval";
    hole_width: number;
    hole_height: number;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_diameter: number;
    shape: "circle";
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_width: number;
    hole_height: number;
    shape: "oval" | "pill";
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    outer_width: number;
    outer_height: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_keepout";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    shape: "rect";
    layers: string[];
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    type: "pcb_keepout";
    center: {
        x: number;
        y: number;
    };
    shape: "circle";
    layers: string[];
    radius: number;
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_port";
    source_port_id: string;
    pcb_component_id: string;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_port_id: string;
} | {
    type: "pcb_text";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    text: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_text_id: string;
    lines: number;
    align: "bottom-left";
} | {
    type: "pcb_trace";
    pcb_trace_id: string;
    route: ({
        x: number;
        y: number;
        width: number;
        layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
        route_type: "wire";
        start_pcb_port_id?: string | undefined;
        end_pcb_port_id?: string | undefined;
    } | {
        x: number;
        y: number;
        to_layer: string;
        route_type: "via";
        from_layer: string;
    })[];
    source_trace_id?: string | undefined;
    pcb_component_id?: string | undefined;
    route_thickness_mode?: "constant" | "interpolated" | undefined;
    should_round_corners?: boolean | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_via";
    hole_diameter: number;
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_via_id: string;
    to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    from_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    pcb_trace_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "circle";
    pcb_smtpad_id: string;
    radius: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    width: number;
    height: number;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "rect";
    pcb_smtpad_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_board";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_board_id: string;
    outline?: {
        x: number;
        y: number;
    }[] | undefined;
} | {
    type: "pcb_trace_hint";
    pcb_component_id: string;
    pcb_port_id: string;
    route: {
        x: number;
        y: number;
        trace_width?: number | undefined;
        via?: boolean | undefined;
        to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    }[];
    pcb_trace_hint_id: string;
} | {
    type: "pcb_silkscreen_line";
    x1: number;
    x2: number;
    y1: number;
    y2: number;
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_line_id: string;
    stroke_width: number;
} | {
    type: "pcb_silkscreen_path";
    pcb_component_id: string;
    layer: "top" | "bottom";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_silkscreen_path_id: string;
} | {
    type: "pcb_silkscreen_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_text_id: string;
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
} | {
    type: "pcb_silkscreen_rect";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_rect_id: string;
} | {
    type: "pcb_silkscreen_circle";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    radius: number;
    pcb_silkscreen_circle_id: string;
} | {
    type: "pcb_silkscreen_oval";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_oval_id: string;
    radius_x: number;
    radius_y: number;
} | {
    message: string;
    type: "pcb_trace_error";
    source_trace_id: string;
    error_type: "pcb_trace_error";
    pcb_trace_id: string;
    pcb_trace_error_id: string;
    pcb_component_ids: string[];
    pcb_port_ids: string[];
    center?: {
        x: number;
        y: number;
    } | undefined;
} | {
    message: string;
    type: "pcb_placement_error";
    pcb_placement_error_id: string;
} | {
    message: string;
    type: "pcb_port_not_matched_error";
    pcb_component_ids: string[];
    pcb_error_id: string;
} | {
    type: "pcb_fabrication_note_path";
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_fabrication_note_path_id: string;
    color?: string | undefined;
} | {
    type: "pcb_fabrication_note_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom";
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
    pcb_fabrication_note_text_id: string;
    color?: string | undefined;
} | {
    x: number;
    y: number;
    type: "schematic_box";
    width: number;
    height: number;
    schematic_component_id: string;
} | {
    anchor: "center" | "left" | "right" | "top" | "bottom";
    type: "schematic_text";
    schematic_component_id: string;
    rotation: number;
    schematic_text_id: string;
    text: string;
    position: {
        x: number;
        y: number;
    };
} | {
    type: "schematic_line";
    schematic_component_id: string;
    x1: number;
    x2: number;
    y1: number;
    y2: number;
} | {
    type: "schematic_component";
    source_component_id: string;
    schematic_component_id: string;
    rotation: number;
    size: {
        width: number;
        height: number;
    };
    center: {
        x: number;
        y: number;
    };
    pin_spacing?: number | undefined;
    pin_styles?: Record<string, {
        left_margin?: number | undefined;
        right_margin?: number | undefined;
        top_margin?: number | undefined;
        bottom_margin?: number | undefined;
    }> | undefined;
    box_width?: number | undefined;
    symbol_name?: string | undefined;
    port_arrangement?: {
        left_size: number;
        right_size: number;
        top_size?: number | undefined;
        bottom_size?: number | undefined;
    } | {
        left_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        right_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        top_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
        bottom_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
    } | undefined;
    port_labels?: Record<string, string> | undefined;
} | {
    type: "schematic_port";
    source_port_id: string;
    center: {
        x: number;
        y: number;
    };
    schematic_port_id: string;
    schematic_component_id?: string | undefined;
    facing_direction?: "left" | "right" | "up" | "down" | undefined;
} | {
    type: "schematic_trace";
    source_trace_id: string;
    schematic_trace_id: string;
    edges: {
        from: {
            x: number;
            y: number;
        };
        to: {
            x: number;
            y: number;
        };
        from_schematic_port_id?: string | undefined;
        to_schematic_port_id?: string | undefined;
    }[];
} | {
    type: "schematic_path";
    schematic_component_id: string;
    points: {
        x: number;
        y: number;
    }[];
    fill_color?: "red" | "blue" | undefined;
    is_filled?: boolean | undefined;
} | {
    message: string;
    type: "schematic_error";
    schematic_error_id: string;
    error_type: "schematic_port_not_found";
} | {
    type: "schematic_net_label";
    source_net_id: string;
    center: {
        x: number;
        y: number;
    };
    text: string;
    anchor_side: "left" | "right" | "top" | "bottom";
} | {
    type: "cad_component";
    source_component_id: string;
    position: {
        x: number;
        y: number;
        z: number;
    };
    pcb_component_id: string;
    cad_component_id: string;
    rotation?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    size?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    footprinter_string?: string | undefined;
    model_obj_url?: string | undefined;
    model_stl_url?: string | undefined;
    model_3mf_url?: string | undefined;
    model_jscad?: any;
};
declare const transformSchematicElements: (elms: AnyCircuitElement[], matrix: Matrix) => ({
    type: "source_trace";
    source_trace_id: string;
    connected_source_port_ids: string[];
    connected_source_net_ids: string[];
} | {
    type: "source_port";
    source_component_id: string;
    name: string;
    source_port_id: string;
    pin_number?: number | undefined;
    port_hints?: string[] | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_ground";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_net";
    name: string;
    source_net_id: string;
    member_source_group_ids: string[];
    is_power?: boolean | undefined;
    is_ground?: boolean | undefined;
    is_digital_signal?: boolean | undefined;
    is_analog_signal?: boolean | undefined;
    trace_width?: number | undefined;
} | {
    type: "source_group";
    source_group_id: string;
    name?: string | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "pcb_component";
    width: number;
    height: number;
    source_component_id: string;
    rotation: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "circle" | "square";
    hole_diameter: number;
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "oval";
    hole_width: number;
    hole_height: number;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_diameter: number;
    shape: "circle";
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_width: number;
    hole_height: number;
    shape: "oval" | "pill";
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    outer_width: number;
    outer_height: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_keepout";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    shape: "rect";
    layers: string[];
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    type: "pcb_keepout";
    center: {
        x: number;
        y: number;
    };
    shape: "circle";
    layers: string[];
    radius: number;
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_port";
    source_port_id: string;
    pcb_component_id: string;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_port_id: string;
} | {
    type: "pcb_text";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    text: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_text_id: string;
    lines: number;
    align: "bottom-left";
} | {
    type: "pcb_trace";
    pcb_trace_id: string;
    route: ({
        x: number;
        y: number;
        width: number;
        layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
        route_type: "wire";
        start_pcb_port_id?: string | undefined;
        end_pcb_port_id?: string | undefined;
    } | {
        x: number;
        y: number;
        to_layer: string;
        route_type: "via";
        from_layer: string;
    })[];
    source_trace_id?: string | undefined;
    pcb_component_id?: string | undefined;
    route_thickness_mode?: "constant" | "interpolated" | undefined;
    should_round_corners?: boolean | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_via";
    hole_diameter: number;
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_via_id: string;
    to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    from_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    pcb_trace_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "circle";
    pcb_smtpad_id: string;
    radius: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    width: number;
    height: number;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "rect";
    pcb_smtpad_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_board";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_board_id: string;
    outline?: {
        x: number;
        y: number;
    }[] | undefined;
} | {
    type: "pcb_trace_hint";
    pcb_component_id: string;
    pcb_port_id: string;
    route: {
        x: number;
        y: number;
        trace_width?: number | undefined;
        via?: boolean | undefined;
        to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    }[];
    pcb_trace_hint_id: string;
} | {
    type: "pcb_silkscreen_line";
    x1: number;
    x2: number;
    y1: number;
    y2: number;
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_line_id: string;
    stroke_width: number;
} | {
    type: "pcb_silkscreen_path";
    pcb_component_id: string;
    layer: "top" | "bottom";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_silkscreen_path_id: string;
} | {
    type: "pcb_silkscreen_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_text_id: string;
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
} | {
    type: "pcb_silkscreen_rect";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_rect_id: string;
} | {
    type: "pcb_silkscreen_circle";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    radius: number;
    pcb_silkscreen_circle_id: string;
} | {
    type: "pcb_silkscreen_oval";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_oval_id: string;
    radius_x: number;
    radius_y: number;
} | {
    message: string;
    type: "pcb_trace_error";
    source_trace_id: string;
    error_type: "pcb_trace_error";
    pcb_trace_id: string;
    pcb_trace_error_id: string;
    pcb_component_ids: string[];
    pcb_port_ids: string[];
    center?: {
        x: number;
        y: number;
    } | undefined;
} | {
    message: string;
    type: "pcb_placement_error";
    pcb_placement_error_id: string;
} | {
    message: string;
    type: "pcb_port_not_matched_error";
    pcb_component_ids: string[];
    pcb_error_id: string;
} | {
    type: "pcb_fabrication_note_path";
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_fabrication_note_path_id: string;
    color?: string | undefined;
} | {
    type: "pcb_fabrication_note_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom";
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
    pcb_fabrication_note_text_id: string;
    color?: string | undefined;
} | {
    x: number;
    y: number;
    type: "schematic_box";
    width: number;
    height: number;
    schematic_component_id: string;
} | {
    anchor: "center" | "left" | "right" | "top" | "bottom";
    type: "schematic_text";
    schematic_component_id: string;
    rotation: number;
    schematic_text_id: string;
    text: string;
    position: {
        x: number;
        y: number;
    };
} | {
    type: "schematic_line";
    schematic_component_id: string;
    x1: number;
    x2: number;
    y1: number;
    y2: number;
} | {
    type: "schematic_component";
    source_component_id: string;
    schematic_component_id: string;
    rotation: number;
    size: {
        width: number;
        height: number;
    };
    center: {
        x: number;
        y: number;
    };
    pin_spacing?: number | undefined;
    pin_styles?: Record<string, {
        left_margin?: number | undefined;
        right_margin?: number | undefined;
        top_margin?: number | undefined;
        bottom_margin?: number | undefined;
    }> | undefined;
    box_width?: number | undefined;
    symbol_name?: string | undefined;
    port_arrangement?: {
        left_size: number;
        right_size: number;
        top_size?: number | undefined;
        bottom_size?: number | undefined;
    } | {
        left_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        right_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        top_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
        bottom_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
    } | undefined;
    port_labels?: Record<string, string> | undefined;
} | {
    type: "schematic_port";
    source_port_id: string;
    center: {
        x: number;
        y: number;
    };
    schematic_port_id: string;
    schematic_component_id?: string | undefined;
    facing_direction?: "left" | "right" | "up" | "down" | undefined;
} | {
    type: "schematic_trace";
    source_trace_id: string;
    schematic_trace_id: string;
    edges: {
        from: {
            x: number;
            y: number;
        };
        to: {
            x: number;
            y: number;
        };
        from_schematic_port_id?: string | undefined;
        to_schematic_port_id?: string | undefined;
    }[];
} | {
    type: "schematic_path";
    schematic_component_id: string;
    points: {
        x: number;
        y: number;
    }[];
    fill_color?: "red" | "blue" | undefined;
    is_filled?: boolean | undefined;
} | {
    message: string;
    type: "schematic_error";
    schematic_error_id: string;
    error_type: "schematic_port_not_found";
} | {
    type: "schematic_net_label";
    source_net_id: string;
    center: {
        x: number;
        y: number;
    };
    text: string;
    anchor_side: "left" | "right" | "top" | "bottom";
} | {
    type: "cad_component";
    source_component_id: string;
    position: {
        x: number;
        y: number;
        z: number;
    };
    pcb_component_id: string;
    cad_component_id: string;
    rotation?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    size?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    footprinter_string?: string | undefined;
    model_obj_url?: string | undefined;
    model_stl_url?: string | undefined;
    model_3mf_url?: string | undefined;
    model_jscad?: any;
})[];
declare const transformPCBElement: (elm: AnyCircuitElement, matrix: Matrix) => {
    type: "source_trace";
    source_trace_id: string;
    connected_source_port_ids: string[];
    connected_source_net_ids: string[];
} | {
    type: "source_port";
    source_component_id: string;
    name: string;
    source_port_id: string;
    pin_number?: number | undefined;
    port_hints?: string[] | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_ground";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_net";
    name: string;
    source_net_id: string;
    member_source_group_ids: string[];
    is_power?: boolean | undefined;
    is_ground?: boolean | undefined;
    is_digital_signal?: boolean | undefined;
    is_analog_signal?: boolean | undefined;
    trace_width?: number | undefined;
} | {
    type: "source_group";
    source_group_id: string;
    name?: string | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "pcb_component";
    width: number;
    height: number;
    source_component_id: string;
    rotation: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "circle" | "square";
    hole_diameter: number;
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "oval";
    hole_width: number;
    hole_height: number;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_diameter: number;
    shape: "circle";
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_width: number;
    hole_height: number;
    shape: "oval" | "pill";
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    outer_width: number;
    outer_height: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_keepout";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    shape: "rect";
    layers: string[];
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    type: "pcb_keepout";
    center: {
        x: number;
        y: number;
    };
    shape: "circle";
    layers: string[];
    radius: number;
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_port";
    source_port_id: string;
    pcb_component_id: string;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_port_id: string;
} | {
    type: "pcb_text";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    text: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_text_id: string;
    lines: number;
    align: "bottom-left";
} | {
    type: "pcb_trace";
    pcb_trace_id: string;
    route: ({
        x: number;
        y: number;
        width: number;
        layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
        route_type: "wire";
        start_pcb_port_id?: string | undefined;
        end_pcb_port_id?: string | undefined;
    } | {
        x: number;
        y: number;
        to_layer: string;
        route_type: "via";
        from_layer: string;
    })[];
    source_trace_id?: string | undefined;
    pcb_component_id?: string | undefined;
    route_thickness_mode?: "constant" | "interpolated" | undefined;
    should_round_corners?: boolean | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_via";
    hole_diameter: number;
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_via_id: string;
    to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    from_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    pcb_trace_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "circle";
    pcb_smtpad_id: string;
    radius: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    width: number;
    height: number;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "rect";
    pcb_smtpad_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_board";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_board_id: string;
    outline?: {
        x: number;
        y: number;
    }[] | undefined;
} | {
    type: "pcb_trace_hint";
    pcb_component_id: string;
    pcb_port_id: string;
    route: {
        x: number;
        y: number;
        trace_width?: number | undefined;
        via?: boolean | undefined;
        to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    }[];
    pcb_trace_hint_id: string;
} | {
    type: "pcb_silkscreen_line";
    x1: number;
    x2: number;
    y1: number;
    y2: number;
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_line_id: string;
    stroke_width: number;
} | {
    type: "pcb_silkscreen_path";
    pcb_component_id: string;
    layer: "top" | "bottom";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_silkscreen_path_id: string;
} | {
    type: "pcb_silkscreen_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_text_id: string;
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
} | {
    type: "pcb_silkscreen_rect";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_rect_id: string;
} | {
    type: "pcb_silkscreen_circle";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    radius: number;
    pcb_silkscreen_circle_id: string;
} | {
    type: "pcb_silkscreen_oval";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_oval_id: string;
    radius_x: number;
    radius_y: number;
} | {
    message: string;
    type: "pcb_trace_error";
    source_trace_id: string;
    error_type: "pcb_trace_error";
    pcb_trace_id: string;
    pcb_trace_error_id: string;
    pcb_component_ids: string[];
    pcb_port_ids: string[];
    center?: {
        x: number;
        y: number;
    } | undefined;
} | {
    message: string;
    type: "pcb_placement_error";
    pcb_placement_error_id: string;
} | {
    message: string;
    type: "pcb_port_not_matched_error";
    pcb_component_ids: string[];
    pcb_error_id: string;
} | {
    type: "pcb_fabrication_note_path";
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_fabrication_note_path_id: string;
    color?: string | undefined;
} | {
    type: "pcb_fabrication_note_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom";
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
    pcb_fabrication_note_text_id: string;
    color?: string | undefined;
} | {
    x: number;
    y: number;
    type: "schematic_box";
    width: number;
    height: number;
    schematic_component_id: string;
} | {
    anchor: "center" | "left" | "right" | "top" | "bottom";
    type: "schematic_text";
    schematic_component_id: string;
    rotation: number;
    schematic_text_id: string;
    text: string;
    position: {
        x: number;
        y: number;
    };
} | {
    type: "schematic_line";
    schematic_component_id: string;
    x1: number;
    x2: number;
    y1: number;
    y2: number;
} | {
    type: "schematic_component";
    source_component_id: string;
    schematic_component_id: string;
    rotation: number;
    size: {
        width: number;
        height: number;
    };
    center: {
        x: number;
        y: number;
    };
    pin_spacing?: number | undefined;
    pin_styles?: Record<string, {
        left_margin?: number | undefined;
        right_margin?: number | undefined;
        top_margin?: number | undefined;
        bottom_margin?: number | undefined;
    }> | undefined;
    box_width?: number | undefined;
    symbol_name?: string | undefined;
    port_arrangement?: {
        left_size: number;
        right_size: number;
        top_size?: number | undefined;
        bottom_size?: number | undefined;
    } | {
        left_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        right_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        top_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
        bottom_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
    } | undefined;
    port_labels?: Record<string, string> | undefined;
} | {
    type: "schematic_port";
    source_port_id: string;
    center: {
        x: number;
        y: number;
    };
    schematic_port_id: string;
    schematic_component_id?: string | undefined;
    facing_direction?: "left" | "right" | "up" | "down" | undefined;
} | {
    type: "schematic_trace";
    source_trace_id: string;
    schematic_trace_id: string;
    edges: {
        from: {
            x: number;
            y: number;
        };
        to: {
            x: number;
            y: number;
        };
        from_schematic_port_id?: string | undefined;
        to_schematic_port_id?: string | undefined;
    }[];
} | {
    type: "schematic_path";
    schematic_component_id: string;
    points: {
        x: number;
        y: number;
    }[];
    fill_color?: "red" | "blue" | undefined;
    is_filled?: boolean | undefined;
} | {
    message: string;
    type: "schematic_error";
    schematic_error_id: string;
    error_type: "schematic_port_not_found";
} | {
    type: "schematic_net_label";
    source_net_id: string;
    center: {
        x: number;
        y: number;
    };
    text: string;
    anchor_side: "left" | "right" | "top" | "bottom";
} | {
    type: "cad_component";
    source_component_id: string;
    position: {
        x: number;
        y: number;
        z: number;
    };
    pcb_component_id: string;
    cad_component_id: string;
    rotation?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    size?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    footprinter_string?: string | undefined;
    model_obj_url?: string | undefined;
    model_stl_url?: string | undefined;
    model_3mf_url?: string | undefined;
    model_jscad?: any;
};
declare const transformPCBElements: (elms: AnyCircuitElement[], matrix: Matrix) => ({
    type: "source_trace";
    source_trace_id: string;
    connected_source_port_ids: string[];
    connected_source_net_ids: string[];
} | {
    type: "source_port";
    source_component_id: string;
    name: string;
    source_port_id: string;
    pin_number?: number | undefined;
    port_hints?: string[] | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_ground";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "led";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_net";
    name: string;
    source_net_id: string;
    member_source_group_ids: string[];
    is_power?: boolean | undefined;
    is_ground?: boolean | undefined;
    is_digital_signal?: boolean | undefined;
    is_analog_signal?: boolean | undefined;
    trace_width?: number | undefined;
} | {
    type: "source_group";
    source_group_id: string;
    name?: string | undefined;
} | {
    type: "source_component";
    ftype: "simple_bug";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_chip";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_capacitor";
    source_component_id: string;
    name: string;
    capacitance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_diode";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "source_component";
    ftype: "simple_resistor";
    source_component_id: string;
    name: string;
    resistance: number;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    voltage: number;
    type: "source_component";
    ftype: "simple_power_source";
    source_component_id: string;
    name: string;
    manufacturer_part_number?: string | undefined;
    supplier_part_numbers?: Partial<Record<"jlcpcb" | "macrofab" | "pcbway" | "digikey" | "mouser" | "lcsc", string[]>> | undefined;
} | {
    type: "pcb_component";
    width: number;
    height: number;
    source_component_id: string;
    rotation: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "circle" | "square";
    hole_diameter: number;
} | {
    x: number;
    y: number;
    type: "pcb_hole";
    pcb_hole_id: string;
    hole_shape: "oval";
    hole_width: number;
    hole_height: number;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_diameter: number;
    shape: "circle";
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_plated_hole";
    hole_width: number;
    hole_height: number;
    shape: "oval" | "pill";
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_plated_hole_id: string;
    outer_width: number;
    outer_height: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_keepout";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    shape: "rect";
    layers: string[];
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    type: "pcb_keepout";
    center: {
        x: number;
        y: number;
    };
    shape: "circle";
    layers: string[];
    radius: number;
    pcb_keepout_id: string;
    description?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_port";
    source_port_id: string;
    pcb_component_id: string;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_port_id: string;
} | {
    type: "pcb_text";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    text: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_text_id: string;
    lines: number;
    align: "bottom-left";
} | {
    type: "pcb_trace";
    pcb_trace_id: string;
    route: ({
        x: number;
        y: number;
        width: number;
        layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
        route_type: "wire";
        start_pcb_port_id?: string | undefined;
        end_pcb_port_id?: string | undefined;
    } | {
        x: number;
        y: number;
        to_layer: string;
        route_type: "via";
        from_layer: string;
    })[];
    source_trace_id?: string | undefined;
    pcb_component_id?: string | undefined;
    route_thickness_mode?: "constant" | "interpolated" | undefined;
    should_round_corners?: boolean | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_via";
    hole_diameter: number;
    outer_diameter: number;
    layers: ("top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6")[];
    pcb_via_id: string;
    to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    from_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    pcb_trace_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "circle";
    pcb_smtpad_id: string;
    radius: number;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    x: number;
    y: number;
    type: "pcb_smtpad";
    width: number;
    height: number;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    shape: "rect";
    pcb_smtpad_id: string;
    port_hints?: string[] | undefined;
    pcb_component_id?: string | undefined;
    pcb_port_id?: string | undefined;
} | {
    type: "pcb_board";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_board_id: string;
    outline?: {
        x: number;
        y: number;
    }[] | undefined;
} | {
    type: "pcb_trace_hint";
    pcb_component_id: string;
    pcb_port_id: string;
    route: {
        x: number;
        y: number;
        trace_width?: number | undefined;
        via?: boolean | undefined;
        to_layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    }[];
    pcb_trace_hint_id: string;
} | {
    type: "pcb_silkscreen_line";
    x1: number;
    x2: number;
    y1: number;
    y2: number;
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_line_id: string;
    stroke_width: number;
} | {
    type: "pcb_silkscreen_path";
    pcb_component_id: string;
    layer: "top" | "bottom";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_silkscreen_path_id: string;
} | {
    type: "pcb_silkscreen_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_text_id: string;
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
} | {
    type: "pcb_silkscreen_rect";
    width: number;
    height: number;
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    pcb_silkscreen_rect_id: string;
} | {
    type: "pcb_silkscreen_circle";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    radius: number;
    pcb_silkscreen_circle_id: string;
} | {
    type: "pcb_silkscreen_oval";
    center: {
        x: number;
        y: number;
    };
    pcb_component_id: string;
    layer: "top" | "bottom";
    pcb_silkscreen_oval_id: string;
    radius_x: number;
    radius_y: number;
} | {
    message: string;
    type: "pcb_trace_error";
    source_trace_id: string;
    error_type: "pcb_trace_error";
    pcb_trace_id: string;
    pcb_trace_error_id: string;
    pcb_component_ids: string[];
    pcb_port_ids: string[];
    center?: {
        x: number;
        y: number;
    } | undefined;
} | {
    message: string;
    type: "pcb_placement_error";
    pcb_placement_error_id: string;
} | {
    message: string;
    type: "pcb_port_not_matched_error";
    pcb_component_ids: string[];
    pcb_error_id: string;
} | {
    type: "pcb_fabrication_note_path";
    pcb_component_id: string;
    layer: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6";
    route: {
        x: number;
        y: number;
    }[];
    stroke_width: number;
    pcb_fabrication_note_path_id: string;
    color?: string | undefined;
} | {
    type: "pcb_fabrication_note_text";
    text: string;
    pcb_component_id: string;
    layer: "top" | "bottom";
    font: "tscircuit2024";
    font_size: number;
    anchor_position: {
        x: number;
        y: number;
    };
    anchor_alignment: "center" | "top_left" | "top_right" | "bottom_left" | "bottom_right";
    pcb_fabrication_note_text_id: string;
    color?: string | undefined;
} | {
    x: number;
    y: number;
    type: "schematic_box";
    width: number;
    height: number;
    schematic_component_id: string;
} | {
    anchor: "center" | "left" | "right" | "top" | "bottom";
    type: "schematic_text";
    schematic_component_id: string;
    rotation: number;
    schematic_text_id: string;
    text: string;
    position: {
        x: number;
        y: number;
    };
} | {
    type: "schematic_line";
    schematic_component_id: string;
    x1: number;
    x2: number;
    y1: number;
    y2: number;
} | {
    type: "schematic_component";
    source_component_id: string;
    schematic_component_id: string;
    rotation: number;
    size: {
        width: number;
        height: number;
    };
    center: {
        x: number;
        y: number;
    };
    pin_spacing?: number | undefined;
    pin_styles?: Record<string, {
        left_margin?: number | undefined;
        right_margin?: number | undefined;
        top_margin?: number | undefined;
        bottom_margin?: number | undefined;
    }> | undefined;
    box_width?: number | undefined;
    symbol_name?: string | undefined;
    port_arrangement?: {
        left_size: number;
        right_size: number;
        top_size?: number | undefined;
        bottom_size?: number | undefined;
    } | {
        left_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        right_side?: {
            pins: number[];
            direction?: "top-to-bottom" | "bottom-to-top" | undefined;
        } | undefined;
        top_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
        bottom_side?: {
            pins: number[];
            direction?: "left-to-right" | "right-to-left" | undefined;
        } | undefined;
    } | undefined;
    port_labels?: Record<string, string> | undefined;
} | {
    type: "schematic_port";
    source_port_id: string;
    center: {
        x: number;
        y: number;
    };
    schematic_port_id: string;
    schematic_component_id?: string | undefined;
    facing_direction?: "left" | "right" | "up" | "down" | undefined;
} | {
    type: "schematic_trace";
    source_trace_id: string;
    schematic_trace_id: string;
    edges: {
        from: {
            x: number;
            y: number;
        };
        to: {
            x: number;
            y: number;
        };
        from_schematic_port_id?: string | undefined;
        to_schematic_port_id?: string | undefined;
    }[];
} | {
    type: "schematic_path";
    schematic_component_id: string;
    points: {
        x: number;
        y: number;
    }[];
    fill_color?: "red" | "blue" | undefined;
    is_filled?: boolean | undefined;
} | {
    message: string;
    type: "schematic_error";
    schematic_error_id: string;
    error_type: "schematic_port_not_found";
} | {
    type: "schematic_net_label";
    source_net_id: string;
    center: {
        x: number;
        y: number;
    };
    text: string;
    anchor_side: "left" | "right" | "top" | "bottom";
} | {
    type: "cad_component";
    source_component_id: string;
    position: {
        x: number;
        y: number;
        z: number;
    };
    pcb_component_id: string;
    cad_component_id: string;
    rotation?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    size?: {
        x: number;
        y: number;
        z: number;
    } | undefined;
    layer?: "top" | "bottom" | "inner1" | "inner2" | "inner3" | "inner4" | "inner5" | "inner6" | undefined;
    footprinter_string?: string | undefined;
    model_obj_url?: string | undefined;
    model_stl_url?: string | undefined;
    model_3mf_url?: string | undefined;
    model_jscad?: any;
})[];

declare const directionToVec: (direction: "up" | "down" | "left" | "right") => {
    x: number;
    y: number;
};
declare const vecToDirection: ({ x, y }: {
    x: number;
    y: number;
}) => "left" | "right" | "up" | "down";
declare const rotateClockwise: (direction: "up" | "down" | "left" | "right") => "left" | "right" | "up" | "down";
declare const rotateCounterClockwise: (direction: "up" | "down" | "left" | "right") => "left" | "right" | "up" | "down";
declare const rotateDirection: (direction: "up" | "down" | "left" | "right", num90DegreeClockwiseTurns: number) => "left" | "right" | "up" | "down";
declare const oppositeDirection: (direction: "up" | "down" | "left" | "right") => "left" | "right" | "up" | "down";
declare const oppositeSide: (sideOrDir: "up" | "down" | "top" | "bottom" | "left" | "right") => "left" | "right" | "top" | "bottom";

/**
 * Filter elements to match the selector, e.g. to access the left port of a
 * resistor you can do ".R1 > port.left"
 */
declare const applySelector: (elements: AnyCircuitElement[], selectorRaw: string) => AnyCircuitElement[];
declare const applySelectorAST: (elements: AnyCircuitElement[], selectorAST: parsel.AST) => AnyCircuitElement[];

declare const getElementById: (soup: AnyCircuitElement[], id: string) => AnyCircuitElement | null;

declare const getElementId: (elm: AnyCircuitElement) => string;

declare function getReadableNameForPcbTrace(soup: AnyCircuitElement[], pcb_trace_id: string): string;

declare function getReadableNameForPcbSmtpad(soup: AnyCircuitElement[], pcb_smtpad_id: string): string;

declare const getReadableNameForPcbPort: (soup: AnyCircuitElement[], pcb_port_id: string) => string;

declare const getReadableNameForElement: (soup: AnyCircuitElement[], elm: AnyCircuitElement | string) => string;

declare const getBoundsOfPcbElements: (elements: AnyCircuitElement[]) => {
    minX: number;
    minY: number;
    maxX: number;
    maxY: number;
};

declare const findBoundsAndCenter: (elements: AnyCircuitElement[]) => {
    center: {
        x: number;
        y: number;
    };
    width: number;
    height: number;
};

export { type GetSoupUtilFn, type SoupInputUtilObjects, type SoupUtilObjects, type SoupUtilOptions, applySelector, applySelectorAST, directionToVec, findBoundsAndCenter, getBoundsOfPcbElements, getElementById, getElementId, getReadableNameForElement, getReadableNameForPcbPort, getReadableNameForPcbSmtpad, getReadableNameForPcbTrace, oppositeDirection, oppositeSide, rotateClockwise, rotateCounterClockwise, rotateDirection, su, transformPCBElement, transformPCBElements, transformSchematicElement, transformSchematicElements, vecToDirection };
